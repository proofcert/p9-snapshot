============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n168.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 04:00:08 CDT 2014
% CPUTime    : 0.14 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 37364 was started by sandbox on n168.star.cs.uiowa.edu,
Fri Jun  6 04:00:08 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_37332_n168.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 14.
% Level of proof is 3.
% Maximum clause weight is 18.000.
% Given clauses 20.


1 (all A all B (distinct_points(A,B) -> -apart_point_and_line(A,line_connecting(A,B)))).  [assumption].
2 (all A all B (distinct_points(A,B) -> -apart_point_and_line(B,line_connecting(A,B)))).  [assumption].
3 (all A all B all C all D (distinct_points(A,B) & distinct_lines(C,D) -> apart_point_and_line(A,C) | apart_point_and_line(A,D) | apart_point_and_line(B,C) | apart_point_and_line(B,D))).  [assumption].
4 -(all A all B all C (distinct_points(A,B) & -apart_point_and_line(A,C) & -apart_point_and_line(B,C) -> -distinct_lines(C,line_connecting(A,B)))).  [assumption].
5 distinct_points(c1,c2).  [clausify(4)].
6 distinct_lines(c3,line_connecting(c1,c2)).  [clausify(4)].
7 -apart_point_and_line(c1,c3).  [clausify(4)].
8 -apart_point_and_line(c2,c3).  [clausify(4)].
9 -distinct_points(A,B) | -apart_point_and_line(A,line_connecting(A,B)).  [clausify(1)].
10 -distinct_points(A,B) | -apart_point_and_line(B,line_connecting(A,B)).  [clausify(2)].
11 -distinct_points(A,B) | -distinct_lines(C,D) | apart_point_and_line(A,C) | apart_point_and_line(A,D) | apart_point_and_line(B,C) | apart_point_and_line(B,D).  [clausify(3)].
12 -apart_point_and_line(c1,line_connecting(c1,c2)).  [resolve(9,a,5,a)].
13 -apart_point_and_line(c2,line_connecting(c1,c2)).  [resolve(10,a,5,a)].
14 -distinct_points(A,B) | apart_point_and_line(A,c3) | apart_point_and_line(A,line_connecting(c1,c2)) | apart_point_and_line(B,c3) | apart_point_and_line(B,line_connecting(c1,c2)).  [resolve(11,b,6,a)].
15 -distinct_points(c1,A) | apart_point_and_line(c1,line_connecting(c1,c2)) | apart_point_and_line(A,c3) | apart_point_and_line(A,line_connecting(c1,c2)).  [resolve(14,b,7,a)].
16 -distinct_points(c1,A) | apart_point_and_line(A,c3) | apart_point_and_line(A,line_connecting(c1,c2)).  [resolve(15,b,12,a)].
17 -distinct_points(c1,c2) | apart_point_and_line(c2,line_connecting(c1,c2)).  [resolve(16,b,8,a)].
18 -distinct_points(c1,c2).  [resolve(17,b,13,a)].
19 $F.  [resolve(5,a,18,a)].

============================== end of proof ==========================
