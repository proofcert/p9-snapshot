============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n128.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 01:12:58 CDT 2014
% CPUTime    : 0.14 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 64795 was started by sandbox on n128.star.cs.uiowa.edu,
Fri Jun  6 01:12:58 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_64763_n128.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 30.
% Level of proof is 8.
% Maximum clause weight is 29.000.
% Given clauses 48.


1 (all A all B (element(B,powerset(powerset(A))) -> (all C (element(C,powerset(powerset(A))) -> (C = complements_of_subsets(A,B) <-> (all D (element(D,powerset(A)) -> (in(D,C) <-> in(subset_complement(A,D),B))))))))).  [assumption].
2 (all A all B (element(B,powerset(powerset(A))) -> complements_of_subsets(A,complements_of_subsets(A,B)) = B)).  [assumption].
3 (exists A empty(A)).  [assumption].
4 (all A exists B (element(B,powerset(A)) & empty(B))).  [assumption].
5 (all A (empty(A) -> A = empty_set)).  [assumption].
6 (all A all B -(in(A,B) & empty(B))).  [assumption].
7 -(all A all B (element(B,powerset(powerset(A))) -> -(B != empty_set & complements_of_subsets(A,B) = empty_set))).  [assumption].
8 empty(c1).  [clausify(3)].
9 empty(f5(A)).  [clausify(4)].
10 element(f5(A),powerset(A)).  [clausify(4)].
11 element(c4,powerset(powerset(c3))).  [clausify(7)].
12 complements_of_subsets(c3,c4) = empty_set.  [clausify(7)].
13 empty_set = complements_of_subsets(c3,c4).  [copy(12),flip(a)].
14 empty_set != c4.  [clausify(7)].
15 complements_of_subsets(c3,c4) != c4.  [para(13(a,1),14(a,1))].
16 -in(A,B) | -empty(B).  [clausify(6)].
17 -empty(A) | empty_set = A.  [clausify(5)].
18 -empty(A) | complements_of_subsets(c3,c4) = A.  [para(13(a,1),17(b,1))].
19 -element(A,powerset(powerset(B))) | complements_of_subsets(B,complements_of_subsets(B,A)) = A.  [clausify(2)].
20 -element(A,powerset(powerset(B))) | -element(C,powerset(powerset(B))) | complements_of_subsets(B,A) = C | in(f2(B,A,C),C) | in(subset_complement(B,f2(B,A,C)),A).  [clausify(1)].
21 -element(A,powerset(powerset(B))) | complements_of_subsets(B,A) = A | in(f2(B,A,A),A) | in(subset_complement(B,f2(B,A,A)),A).  [factor(20,a,b)].
22 -in(A,c1).  [resolve(16,b,8,a)].
23 complements_of_subsets(c3,c4) = f5(A).  [resolve(18,a,9,a)].
24 f5(A) = complements_of_subsets(c3,c4).  [copy(23),flip(a)].
25 complements_of_subsets(c3,c4) = c1.  [resolve(18,a,8,a)].
26 f5(A) = c1.  [para(25(a,1),24(a,2))].
27 c1 != c4.  [para(25(a,1),15(a,1))].
28 c4 != c1.  [copy(27),flip(a)].
29 element(c1,powerset(A)).  [para(26(a,1),10(a,1))].
30 complements_of_subsets(c3,complements_of_subsets(c3,c4)) = c4.  [resolve(19,a,11,a)].
31 complements_of_subsets(c3,c1) = c4.  [para(25(a,1),30(a,1,2))].
32 complements_of_subsets(A,c1) = c1 | in(f2(A,c1,c1),c1) | in(subset_complement(A,f2(A,c1,c1)),c1).  [resolve(29,a,21,a)].
33 complements_of_subsets(A,c1) = c1 | in(subset_complement(A,f2(A,c1,c1)),c1).  [resolve(22,a,32,b)].
34 complements_of_subsets(A,c1) = c1.  [resolve(22,a,33,b)].
35 c1 = c4.  [para(34(a,1),31(a,1))].
36 c4 = c1.  [copy(35),flip(a)].
37 $F.  [resolve(28,a,36,a)].

============================== end of proof ==========================
