============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n063.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 04:56:43 CDT 2014
% CPUTime    : 0.13 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 47157 was started by sandbox on n063.star.cs.uiowa.edu,
Fri Jun  6 04:56:43 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_47125_n063.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 10.
% Level of proof is 4.
% Maximum clause weight is 11.000.
% Given clauses 17.


1 (all A all B all C (convergent_lines(A,B) -> (apart_point_and_line(C,A) | apart_point_and_line(C,B) -> distinct_points(C,intersection_point(A,B))))).  [assumption].
2 -(all A all B all C all D (distinct_points(A,B) & convergent_lines(C,D) & -distinct_points(A,intersection_point(C,D)) -> -apart_point_and_line(A,C) & -apart_point_and_line(A,D))).  [assumption].
3 convergent_lines(c3,c4).  [clausify(2)].
4 apart_point_and_line(c1,c3) | apart_point_and_line(c1,c4).  [clausify(2)].
5 -distinct_points(c1,intersection_point(c3,c4)).  [clausify(2)].
6 -convergent_lines(A,B) | -apart_point_and_line(C,A) | distinct_points(C,intersection_point(A,B)).  [clausify(1)].
7 -convergent_lines(A,B) | -apart_point_and_line(C,B) | distinct_points(C,intersection_point(A,B)).  [clausify(1)].
8 -apart_point_and_line(A,c3) | distinct_points(A,intersection_point(c3,c4)).  [resolve(6,a,3,a)].
9 -apart_point_and_line(c1,c3).  [resolve(8,b,5,a)].
10 apart_point_and_line(c1,c4).  [resolve(9,a,4,a)].
11 -apart_point_and_line(A,c4) | distinct_points(A,intersection_point(c3,c4)).  [resolve(7,a,3,a)].
12 -apart_point_and_line(c1,c4).  [resolve(11,b,5,a)].
13 $F.  [resolve(10,a,12,a)].

============================== end of proof ==========================
