============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n109.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 08:03:43 CDT 2014
% CPUTime    : 109.56 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 2062 was started by sandbox on n109.star.cs.uiowa.edu,
Fri Jun  6 08:03:43 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_2024_n109.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 109.04 (+ 0.38) seconds.
% Length of proof is 33.
% Level of proof is 11.
% Maximum clause weight is 22.000.
% Given clauses 27586.


1 (all A -empty(powerset(A))).  [assumption].
2 (all A all B (topological_space(A) & top_str(A) & element(B,powerset(powerset(the_carrier(A)))) -> (exists C all D (in(D,C) <-> in(D,powerset(the_carrier(A))) & in(set_difference(cast_as_carrier_subset(A),D),B))))).  [assumption].
3 (all A all B ((-empty(A) -> (element(B,A) <-> in(B,A))) & (empty(A) -> (element(B,A) <-> empty(B))))).  [assumption].
4 (all A all B ((all C (in(C,A) -> in(C,B))) -> element(A,powerset(B)))).  [assumption].
5 -(all A all B (topological_space(A) & top_str(A) & element(B,powerset(powerset(the_carrier(A)))) -> (exists C (element(C,powerset(powerset(the_carrier(A)))) & (all D (element(D,powerset(the_carrier(A))) -> (in(D,C) <-> in(set_difference(cast_as_carrier_subset(A),D),B)))))))).  [assumption].
6 topological_space(c4).  [clausify(5)].
7 -topological_space(A) | -top_str(A) | -element(B,powerset(powerset(the_carrier(A)))) | -in(C,f4(A,B)) | in(C,powerset(the_carrier(A))).  [clausify(2)].
8 -topological_space(A) | -top_str(A) | -element(B,powerset(powerset(the_carrier(A)))) | -in(C,f4(A,B)) | in(set_difference(cast_as_carrier_subset(A),C),B).  [clausify(2)].
9 -topological_space(A) | -top_str(A) | -element(B,powerset(powerset(the_carrier(A)))) | in(C,f4(A,B)) | -in(C,powerset(the_carrier(A))) | -in(set_difference(cast_as_carrier_subset(A),C),B).  [clausify(2)].
10 top_str(c4).  [clausify(5)].
11 element(c5,powerset(powerset(the_carrier(c4)))).  [clausify(5)].
12 in(f6(A,B),A) | element(A,powerset(B)).  [clausify(4)].
13 -empty(powerset(A)).  [clausify(1)].
14 -element(A,powerset(powerset(the_carrier(c4)))) | -in(f7(A),A) | -in(set_difference(cast_as_carrier_subset(c4),f7(A)),c5).  [clausify(5)].
15 empty(A) | -element(B,A) | in(B,A).  [clausify(3)].
16 -in(f6(A,B),B) | element(A,powerset(B)).  [clausify(4)].
17 -element(A,powerset(powerset(the_carrier(c4)))) | element(f7(A),powerset(the_carrier(c4))).  [clausify(5)].
18 -element(A,powerset(powerset(the_carrier(c4)))) | in(f7(A),A) | in(set_difference(cast_as_carrier_subset(c4),f7(A)),c5).  [clausify(5)].
19 -top_str(c4) | -element(A,powerset(powerset(the_carrier(c4)))) | -in(B,f4(c4,A)) | in(B,powerset(the_carrier(c4))).  [resolve(7,a,6,a)].
20 -element(A,powerset(powerset(the_carrier(c4)))) | -in(B,f4(c4,A)) | in(B,powerset(the_carrier(c4))).  [resolve(10,a,19,a)].
21 -top_str(c4) | -element(A,powerset(powerset(the_carrier(c4)))) | -in(B,f4(c4,A)) | in(set_difference(cast_as_carrier_subset(c4),B),A).  [resolve(8,a,6,a)].
22 -element(A,powerset(powerset(the_carrier(c4)))) | -in(B,f4(c4,A)) | in(set_difference(cast_as_carrier_subset(c4),B),A).  [resolve(10,a,21,a)].
23 -top_str(c4) | -element(A,powerset(powerset(the_carrier(c4)))) | in(B,f4(c4,A)) | -in(B,powerset(the_carrier(c4))) | -in(set_difference(cast_as_carrier_subset(c4),B),A).  [resolve(9,a,6,a)].
24 -element(A,powerset(powerset(the_carrier(c4)))) | in(B,f4(c4,A)) | -in(B,powerset(the_carrier(c4))) | -in(set_difference(cast_as_carrier_subset(c4),B),A).  [resolve(10,a,23,a)].
25 -element(A,powerset(powerset(the_carrier(c4)))) | in(f6(f4(c4,A),B),powerset(the_carrier(c4))) | element(f4(c4,A),powerset(B)).  [resolve(20,b,12,a)].
26 in(f6(f4(c4,c5),A),powerset(the_carrier(c4))) | element(f4(c4,c5),powerset(A)).  [resolve(25,a,11,a)].
27 element(f4(c4,c5),powerset(powerset(the_carrier(c4)))) | element(f4(c4,c5),powerset(powerset(the_carrier(c4)))).  [resolve(26,a,16,a)].
28 element(f4(c4,c5),powerset(powerset(the_carrier(c4)))).  [copy(27),merge(b)].
29 in(f7(f4(c4,c5)),f4(c4,c5)) | in(set_difference(cast_as_carrier_subset(c4),f7(f4(c4,c5))),c5).  [resolve(28,a,18,a)].
30 element(f7(f4(c4,c5)),powerset(the_carrier(c4))).  [resolve(28,a,17,a)].
31 empty(powerset(the_carrier(c4))) | in(f7(f4(c4,c5)),powerset(the_carrier(c4))).  [resolve(30,a,15,b)].
32 in(f7(f4(c4,c5)),powerset(the_carrier(c4))).  [resolve(13,a,31,a)].
33 in(f7(f4(c4,c5)),f4(c4,c5)) | -element(c5,powerset(powerset(the_carrier(c4)))) | in(f7(f4(c4,c5)),f4(c4,c5)) | -in(f7(f4(c4,c5)),powerset(the_carrier(c4))).  [resolve(29,b,24,d)].
34 in(f7(f4(c4,c5)),f4(c4,c5)) | -element(c5,powerset(powerset(the_carrier(c4)))) | -in(f7(f4(c4,c5)),powerset(the_carrier(c4))).  [copy(33),merge(c)].
35 in(f7(f4(c4,c5)),f4(c4,c5)) | -in(f7(f4(c4,c5)),powerset(the_carrier(c4))).  [resolve(11,a,34,b)].
36 in(f7(f4(c4,c5)),f4(c4,c5)).  [resolve(32,a,35,b)].
37 -element(c5,powerset(powerset(the_carrier(c4)))) | in(set_difference(cast_as_carrier_subset(c4),f7(f4(c4,c5))),c5).  [resolve(36,a,22,b)].
38 in(set_difference(cast_as_carrier_subset(c4),f7(f4(c4,c5))),c5).  [resolve(11,a,37,a)].
39 -element(f4(c4,c5),powerset(powerset(the_carrier(c4)))) | -in(set_difference(cast_as_carrier_subset(c4),f7(f4(c4,c5))),c5).  [resolve(36,a,14,b)].
40 -in(set_difference(cast_as_carrier_subset(c4),f7(f4(c4,c5))),c5).  [resolve(28,a,39,a)].
41 $F.  [resolve(38,a,40,a)].

============================== end of proof ==========================
