============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n163.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 21:47:03 CDT 2014
% CPUTime    : 0.12 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 9801 was started by sandbox on n163.star.cs.uiowa.edu,
Thu Jun  5 21:47:03 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_9769_n163.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 37.
% Level of proof is 8.
% Maximum clause weight is 2.000.
% Given clauses 0.


1 (all A (cowlThing(A) & -cowlNothing(A))).  [assumption].
2 (all A (xsd_string(A) <-> -xsd_integer(A))).  [assumption].
3 -((all A (cowlThing(A) & -cowlNothing(A))) & (all A (xsd_string(A) <-> -xsd_integer(A))) & (all A (-cB(A) & -cA(A) <-> -(cA(A) | cB(A))))).  [assumption].
4 -cowlThing(c1) | cowlNothing(c1) | xsd_string(c2) | -xsd_integer(c2) | -cB(c3).  [clausify(3)].
5 cowlThing(A).  [clausify(1)].
6 -cowlThing(c1) | cowlNothing(c1) | xsd_string(c2) | -xsd_integer(c2) | -cA(c3).  [clausify(3)].
7 -cowlThing(c1) | cowlNothing(c1) | -xsd_string(c2) | xsd_integer(c2) | -cB(c3).  [clausify(3)].
8 -cowlThing(c1) | cowlNothing(c1) | -xsd_string(c2) | xsd_integer(c2) | -cA(c3).  [clausify(3)].
9 -cowlThing(c1) | cowlNothing(c1) | xsd_string(c2) | -xsd_integer(c2) | cB(c3) | cA(c3).  [clausify(3)].
10 -cowlThing(c1) | cowlNothing(c1) | -xsd_string(c2) | xsd_integer(c2) | cB(c3) | cA(c3).  [clausify(3)].
11 -xsd_string(A) | -xsd_integer(A).  [clausify(2)].
12 xsd_string(A) | xsd_integer(A).  [clausify(2)].
13 cowlNothing(c1) | xsd_string(c2) | -xsd_integer(c2) | -cB(c3).  [resolve(4,a,5,a)].
14 cowlNothing(c1) | xsd_string(c2) | -xsd_integer(c2) | -cA(c3).  [resolve(6,a,5,a)].
15 cowlNothing(c1) | -xsd_string(c2) | xsd_integer(c2) | -cB(c3).  [resolve(7,a,5,a)].
16 cowlNothing(c1) | -xsd_string(c2) | xsd_integer(c2) | -cA(c3).  [resolve(8,a,5,a)].
17 cowlNothing(c1) | xsd_string(c2) | -xsd_integer(c2) | cB(c3) | cA(c3).  [resolve(9,a,5,a)].
18 cowlNothing(c1) | -xsd_string(c2) | xsd_integer(c2) | cB(c3) | cA(c3).  [resolve(10,a,5,a)].
19 cowlNothing(c1) | -xsd_integer(c2) | -cB(c3) | -xsd_integer(c2).  [resolve(13,b,11,a)].
20 -cowlNothing(A).  [clausify(1)].
21 cowlNothing(c1) | -xsd_integer(c2) | -cA(c3) | -xsd_integer(c2).  [resolve(14,b,11,a)].
22 cowlNothing(c1) | xsd_integer(c2) | -cB(c3) | xsd_integer(c2).  [resolve(15,b,12,a)].
23 cowlNothing(c1) | xsd_integer(c2) | -cA(c3) | xsd_integer(c2).  [resolve(16,b,12,a)].
24 cowlNothing(c1) | -xsd_integer(c2) | cB(c3) | cA(c3) | -xsd_integer(c2).  [resolve(17,b,11,a)].
25 cowlNothing(c1) | xsd_integer(c2) | cB(c3) | cA(c3) | xsd_integer(c2).  [resolve(18,b,12,a)].
26 -xsd_integer(c2) | cB(c3) | cA(c3) | -xsd_integer(c2).  [resolve(24,a,20,a)].
27 -xsd_integer(c2) | -cB(c3) | -xsd_integer(c2).  [resolve(19,a,20,a)].
28 xsd_integer(c2) | -cB(c3) | xsd_integer(c2).  [resolve(22,a,20,a)].
29 xsd_integer(c2) | cB(c3) | cA(c3) | xsd_integer(c2).  [resolve(25,a,20,a)].
30 -xsd_integer(c2) | cA(c3) | -xsd_integer(c2) | -xsd_integer(c2) | -xsd_integer(c2).  [resolve(26,b,27,b)].
31 -xsd_integer(c2) | -cA(c3) | -xsd_integer(c2).  [resolve(21,a,20,a)].
32 xsd_integer(c2) | -cA(c3) | xsd_integer(c2).  [resolve(23,a,20,a)].
33 xsd_integer(c2) | cA(c3) | xsd_integer(c2) | xsd_integer(c2) | xsd_integer(c2).  [resolve(29,b,28,b)].
34 -xsd_integer(c2) | -xsd_integer(c2) | -xsd_integer(c2) | -xsd_integer(c2) | -xsd_integer(c2) | -xsd_integer(c2).  [resolve(30,b,31,b)].
35 -xsd_integer(c2) | -xsd_integer(c2) | -xsd_integer(c2) | -xsd_integer(c2) | -xsd_integer(c2).  [copy(34),merge(b)].
36 -xsd_integer(c2) | -xsd_integer(c2) | -xsd_integer(c2) | -xsd_integer(c2).  [copy(35),merge(b)].
37 -xsd_integer(c2) | -xsd_integer(c2) | -xsd_integer(c2).  [copy(36),merge(b)].
38 -xsd_integer(c2) | -xsd_integer(c2).  [copy(37),merge(b)].
39 -xsd_integer(c2).  [copy(38),merge(b)].
40 xsd_integer(c2) | xsd_integer(c2) | xsd_integer(c2) | xsd_integer(c2) | xsd_integer(c2) | xsd_integer(c2).  [resolve(33,b,32,b)].
41 xsd_integer(c2) | xsd_integer(c2) | xsd_integer(c2) | xsd_integer(c2) | xsd_integer(c2).  [copy(40),merge(b)].
42 xsd_integer(c2) | xsd_integer(c2) | xsd_integer(c2) | xsd_integer(c2).  [copy(41),merge(b)].
43 xsd_integer(c2) | xsd_integer(c2) | xsd_integer(c2).  [copy(42),merge(b)].
44 xsd_integer(c2) | xsd_integer(c2).  [copy(43),merge(b)].
45 xsd_integer(c2).  [copy(44),merge(b)].
46 $F.  [resolve(39,a,45,a)].

============================== end of proof ==========================
