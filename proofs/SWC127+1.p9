============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n168.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 01:57:18 CDT 2014
% CPUTime    : 2.93 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 56106 was started by sandbox on n168.star.cs.uiowa.edu,
Fri Jun  6 01:57:18 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_56074_n168.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 2.70 (+ 0.02) seconds.
% Length of proof is 18.
% Level of proof is 5.
% Maximum clause weight is 10.000.
% Given clauses 1510.


1 (all A (ssList(A) -> (all B (ssList(B) -> (neq(A,B) <-> A != B))))).  [assumption].
2 -(all A (ssList(A) -> (all B (ssList(B) -> (all C (ssList(C) -> (all D (ssList(D) -> B != D | A != C | -neq(B,nil) | -segmentP(D,C) | -singletonP(C) & neq(D,nil) | neq(A,nil) & segmentP(B,A))))))))).  [assumption].
3 -ssList(A) | -ssList(B) | neq(A,B) | B = A.  [clausify(1)].
4 ssList(nil).  [assumption].
5 -singletonP(nil).  [assumption].
6 ssList(c3).  [clausify(2)].
7 c6 = c4.  [clausify(2)].
8 c5 = c3.  [clausify(2)].
9 neq(c4,nil).  [clausify(2)].
10 segmentP(c6,c5).  [clausify(2)].
11 segmentP(c4,c5).  [para(7(a,1),10(a,1))].
12 segmentP(c4,c3).  [para(8(a,1),11(a,2))].
13 singletonP(c5) | -neq(c6,nil).  [clausify(2)].
14 singletonP(c3) | -neq(c6,nil).  [para(8(a,1),13(a,1))].
15 singletonP(c3) | -neq(c4,nil).  [para(7(a,1),14(b,1))].
16 singletonP(c3).  [resolve(9,a,15,b)].
17 -neq(c3,nil) | -segmentP(c4,c3).  [clausify(2)].
18 -neq(c3,nil).  [resolve(12,a,17,b)].
19 -ssList(A) | neq(A,nil) | nil = A.  [resolve(4,a,3,b)].
20 neq(c3,nil) | nil = c3.  [resolve(19,a,6,a)].
21 neq(c3,nil) | c3 = nil.  [copy(20),flip(b)].
22 c3 = nil.  [resolve(18,a,21,a)].
23 singletonP(nil).  [para(22(a,1),16(a,1))].
24 $F.  [resolve(5,a,23,a)].

============================== end of proof ==========================
