============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n158.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 00:19:43 CDT 2014
% CPUTime    : 10.21 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 24681 was started by sandbox on n158.star.cs.uiowa.edu,
Fri Jun  6 00:19:43 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_24649_n158.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 9.93 (+ 0.09) seconds.
% Length of proof is 40.
% Level of proof is 6.
% Maximum clause weight is 9.000.
% Given clauses 1354.


1 (all A all B all C (gt(A,B) & gt(B,C) -> gt(A,C))).  [assumption].
2 (all A -gt(A,A)).  [assumption].
3 (all A all B (leq(A,pred(B)) <-> gt(B,A))).  [assumption].
4 (all A all B (leq(A,B) <-> gt(succ(B),A))).  [assumption].
5 (all A plus(A,n2) = succ(succ(A))).  [assumption].
6 (all A plus(n2,A) = succ(succ(A))).  [assumption].
7 (all A pred(succ(A)) = A).  [assumption].
8 (all A all B (leq(succ(A),succ(B)) <-> leq(A,B))).  [assumption].
9 (all A (leq(n0,A) & leq(A,n0) -> A = n0)).  [assumption].
10 -(leq(tptp_float_0_001,pv76) & leq(n1,loopcounter) & gt(n1,loopcounter) & (all A (leq(n0,A) & leq(A,n135299) -> (all B (leq(n0,B) & leq(B,n4) -> a_select3(q_init,A,B) = init)))) & (all C (leq(n0,C) & leq(C,n4) -> a_select3(center_init,C,n0) = init)) & (gt(loopcounter,n0) -> (all D (leq(n0,D) & leq(D,n4) -> a_select2(mu_init,D) = init))) & (gt(loopcounter,n0) -> (all E (leq(n0,E) & leq(E,n4) -> a_select2(rho_init,E) = init))) & (gt(loopcounter,n0) -> (all F (leq(n0,F) & leq(F,n4) -> a_select2(sigma_init,F) = init))) -> (all V6 (leq(n0,V6) & leq(V6,n4) -> a_select2(muold_init,V6) = init))).  [assumption].
11 -gt(A,B) | -gt(B,C) | gt(A,C).  [clausify(1)].
12 -gt(A,A).  [clausify(2)].
13 leq(A,pred(B)) | -gt(B,A).  [clausify(3)].
14 -leq(A,B) | gt(succ(B),A).  [clausify(4)].
15 leq(A,B) | -gt(succ(B),A).  [clausify(4)].
16 plus(A,n2) = succ(succ(A)).  [clausify(5)].
17 succ(succ(A)) = plus(A,n2).  [copy(16),flip(a)].
18 plus(n2,A) = succ(succ(A)).  [clausify(6)].
19 plus(n2,A) = plus(A,n2).  [para(17(a,1),18(a,2))].
20 pred(succ(A)) = A.  [clausify(7)].
21 leq(succ(A),succ(B)) | -leq(A,B).  [clausify(8)].
22 gt(n1,n0).  [assumption].
23 -leq(n0,A) | -leq(A,n0) | n0 = A.  [clausify(9)].
24 succ(n0) = n1.  [assumption].
25 succ(succ(n0)) = n2.  [assumption].
26 succ(n1) = n2.  [para(24(a,1),25(a,1,1))].
27 leq(n1,loopcounter).  [clausify(10)].
28 gt(n1,loopcounter).  [clausify(10)].
29 -gt(A,n1) | gt(A,n0).  [resolve(22,a,11,b)].
30 succ(n1) = plus(n0,n2).  [para(24(a,1),17(a,1,1))].
31 n2 = plus(n0,n2).  [para(26(a,1),30(a,1))].
32 plus(n0,n2) = n2.  [copy(31),flip(a)].
33 pred(n1) = n0.  [para(24(a,1),20(a,1,1))].
34 leq(succ(n1),succ(loopcounter)).  [resolve(27,a,21,b)].
35 leq(n2,succ(loopcounter)).  [para(26(a,1),34(a,1))].
36 gt(succ(loopcounter),n1).  [resolve(27,a,14,a)].
37 leq(loopcounter,pred(n1)).  [resolve(28,a,13,b)].
38 leq(loopcounter,n0).  [para(33(a,1),37(a,2))].
39 -leq(n0,loopcounter) | n0 = loopcounter.  [resolve(38,a,23,b)].
40 -leq(n0,loopcounter) | loopcounter = n0.  [copy(39),flip(b)].
41 gt(succ(succ(loopcounter)),n2).  [resolve(35,a,14,a)].
42 gt(plus(loopcounter,n2),n2).  [para(17(a,1),41(a,1))].
43 gt(plus(n2,loopcounter),n2).  [para(19(a,2),42(a,1))].
44 gt(succ(loopcounter),n0).  [resolve(29,a,36,a)].
45 leq(n0,loopcounter).  [resolve(44,a,15,b)].
46 loopcounter = n0.  [resolve(45,a,40,a)].
47 gt(plus(n2,n0),n2).  [para(46(a,1),43(a,1,2))].
48 gt(plus(n0,n2),n2).  [para(19(a,1),47(a,1))].
49 gt(n2,n2).  [para(32(a,1),48(a,1))].
50 $F.  [resolve(12,a,49,a)].

============================== end of proof ==========================
