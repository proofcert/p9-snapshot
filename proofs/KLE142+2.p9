============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n124.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 23:27:13 CDT 2014
% CPUTime    : 0.17 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 32498 was started by sandbox on n124.star.cs.uiowa.edu,
Thu Jun  5 23:27:13 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_32466_n124.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.05 (+ 0.00) seconds: goals.
% Length of proof is 75.
% Level of proof is 17.
% Maximum clause weight is 17.000.
% Given clauses 158.


1 (all A all B addition(A,B) = addition(B,A)).  [assumption].
2 (all A all B all C addition(C,addition(B,A)) = addition(addition(C,B),A)).  [assumption].
3 (all A addition(A,zero) = A).  [assumption].
4 (all A addition(A,A) = A).  [assumption].
5 (all A all B all C multiplication(A,multiplication(B,C)) = multiplication(multiplication(A,B),C)).  [assumption].
6 (all A multiplication(A,one) = A).  [assumption].
7 (all A multiplication(one,A) = A).  [assumption].
8 (all A all B all C multiplication(A,addition(B,C)) = addition(multiplication(A,B),multiplication(A,C))).  [assumption].
9 (all A all B all C multiplication(addition(A,B),C) = addition(multiplication(A,C),multiplication(B,C))).  [assumption].
10 (all A multiplication(zero,A) = zero).  [assumption].
11 (all A addition(one,multiplication(A,star(A))) = star(A)).  [assumption].
12 (all A all B all C (leq(addition(multiplication(A,C),B),C) -> leq(multiplication(star(A),B),C))).  [assumption].
13 (all A strong_iteration(A) = addition(multiplication(A,strong_iteration(A)),one)).  [assumption].
14 (all A all B all C (leq(C,addition(multiplication(A,C),B)) -> leq(C,multiplication(strong_iteration(A),B)))).  [assumption].
15 (all A strong_iteration(A) = addition(star(A),multiplication(strong_iteration(A),zero))).  [assumption].
16 (all A all B (leq(A,B) <-> addition(A,B) = B)).  [assumption].
17 -(all A (leq(strong_iteration(strong_iteration(A)),strong_iteration(one)) & leq(strong_iteration(one),strong_iteration(strong_iteration(A))))).  [assumption].
18 addition(A,zero) = A.  [clausify(3)].
19 addition(A,A) = A.  [clausify(4)].
20 multiplication(A,one) = A.  [clausify(6)].
21 multiplication(one,A) = A.  [clausify(7)].
22 multiplication(zero,A) = zero.  [clausify(10)].
23 addition(A,B) = addition(B,A).  [clausify(1)].
24 star(A) = addition(one,multiplication(A,star(A))).  [clausify(11)].
25 addition(one,multiplication(A,star(A))) = star(A).  [copy(24),flip(a)].
26 strong_iteration(A) = addition(multiplication(A,strong_iteration(A)),one).  [clausify(13)].
27 strong_iteration(A) = addition(one,multiplication(A,strong_iteration(A))).  [para(23(a,1),26(a,2))].
28 addition(one,multiplication(A,strong_iteration(A))) = strong_iteration(A).  [copy(27),flip(a)].
29 strong_iteration(A) = addition(star(A),multiplication(strong_iteration(A),zero)).  [clausify(15)].
30 addition(star(A),multiplication(strong_iteration(A),zero)) = strong_iteration(A).  [copy(29),flip(a)].
31 addition(addition(A,B),C) = addition(A,addition(B,C)).  [clausify(2)].
32 addition(C,addition(A,B)) = addition(A,addition(B,C)).  [para(23(a,1),31(a,1))].
33 addition(A,addition(B,C)) = addition(C,addition(A,B)).  [copy(32),flip(a)].
34 multiplication(multiplication(A,B),C) = multiplication(A,multiplication(B,C)).  [clausify(5)].
35 multiplication(A,addition(B,C)) = addition(multiplication(A,B),multiplication(A,C)).  [clausify(8)].
36 addition(multiplication(A,B),multiplication(A,C)) = multiplication(A,addition(B,C)).  [copy(35),flip(a)].
37 multiplication(addition(A,B),C) = addition(multiplication(A,C),multiplication(B,C)).  [clausify(9)].
38 addition(multiplication(A,B),multiplication(C,B)) = multiplication(addition(A,C),B).  [copy(37),flip(a)].
39 -leq(strong_iteration(strong_iteration(c1)),strong_iteration(one)) | -leq(strong_iteration(one),strong_iteration(strong_iteration(c1))).  [clausify(17)].
40 -leq(A,B) | addition(A,B) = B.  [clausify(16)].
41 leq(A,B) | addition(A,B) != B.  [clausify(16)].
42 -leq(addition(multiplication(A,B),C),B) | leq(multiplication(star(A),C),B).  [clausify(12)].
43 -leq(addition(A,multiplication(B,C)),C) | leq(multiplication(star(B),A),C).  [para(23(a,1),42(a,1))].
44 -leq(A,addition(multiplication(B,A),C)) | leq(A,multiplication(strong_iteration(B),C)).  [clausify(14)].
45 -leq(A,addition(B,multiplication(C,A))) | leq(A,multiplication(strong_iteration(C),B)).  [para(23(a,1),44(a,2))].
46 addition(one,zero) = star(zero).  [para(22(a,1),25(a,1,2))].
47 one = star(zero).  [para(18(a,1),46(a,1))].
48 star(zero) = one.  [copy(47),flip(a)].
49 addition(A,addition(addition(B,A),B)) = addition(B,A).  [para(33(a,1),19(a,1))].
50 addition(A,addition(addition(A,B),B)) = addition(B,A).  [para(23(a,1),49(a,1,2,1))].
51 addition(A,addition(B,addition(A,B))) = addition(B,A).  [para(23(a,1),50(a,1,2))].
52 addition(A,addition(A,addition(B,B))) = addition(B,A).  [para(33(a,2),51(a,1,2))].
53 addition(A,addition(A,B)) = addition(B,A).  [para(19(a,1),52(a,1,2,2))].
54 addition(A,addition(A,B)) = addition(A,B).  [para(23(a,1),53(a,2))].
55 addition(one,multiplication(A,multiplication(B,star(multiplication(A,B))))) = star(multiplication(A,B)).  [para(34(a,1),25(a,1,2))].
56 addition(A,multiplication(A,B)) = multiplication(A,addition(one,B)).  [para(20(a,1),36(a,1,1))].
57 addition(A,multiplication(A,B)) = multiplication(A,addition(B,one)).  [para(23(a,1),56(a,2,2))].
58 multiplication(A,addition(B,one)) = addition(A,multiplication(A,B)).  [copy(57),flip(a)].
59 addition(A,multiplication(B,A)) = multiplication(addition(one,B),A).  [para(21(a,1),38(a,1,1))].
60 addition(A,multiplication(B,A)) = multiplication(addition(B,one),A).  [para(23(a,1),59(a,2,1))].
61 multiplication(addition(A,one),B) = addition(B,multiplication(A,B)).  [copy(60),flip(a)].
62 addition(multiplication(one,A),multiplication(multiplication(B,strong_iteration(B)),A)) = multiplication(strong_iteration(B),A).  [para(28(a,1),38(a,2,1))].
63 addition(A,multiplication(multiplication(B,strong_iteration(B)),A)) = multiplication(strong_iteration(B),A).  [para(21(a,1),62(a,1,1))].
64 addition(A,multiplication(B,multiplication(strong_iteration(B),A))) = multiplication(strong_iteration(B),A).  [para(34(a,1),63(a,1,2))].
65 addition(multiplication(A,multiplication(B,C)),multiplication(D,C)) = multiplication(addition(multiplication(A,B),D),C).  [para(34(a,1),38(a,1,1))].
66 addition(multiplication(A,multiplication(B,C)),multiplication(D,C)) = multiplication(addition(D,multiplication(A,B)),C).  [para(23(a,1),65(a,2,1))].
67 leq(A,A).  [resolve(41,b,19,a)].
68 -leq(addition(A,B),B) | leq(multiplication(star(one),A),B).  [para(21(a,1),43(a,1,2))].
69 -leq(A,addition(B,A)) | leq(A,multiplication(strong_iteration(one),B)).  [para(21(a,1),45(a,2,2))].
70 -leq(A,addition(A,B)) | leq(A,multiplication(strong_iteration(one),B)).  [para(23(a,1),69(a,2))].
71 leq(A,addition(A,B)).  [resolve(41,b,54,a)].
72 addition(one,star(A)) = addition(one,multiplication(A,star(A))).  [para(25(a,1),54(a,1,2))].
73 addition(one,star(A)) = star(A).  [para(25(a,1),72(a,2))].
74 leq(A,multiplication(strong_iteration(one),B)).  [resolve(71,a,70,a)].
75 leq(multiplication(A,B),multiplication(A,addition(B,C))).  [para(36(a,1),71(a,2))].
76 addition(A,multiplication(strong_iteration(one),B)) = multiplication(strong_iteration(one),B).  [resolve(40,a,74,a)].
77 leq(A,strong_iteration(one)).  [para(20(a,1),74(a,2))].
78 -leq(strong_iteration(one),strong_iteration(strong_iteration(c1))).  [resolve(77,a,39,a)].
79 addition(A,strong_iteration(one)) = strong_iteration(one).  [resolve(40,a,77,a)].
80 leq(multiplication(A,B),addition(A,multiplication(A,B))).  [para(58(a,1),75(a,2))].
81 leq(multiplication(one,multiplication(A,star(multiplication(one,A)))),star(multiplication(one,A))).  [para(55(a,1),80(a,2))].
82 leq(multiplication(one,multiplication(A,star(A))),star(multiplication(one,A))).  [para(21(a,1),81(a,1,2,2,1))].
83 leq(multiplication(A,star(A)),star(multiplication(one,A))).  [para(21(a,1),82(a,1))].
84 leq(multiplication(A,star(A)),star(A)).  [para(21(a,1),83(a,2,1))].
85 addition(multiplication(A,star(A)),star(A)) = star(A).  [resolve(40,a,84,a)].
86 addition(star(A),multiplication(A,star(A))) = star(A).  [para(23(a,1),85(a,1))].
87 multiplication(addition(A,one),star(A)) = star(A).  [para(61(a,2),86(a,1))].
88 multiplication(addition(A,one),addition(star(A),one)) = addition(addition(A,one),star(A)).  [para(87(a,1),58(a,2,2))].
89 multiplication(addition(A,one),addition(one,star(A))) = addition(addition(A,one),star(A)).  [para(23(a,1),88(a,1,2))].
90 multiplication(addition(A,one),star(A)) = addition(addition(A,one),star(A)).  [para(73(a,1),89(a,1,2))].
91 star(A) = addition(addition(A,one),star(A)).  [para(87(a,1),90(a,1))].
92 star(A) = addition(star(A),addition(A,one)).  [para(23(a,1),91(a,2))].
93 star(A) = addition(one,addition(star(A),A)).  [para(33(a,1),92(a,2))].
94 star(A) = addition(one,addition(A,star(A))).  [para(23(a,1),93(a,2,2))].
95 star(A) = addition(A,addition(star(A),one)).  [para(33(a,2),94(a,2))].
96 star(A) = addition(A,addition(one,star(A))).  [para(23(a,1),95(a,2,2))].
97 star(A) = addition(A,star(A)).  [para(73(a,1),96(a,2,2))].
98 addition(A,star(A)) = star(A).  [copy(97),flip(a)].
99 -leq(star(A),star(A)) | leq(multiplication(star(one),one),star(A)).  [para(73(a,1),68(a,1))].
100 -leq(star(A),star(A)) | leq(star(one),star(A)).  [para(20(a,1),99(b,1))].
101 leq(star(one),star(A)).  [resolve(67,a,100,a)].
102 leq(star(one),one).  [para(48(a,1),101(a,2))].
103 addition(star(one),one) = one.  [resolve(40,a,102,a)].
104 addition(one,star(one)) = one.  [para(23(a,1),103(a,1))].
105 star(one) = one.  [para(98(a,1),104(a,1))].
106 addition(one,multiplication(strong_iteration(one),zero)) = strong_iteration(one).  [para(105(a,1),30(a,1,1))].
107 multiplication(strong_iteration(one),zero) = strong_iteration(one).  [para(76(a,1),106(a,1))].
108 multiplication(strong_iteration(one),A) = multiplication(strong_iteration(one),multiplication(zero,A)).  [para(107(a,1),34(a,1,1))].
109 multiplication(strong_iteration(one),A) = multiplication(strong_iteration(one),zero).  [para(22(a,1),108(a,2,2))].
110 multiplication(strong_iteration(one),A) = strong_iteration(one).  [para(107(a,1),109(a,2))].
111 addition(multiplication(strong_iteration(one),multiplication(zero,A)),multiplication(B,A)) = multiplication(addition(B,strong_iteration(one)),A).  [para(107(a,1),66(a,2,1,2))].
112 addition(multiplication(strong_iteration(one),zero),multiplication(B,A)) = multiplication(addition(B,strong_iteration(one)),A).  [para(22(a,1),111(a,1,1,2))].
113 addition(strong_iteration(one),multiplication(B,A)) = multiplication(addition(B,strong_iteration(one)),A).  [para(110(a,1),112(a,1,1))].
114 addition(strong_iteration(one),multiplication(B,A)) = multiplication(strong_iteration(one),A).  [para(79(a,1),113(a,2,1))].
115 addition(strong_iteration(one),multiplication(A,B)) = strong_iteration(one).  [para(110(a,1),114(a,2))].
116 strong_iteration(one) = multiplication(strong_iteration(A),strong_iteration(one)).  [para(115(a,1),64(a,1))].
117 multiplication(strong_iteration(A),strong_iteration(one)) = strong_iteration(one).  [copy(116),flip(a)].
118 -leq(strong_iteration(one),addition(A,strong_iteration(one))) | leq(strong_iteration(one),multiplication(strong_iteration(strong_iteration(B)),A)).  [para(117(a,1),45(a,2,2))].
119 -leq(strong_iteration(one),strong_iteration(one)) | leq(strong_iteration(one),multiplication(strong_iteration(strong_iteration(B)),A)).  [para(79(a,1),118(a,2))].
120 leq(strong_iteration(one),multiplication(strong_iteration(strong_iteration(A)),B)).  [resolve(67,a,119,a)].
121 leq(strong_iteration(one),strong_iteration(strong_iteration(A))).  [para(20(a,1),120(a,2))].
122 $F.  [resolve(121,a,78,a)].

============================== end of proof ==========================
