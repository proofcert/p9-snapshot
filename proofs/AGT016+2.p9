============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n138.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 14:19:18 CDT 2014
% CPUTime    : 0.65 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 11717 was started by sandbox on n138.star.cs.uiowa.edu,
Thu Jun  5 14:19:18 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_11685_n138.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.33 (+ 0.00) seconds.
% Length of proof is 6.
% Level of proof is 2.
% Maximum clause weight is 23.000.
% Given clauses 876.


1 (all A (accept_population(A,atheist,n75) & accept_population(A,christian,n24) & accept_population(A,muslim,n1) & accept_population(A,native,n0) & accept_population(A,other,n0) <-> accept_city(A,towna))).  [assumption].
2 -(exists A exists B -accept_population(muslimcountrybhumanitarianorganization,A,B)).  [assumption].
3 -accept_population(A,atheist,n75) | -accept_population(A,christian,n24) | -accept_population(A,muslim,n1) | -accept_population(A,native,n0) | -accept_population(A,other,n0) | accept_city(A,towna).  [clausify(1)].
4 -accept_city(muslimcountrybhumanitarianorganization,towna).  [assumption].
5 accept_population(muslimcountrybhumanitarianorganization,A,B).  [clausify(2)].
6 -accept_population(muslimcountrybhumanitarianorganization,atheist,n75) | -accept_population(muslimcountrybhumanitarianorganization,christian,n24) | -accept_population(muslimcountrybhumanitarianorganization,muslim,n1) | -accept_population(muslimcountrybhumanitarianorganization,other,n0) | accept_city(muslimcountrybhumanitarianorganization,towna).  [resolve(5,a,3,d)].
7 -accept_population(muslimcountrybhumanitarianorganization,christian,n24) | -accept_population(muslimcountrybhumanitarianorganization,muslim,n1) | -accept_population(muslimcountrybhumanitarianorganization,other,n0) | accept_city(muslimcountrybhumanitarianorganization,towna).  [resolve(5,a,6,a)].
8 -accept_population(muslimcountrybhumanitarianorganization,muslim,n1) | -accept_population(muslimcountrybhumanitarianorganization,other,n0) | accept_city(muslimcountrybhumanitarianorganization,towna).  [resolve(5,a,7,a)].
9 -accept_population(muslimcountrybhumanitarianorganization,other,n0) | accept_city(muslimcountrybhumanitarianorganization,towna).  [resolve(5,a,8,a)].
10 accept_city(muslimcountrybhumanitarianorganization,towna).  [resolve(5,a,9,a)].
11 $F.  [resolve(4,a,10,a)].

============================== end of proof ==========================
