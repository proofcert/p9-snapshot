============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n123.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 05:50:43 CDT 2014
% CPUTime    : 2.82 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 51812 was started by sandbox on n123.star.cs.uiowa.edu,
Fri Jun  6 05:50:43 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_51780_n123.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 2.60 (+ 0.01) seconds.
% Length of proof is 17.
% Level of proof is 4.
% Maximum clause weight is 10.000.
% Given clauses 1517.


1 (all A (ssList(A) -> (all B (ssList(B) -> (neq(A,B) <-> A != B))))).  [assumption].
2 -(all A (ssList(A) -> (all B (ssList(B) -> (all C (ssList(C) -> (all D (ssList(D) -> B != D | A != C | -neq(B,nil) | (all E (ssList(E) -> (all F (ssList(F) -> app(app(E,C),F) != D | -equalelemsP(C) | (exists V6 (ssItem(V6) & (exists V7 (ssList(V7) & app(V7,cons(V6,nil)) = E & (exists V8 (ssList(V8) & app(cons(V6,nil),V8) = C)))))) | (exists V9 (ssItem(V9) & (exists V10 (ssList(V10) & app(cons(V9,nil),V10) = F & (exists V11 (ssList(V11) & app(V11,cons(V9,nil)) = C)))))))))) | neq(A,nil) | nil != D & nil = C)))))))).  [assumption].
3 -ssList(A) | -ssList(B) | -neq(A,B) | B != A.  [clausify(1)].
4 -ssList(A) | -ssList(B) | neq(A,B) | B = A.  [clausify(1)].
5 ssList(nil).  [assumption].
6 ssList(c3).  [clausify(2)].
7 ssList(c4).  [clausify(2)].
8 c6 = c4.  [clausify(2)].
9 c5 = c3.  [clausify(2)].
10 neq(c4,nil).  [clausify(2)].
11 -neq(c3,nil).  [clausify(2)].
12 nil = c6 | nil != c5.  [clausify(2)].
13 nil = c4 | nil != c5.  [para(8(a,1),12(a,2))].
14 nil = c4 | nil != c3.  [para(9(a,1),13(b,2))].
15 c4 = nil | nil != c3.  [copy(14),flip(a)].
16 c4 = nil | c3 != nil.  [copy(15),flip(b)].
17 -ssList(A) | neq(A,nil) | nil = A.  [resolve(5,a,4,b)].
18 -ssList(c4) | -ssList(nil) | nil != c4.  [resolve(10,a,3,c)].
19 -ssList(c4) | -ssList(nil) | c4 != nil.  [copy(18),flip(c)].
20 -ssList(nil) | c4 != nil.  [resolve(7,a,19,a)].
21 c4 != nil.  [resolve(5,a,20,a)].
22 c3 != nil.  [resolve(21,a,16,a)].
23 neq(c3,nil) | nil = c3.  [resolve(17,a,6,a)].
24 neq(c3,nil) | c3 = nil.  [copy(23),flip(b)].
25 c3 = nil.  [resolve(11,a,24,a)].
26 $F.  [resolve(22,a,25,a)].

============================== end of proof ==========================
