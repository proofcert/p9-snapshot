============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n132.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 16:26:38 CDT 2014
% CPUTime    : 0.12 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 37331 was started by sandbox on n132.star.cs.uiowa.edu,
Thu Jun  5 16:26:38 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_37299_n132.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds: thm100.
% Length of proof is 17.
% Level of proof is 7.
% Maximum clause weight is 13.000.
% Given clauses 22.


1 -(p(south,south,south,south,start) & (all A (p(south,north,south,north,A) -> p(north,north,south,north,go_alone(A)))) & (all B (p(north,north,south,north,B) -> p(south,north,south,north,go_alone(B)))) & (all C (p(south,south,north,south,C) -> p(north,south,north,south,go_alone(C)))) & (all D (p(north,south,north,south,D) -> p(south,south,north,south,go_alone(D)))) & (all E (p(south,south,south,north,E) -> p(north,north,south,north,take_wolf(E)))) & (all F (p(north,north,south,north,F) -> p(south,south,south,north,take_wolf(F)))) & (all V6 (p(south,south,north,south,V6) -> p(north,north,north,south,take_wolf(V6)))) & (all V7 (p(north,north,north,south,V7) -> p(south,south,north,south,take_wolf(V7)))) & (all V8 all V9 all V10 (p(south,V8,south,V9,V10) -> p(north,V8,north,V9,take_goat(V10)))) & (all V11 all V12 all V13 (p(north,V11,north,V12,V13) -> p(south,V11,south,V12,take_goat(V13)))) & (all V14 (p(south,north,south,south,V14) -> p(north,north,south,north,take_cabbage(V14)))) & (all V15 (p(north,north,south,north,V15) -> p(south,north,south,south,take_cabbage(V15)))) & (all V16 (p(south,south,north,south,V16) -> p(north,south,north,north,take_cabbage(V16)))) & (all V17 (p(north,south,north,north,V17) -> p(south,south,north,south,take_cabbage(V17)))) -> (exists V18 p(north,north,north,north,V18))).  [assumption].
2 p(south,south,south,south,start).  [clausify(1)].
3 -p(north,north,north,north,A).  [clausify(1)].
4 -p(north,north,south,north,A) | p(south,north,south,north,go_alone(A)).  [clausify(1)].
5 -p(north,south,north,south,A) | p(south,south,north,south,go_alone(A)).  [clausify(1)].
6 -p(south,south,north,south,A) | p(north,north,north,south,take_wolf(A)).  [clausify(1)].
7 -p(south,A,south,B,C) | p(north,A,north,B,take_goat(C)).  [clausify(1)].
8 -p(north,A,north,B,C) | p(south,A,south,B,take_goat(C)).  [clausify(1)].
9 -p(south,north,south,south,A) | p(north,north,south,north,take_cabbage(A)).  [clausify(1)].
10 -p(south,north,south,north,A).  [resolve(7,b,3,a)].
11 p(north,south,north,south,take_goat(start)).  [resolve(7,a,2,a)].
12 -p(north,north,south,north,A).  [resolve(10,a,4,b)].
13 -p(south,north,south,south,A).  [resolve(12,a,9,b)].
14 -p(north,north,north,south,A).  [resolve(13,a,8,b)].
15 -p(south,south,north,south,A).  [resolve(14,a,6,b)].
16 p(south,south,north,south,go_alone(take_goat(start))).  [resolve(5,a,11,a)].
17 $F.  [resolve(16,a,15,a)].

============================== end of proof ==========================
