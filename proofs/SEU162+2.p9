============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n052.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 00:14:43 CDT 2014
% CPUTime    : 2.89 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 26157 was started by sandbox on n052.star.cs.uiowa.edu,
Fri Jun  6 00:14:43 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_26125_n052.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 2.70 (+ 0.03) seconds.
% Length of proof is 30.
% Level of proof is 8.
% Maximum clause weight is 11.000.
% Given clauses 2345.


1 (all A all B unordered_pair(A,B) = unordered_pair(B,A)).  [assumption].
2 (all A all B all C (C = set_difference(A,B) <-> (all D (in(D,C) <-> in(D,A) & -in(D,B))))).  [assumption].
3 (all A all B (-in(A,B) -> disjoint(singleton(A),B))).  [assumption].
4 (all A all B subset(A,A)).  [assumption].
5 (all A all B (disjoint(A,B) -> disjoint(B,A))).  [assumption].
6 (all A all B all C (subset(unordered_pair(A,B),C) <-> in(A,C) & in(B,C))).  [assumption].
7 (all A unordered_pair(A,A) = singleton(A)).  [assumption].
8 (all A all B (disjoint(A,B) <-> set_difference(A,B) = A)).  [assumption].
9 -(all A all B (set_difference(A,singleton(B)) = A <-> -in(B,A))).  [assumption].
10 unordered_pair(A,B) = unordered_pair(B,A).  [clausify(1)].
11 set_difference(A,B) != C | -in(D,C) | -in(D,B).  [clausify(2)].
12 in(A,B) | disjoint(singleton(A),B).  [clausify(3)].
13 subset(A,A).  [clausify(4)].
14 -disjoint(A,B) | disjoint(B,A).  [clausify(5)].
15 -subset(unordered_pair(A,B),C) | in(A,C).  [clausify(6)].
16 singleton(A) = unordered_pair(A,A).  [clausify(7)].
17 -disjoint(A,B) | set_difference(A,B) = A.  [clausify(8)].
18 set_difference(c3,singleton(c4)) = c3 | -in(c4,c3).  [clausify(9)].
19 set_difference(c3,unordered_pair(c4,c4)) = c3 | -in(c4,c3).  [para(16(a,1),18(a,1,2))].
20 set_difference(c3,singleton(c4)) != c3 | in(c4,c3).  [clausify(9)].
21 set_difference(c3,unordered_pair(c4,c4)) != c3 | in(c4,c3).  [para(16(a,1),20(a,1,2))].
22 in(A,B) | disjoint(unordered_pair(A,A),B).  [para(16(a,1),12(b,1))].
23 in(A,unordered_pair(A,B)).  [resolve(15,a,13,a)].
24 in(A,B) | disjoint(B,unordered_pair(A,A)).  [resolve(22,b,14,a)].
25 set_difference(A,unordered_pair(B,C)) != D | -in(B,D).  [resolve(23,a,11,c)].
26 in(A,B) | set_difference(B,unordered_pair(A,A)) = B.  [resolve(24,b,17,a)].
27 set_difference(c3,unordered_pair(c4,c4)) = c3 | set_difference(c3,unordered_pair(c4,c4)) = c3.  [resolve(26,a,19,b)].
28 set_difference(c3,unordered_pair(c4,c4)) = c3.  [copy(27),merge(b)].
29 c3 != c3 | in(c4,c3).  [para(28(a,1),21(a,1))].
30 in(c4,c3).  [copy(29),xx(a)].
31 set_difference(A,unordered_pair(c4,B)) != c3.  [resolve(30,a,25,b)].
32 set_difference(A,unordered_pair(B,c4)) != c3.  [para(10(a,1),31(a,1,2))].
33 $F.  [resolve(32,a,28,a)].

============================== end of proof ==========================
