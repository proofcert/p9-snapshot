============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n160.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 17:45:23 CDT 2014
% CPUTime    : 4.34 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 35540 was started by sandbox on n160.star.cs.uiowa.edu,
Thu Jun  5 17:45:23 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_35508_n160.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 4.13 (+ 0.03) seconds.
% Length of proof is 45.
% Level of proof is 9.
% Maximum clause weight is 26.000.
% Given clauses 2891.


1 (all A all B (iext(uri_owl_complementOf,A,B) -> ic(A) & ic(B) & (all C (icext(A,C) <-> -icext(B,C))))).  [assumption].
2 (all A all B all C all D all E (iext(uri_rdf_first,B,C) & iext(uri_rdf_rest,B,D) & iext(uri_rdf_first,D,E) & iext(uri_rdf_rest,D,uri_rdf_nil) -> (iext(uri_owl_intersectionOf,A,B) <-> ic(A) & ic(C) & ic(E) & (all F (icext(A,F) <-> icext(C,F) & icext(E,F)))))).  [assumption].
3 (all A (iext(uri_owl_unionOf,A,uri_rdf_nil) <-> ic(A) & (all B -icext(A,B)))).  [assumption].
4 (all A -icext(uri_owl_Nothing,A)).  [assumption].
5 (all A all B (iext(uri_owl_intersectionOf,A,B) -> ic(A) & icext(uri_rdf_List,B))).  [assumption].
6 (all A all B (iext(uri_rdfs_subClassOf,A,B) <-> ic(A) & ic(B) & (all C (icext(A,C) -> icext(B,C))))).  [assumption].
7 (all A all B (iext(uri_rdf_type,A,B) <-> icext(B,A))).  [assumption].
8 (exists A exists B exists C exists D (iext(uri_rdf_type,uri_ex_A,uri_owl_Class) & iext(uri_rdf_type,uri_ex_B,uri_owl_Class) & iext(uri_rdf_type,uri_ex_w,A) & iext(uri_owl_intersectionOf,A,C) & iext(uri_rdf_first,C,uri_ex_A) & iext(uri_rdf_rest,C,D) & iext(uri_rdf_first,D,B) & iext(uri_rdf_rest,D,uri_rdf_nil) & iext(uri_owl_complementOf,B,uri_ex_A))).  [assumption].
9 -iext(uri_owl_complementOf,A,B) | -icext(A,C) | -icext(B,C).  [clausify(1)].
10 -iext(uri_rdf_first,A,B) | -iext(uri_rdf_rest,A,C) | -iext(uri_rdf_first,C,D) | -iext(uri_rdf_rest,C,uri_rdf_nil) | -iext(uri_owl_intersectionOf,E,A) | -icext(E,F) | icext(B,F).  [clausify(2)].
11 -iext(uri_rdf_first,A,B) | -iext(uri_rdf_rest,A,C) | -iext(uri_rdf_first,C,D) | -iext(uri_rdf_rest,C,uri_rdf_nil) | -iext(uri_owl_intersectionOf,E,A) | -icext(E,F) | icext(D,F).  [clausify(2)].
12 -iext(uri_owl_unionOf,A,uri_rdf_nil) | -icext(A,B).  [clausify(3)].
13 iext(uri_owl_unionOf,A,uri_rdf_nil) | -ic(A) | icext(A,f5(A)).  [clausify(3)].
14 -icext(uri_owl_Nothing,A).  [clausify(4)].
15 ic(uri_owl_Nothing).  [assumption].
16 -iext(uri_owl_intersectionOf,A,B) | ic(A).  [clausify(5)].
17 -iext(uri_rdfs_subClassOf,A,B) | -icext(A,C) | icext(B,C).  [clausify(6)].
18 iext(uri_rdfs_subClassOf,A,B) | -ic(A) | -ic(B) | icext(A,f13(A,B)).  [clausify(6)].
19 -iext(uri_rdf_type,A,B) | icext(B,A).  [clausify(7)].
20 iext(uri_rdf_type,uri_ex_w,c2).  [clausify(8)].
21 iext(uri_owl_intersectionOf,c2,c4).  [clausify(8)].
22 iext(uri_rdf_first,c4,uri_ex_A).  [clausify(8)].
23 iext(uri_rdf_rest,c4,c5).  [clausify(8)].
24 iext(uri_rdf_first,c5,c3).  [clausify(8)].
25 iext(uri_rdf_rest,c5,uri_rdf_nil).  [clausify(8)].
26 iext(uri_owl_complementOf,c3,uri_ex_A).  [clausify(8)].
27 iext(uri_rdfs_subClassOf,A,uri_owl_Nothing) | -ic(A) | icext(A,f13(A,uri_owl_Nothing)).  [resolve(18,c,15,a)].
28 icext(c2,uri_ex_w).  [resolve(20,a,19,a)].
29 ic(c2).  [resolve(21,a,16,a)].
30 -iext(uri_rdf_first,c4,A) | -iext(uri_rdf_rest,c4,B) | -iext(uri_rdf_first,B,C) | -iext(uri_rdf_rest,B,uri_rdf_nil) | -icext(c2,D) | icext(C,D).  [resolve(21,a,11,e)].
31 -iext(uri_rdf_first,c4,A) | -iext(uri_rdf_rest,c4,B) | -iext(uri_rdf_first,B,C) | -iext(uri_rdf_rest,B,uri_rdf_nil) | -icext(c2,D) | icext(A,D).  [resolve(21,a,10,e)].
32 -icext(c3,A) | -icext(uri_ex_A,A).  [resolve(26,a,9,a)].
33 iext(uri_owl_unionOf,c2,uri_rdf_nil) | icext(c2,f5(c2)).  [resolve(29,a,13,b)].
34 iext(uri_rdfs_subClassOf,c2,uri_owl_Nothing) | icext(c2,f13(c2,uri_owl_Nothing)).  [resolve(27,b,29,a)].
35 icext(c2,f5(c2)) | -icext(c2,A).  [resolve(33,a,12,a)].
36 icext(c2,f5(c2)).  [resolve(35,b,28,a)].
37 -iext(uri_rdf_first,c4,A) | -iext(uri_rdf_rest,c4,c5) | -iext(uri_rdf_rest,c5,uri_rdf_nil) | -icext(c2,B) | icext(c3,B).  [resolve(30,c,24,a)].
38 -iext(uri_rdf_first,c4,A) | -iext(uri_rdf_rest,c5,uri_rdf_nil) | -icext(c2,B) | icext(c3,B).  [resolve(23,a,37,b)].
39 -iext(uri_rdf_first,c4,A) | -icext(c2,B) | icext(c3,B).  [resolve(25,a,38,b)].
40 -iext(uri_rdf_first,c4,A) | -iext(uri_rdf_rest,c4,c5) | -iext(uri_rdf_rest,c5,uri_rdf_nil) | -icext(c2,B) | icext(A,B).  [resolve(31,c,24,a)].
41 -iext(uri_rdf_first,c4,A) | -iext(uri_rdf_rest,c5,uri_rdf_nil) | -icext(c2,B) | icext(A,B).  [resolve(23,a,40,b)].
42 -iext(uri_rdf_first,c4,A) | -icext(c2,B) | icext(A,B).  [resolve(25,a,41,b)].
43 icext(c2,f13(c2,uri_owl_Nothing)) | -icext(c2,A) | icext(uri_owl_Nothing,A).  [resolve(34,a,17,a)].
44 icext(c2,f13(c2,uri_owl_Nothing)) | -icext(c2,A).  [resolve(14,a,43,c)].
45 icext(c2,f13(c2,uri_owl_Nothing)).  [resolve(44,b,36,a)].
46 -icext(c2,A) | icext(c3,A).  [resolve(39,a,22,a)].
47 icext(c3,f13(c2,uri_owl_Nothing)).  [resolve(46,a,45,a)].
48 -icext(uri_ex_A,f13(c2,uri_owl_Nothing)).  [resolve(47,a,32,a)].
49 -icext(c2,A) | icext(uri_ex_A,A).  [resolve(42,a,22,a)].
50 icext(uri_ex_A,f13(c2,uri_owl_Nothing)).  [resolve(49,a,45,a)].
51 $F.  [resolve(48,a,50,a)].

============================== end of proof ==========================
