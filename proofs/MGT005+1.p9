============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n058.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 13:22:38 CDT 2014
% CPUTime    : 0.79 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 1176 was started by sandbox on n058.star.cs.uiowa.edu,
Thu Jun  5 13:22:38 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_1144_n058.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.65 (+ 0.00) seconds.
% Length of proof is 77.
% Level of proof is 16.
% Maximum clause weight is 69.000.
% Given clauses 330.


1 (all A all B -(greater(A,B) & greater(B,A))).  [assumption].
2 (all A all B all C (greater(A,B) & greater(B,C) -> greater(A,C))).  [assumption].
3 (all A all B (organization(A,B) -> (exists C survival_chance(A,C,B)))).  [assumption].
4 (all A all B all C all D (organization(A,C) & organization(A,D) & greater(B,C) & greater(D,B) -> organization(A,B))).  [assumption].
5 (all A all B all C (reorganization(A,B,C) -> greater(C,B))).  [assumption].
6 (all A all B all C all D all E (organization(A,D) & organization(A,E) & reorganization_free(A,D,E) & survival_chance(A,B,D) & survival_chance(A,C,E) & greater(E,D) -> greater(C,B))).  [assumption].
7 (all A all B all C all D all E all F all V6 (organization(A,D) & organization(A,E) & reorganization(A,F,V6) & survival_chance(A,B,D) & survival_chance(A,C,E) & -greater(F,D) & greater(E,D) & -greater(E,V6) -> greater(B,C))).  [assumption].
8 (all A all B all C all D all E all F all V6 all V7 all V8 (organization(A,V6) & organization(B,V6) & organization(B,V8) & class(A,D,V6) & class(B,D,V6) & reorganization(A,V6,V7) & reorganization(B,V6,V8) & reorganization_type(A,C,V6) & reorganization_type(B,C,V6) & complexity(A,E,V6) & complexity(B,F,V6) & greater(F,E) -> greater(V8,V7))).  [assumption].
9 (all A all B all C all D all E all F all V6 all V7 all V8 all V9 all V10 all V11 (organization(A,V9) & organization(B,V9) & organization(A,V10) & organization(B,V10) & class(A,D,V9) & class(B,D,V9) & survival_chance(A,E,V9) & survival_chance(B,E,V9) & reorganization(A,V9,V10) & reorganization(B,V9,V11) & reorganization_type(A,C,V9) & reorganization_type(B,C,V9) & survival_chance(A,F,V10) & survival_chance(B,V6,V10) & complexity(A,V7,V9) & complexity(B,V8,V9) & greater(V8,V7) -> greater(F,V6) | F = V6)).  [assumption].
10 -(all A all B all C all D all E all F all V6 all V7 all V8 all V9 all V10 all V11 (organization(A,V9) & organization(B,V9) & organization(A,V11) & organization(B,V11) & class(A,D,V9) & class(B,D,V9) & survival_chance(A,E,V9) & survival_chance(B,E,V9) & reorganization(A,V9,V10) & reorganization(B,V9,V11) & reorganization_type(A,C,V9) & reorganization_type(B,C,V9) & reorganization_free(A,V10,V11) & survival_chance(A,F,V11) & survival_chance(B,V6,V11) & complexity(A,V7,V9) & complexity(B,V8,V9) & greater(V8,V7) -> greater(F,V6))).  [assumption].
11 -organization(A,B) | -organization(A,C) | -reorganization_free(A,B,C) | -survival_chance(A,D,B) | -survival_chance(A,E,C) | -greater(C,B) | greater(E,D).  [clausify(6)].
12 reorganization_free(c1,c11,c12).  [clausify(10)].
13 organization(c1,c10).  [clausify(10)].
14 organization(c2,c10).  [clausify(10)].
15 organization(c1,c12).  [clausify(10)].
16 organization(c2,c12).  [clausify(10)].
17 greater(c9,c8).  [clausify(10)].
18 class(c1,c4,c10).  [clausify(10)].
19 class(c2,c4,c10).  [clausify(10)].
20 survival_chance(c1,c5,c10).  [clausify(10)].
21 survival_chance(c2,c5,c10).  [clausify(10)].
22 reorganization(c1,c10,c11).  [clausify(10)].
23 reorganization(c2,c10,c12).  [clausify(10)].
24 reorganization_type(c1,c3,c10).  [clausify(10)].
25 reorganization_type(c2,c3,c10).  [clausify(10)].
26 survival_chance(c1,c6,c12).  [clausify(10)].
27 survival_chance(c2,c7,c12).  [clausify(10)].
28 complexity(c1,c8,c10).  [clausify(10)].
29 complexity(c2,c9,c10).  [clausify(10)].
30 -greater(c6,c7).  [clausify(10)].
31 -greater(A,B) | -greater(B,A).  [clausify(1)].
32 -reorganization(A,B,C) | greater(C,B).  [clausify(5)].
33 -greater(A,B) | -greater(B,C) | greater(A,C).  [clausify(2)].
34 -organization(A,B) | survival_chance(A,f1(A,B),B).  [clausify(3)].
35 -organization(A,B) | -organization(A,C) | -greater(D,B) | -greater(C,D) | organization(A,D).  [clausify(4)].
36 -organization(A,B) | -organization(A,C) | -reorganization(A,D,E) | -survival_chance(A,F,B) | -survival_chance(A,V6,C) | greater(D,B) | -greater(C,B) | greater(C,E) | greater(F,V6).  [clausify(7)].
37 -organization(A,B) | -organization(C,B) | -organization(C,D) | -class(A,E,B) | -class(C,E,B) | -reorganization(A,B,F) | -reorganization(C,B,D) | -reorganization_type(A,V6,B) | -reorganization_type(C,V6,B) | -complexity(A,V7,B) | -complexity(C,V8,B) | -greater(V8,V7) | greater(D,F).  [clausify(8)].
38 -organization(A,B) | -organization(C,B) | -organization(A,D) | -organization(C,D) | -class(A,E,B) | -class(C,E,B) | -survival_chance(A,F,B) | -survival_chance(C,F,B) | -reorganization(A,B,D) | -reorganization(C,B,V6) | -reorganization_type(A,V7,B) | -reorganization_type(C,V7,B) | -survival_chance(A,V8,D) | -survival_chance(C,V9,D) | -complexity(A,V10,B) | -complexity(C,V11,B) | -greater(V11,V10) | greater(V8,V9) | V9 = V8.  [clausify(9)].
39 -organization(c1,c11) | -organization(c1,c12) | -survival_chance(c1,A,c11) | -survival_chance(c1,B,c12) | -greater(c12,c11) | greater(B,A).  [resolve(11,c,12,a)].
40 -organization(c1,c11) | -survival_chance(c1,A,c11) | -survival_chance(c1,B,c12) | -greater(c12,c11) | greater(B,A).  [resolve(15,a,39,b)].
41 -greater(A,A).  [factor(31,a,b)].
42 greater(c11,c10).  [resolve(32,a,22,a)].
43 -organization(c2,A) | -organization(c2,B) | -survival_chance(c2,C,A) | -survival_chance(c2,D,B) | greater(c10,A) | -greater(B,A) | greater(B,c12) | greater(C,D).  [resolve(36,c,23,a)].
44 -organization(c1,c10) | -organization(A,c10) | -organization(A,B) | -class(c1,C,c10) | -class(A,C,c10) | -reorganization(c1,c10,D) | -reorganization(A,c10,B) | -reorganization_type(A,c3,c10) | -complexity(c1,E,c10) | -complexity(A,F,c10) | -greater(F,E) | greater(B,D).  [resolve(37,h,24,a)].
45 -organization(A,c10) | -organization(A,B) | -class(c1,C,c10) | -class(A,C,c10) | -reorganization(c1,c10,D) | -reorganization(A,c10,B) | -reorganization_type(A,c3,c10) | -complexity(c1,E,c10) | -complexity(A,F,c10) | -greater(F,E) | greater(B,D).  [resolve(13,a,44,a)].
46 -organization(c1,c10) | -organization(A,c10) | -organization(c1,B) | -organization(A,B) | -class(c1,C,c10) | -class(A,C,c10) | -survival_chance(c1,D,c10) | -survival_chance(A,D,c10) | -reorganization(c1,c10,B) | -reorganization(A,c10,E) | -reorganization_type(A,c3,c10) | -survival_chance(c1,F,B) | -survival_chance(A,V6,B) | -complexity(c1,V7,c10) | -complexity(A,V8,c10) | -greater(V8,V7) | greater(F,V6) | V6 = F.  [resolve(38,k,24,a)].
47 -organization(A,c10) | -organization(c1,B) | -organization(A,B) | -class(c1,C,c10) | -class(A,C,c10) | -survival_chance(c1,D,c10) | -survival_chance(A,D,c10) | -reorganization(c1,c10,B) | -reorganization(A,c10,E) | -reorganization_type(A,c3,c10) | -survival_chance(c1,F,B) | -survival_chance(A,V6,B) | -complexity(c1,V7,c10) | -complexity(A,V8,c10) | -greater(V8,V7) | greater(F,V6) | V6 = F.  [resolve(13,a,46,a)].
48 -organization(c1,c11) | -survival_chance(c1,A,c11) | -greater(c12,c11) | greater(c6,A).  [resolve(40,c,26,a)].
49 -organization(A,c10) | -organization(A,B) | -greater(B,c11) | organization(A,c11).  [resolve(42,a,35,c)].
50 -greater(c10,c11).  [resolve(42,a,31,b)].
51 -organization(c2,A) | -organization(c2,c12) | -survival_chance(c2,B,A) | greater(c10,A) | -greater(c12,A) | greater(c12,c12) | greater(B,c7).  [resolve(43,d,27,a)].
52 -organization(c2,A) | -survival_chance(c2,B,A) | greater(c10,A) | -greater(c12,A) | greater(c12,c12) | greater(B,c7).  [resolve(16,a,51,b)].
53 -organization(c2,A) | -survival_chance(c2,B,A) | greater(c10,A) | -greater(c12,A) | greater(B,c7).  [resolve(41,a,52,e)].
54 -organization(c2,c10) | -organization(c2,A) | -class(c1,B,c10) | -class(c2,B,c10) | -reorganization(c1,c10,C) | -reorganization(c2,c10,A) | -complexity(c1,D,c10) | -complexity(c2,E,c10) | -greater(E,D) | greater(A,C).  [resolve(45,g,25,a)].
55 -organization(c2,A) | -class(c1,B,c10) | -class(c2,B,c10) | -reorganization(c1,c10,C) | -reorganization(c2,c10,A) | -complexity(c1,D,c10) | -complexity(c2,E,c10) | -greater(E,D) | greater(A,C).  [resolve(14,a,54,a)].
56 -organization(c2,c10) | -organization(c1,A) | -organization(c2,A) | -class(c1,B,c10) | -class(c2,B,c10) | -survival_chance(c1,C,c10) | -survival_chance(c2,C,c10) | -reorganization(c1,c10,A) | -reorganization(c2,c10,D) | -survival_chance(c1,E,A) | -survival_chance(c2,F,A) | -complexity(c1,V6,c10) | -complexity(c2,V7,c10) | -greater(V7,V6) | greater(E,F) | F = E.  [resolve(47,j,25,a)].
57 -organization(c1,A) | -organization(c2,A) | -class(c1,B,c10) | -class(c2,B,c10) | -survival_chance(c1,C,c10) | -survival_chance(c2,C,c10) | -reorganization(c1,c10,A) | -reorganization(c2,c10,D) | -survival_chance(c1,E,A) | -survival_chance(c2,F,A) | -complexity(c1,V6,c10) | -complexity(c2,V7,c10) | -greater(V7,V6) | greater(E,F) | F = E.  [resolve(14,a,56,a)].
58 -organization(c2,A) | -class(c1,B,c10) | -class(c2,B,c10) | -reorganization(c1,c10,C) | -reorganization(c2,c10,A) | -complexity(c2,D,c10) | -greater(D,c8) | greater(A,C).  [resolve(55,f,28,a)].
59 -organization(c2,A) | -class(c1,B,c10) | -class(c2,B,c10) | -reorganization(c1,c10,C) | -reorganization(c2,c10,A) | -greater(c9,c8) | greater(A,C).  [resolve(58,f,29,a)].
60 -organization(c2,A) | -class(c1,B,c10) | -class(c2,B,c10) | -reorganization(c1,c10,C) | -reorganization(c2,c10,A) | greater(A,C).  [resolve(17,a,59,f)].
61 -organization(c2,A) | -class(c1,c4,c10) | -reorganization(c1,c10,B) | -reorganization(c2,c10,A) | greater(A,B).  [resolve(60,c,19,a)].
62 -organization(c2,A) | -reorganization(c1,c10,B) | -reorganization(c2,c10,A) | greater(A,B).  [resolve(18,a,61,b)].
63 -organization(c2,c12) | -reorganization(c1,c10,A) | greater(c12,A).  [resolve(62,c,23,a)].
64 -reorganization(c1,c10,A) | greater(c12,A).  [resolve(16,a,63,a)].
65 greater(c12,c11).  [resolve(64,a,22,a)].
66 -organization(c1,c11) | -survival_chance(c1,A,c11) | greater(c6,A).  [resolve(65,a,48,c)].
67 -organization(c1,A) | -organization(c2,A) | -class(c1,B,c10) | -class(c2,B,c10) | -survival_chance(c1,C,c10) | -survival_chance(c2,C,c10) | -reorganization(c1,c10,A) | -reorganization(c2,c10,D) | -survival_chance(c1,E,A) | -survival_chance(c2,F,A) | -complexity(c2,V6,c10) | -greater(V6,c8) | greater(E,F) | F = E.  [resolve(57,k,28,a)].
68 -organization(A,c10) | -organization(A,c12) | organization(A,c11).  [resolve(65,a,49,c)].
69 -organization(c2,c10) | organization(c2,c11).  [resolve(68,b,16,a)].
70 organization(c2,c11).  [resolve(14,a,69,a)].
71 -organization(c1,c10) | organization(c1,c11).  [resolve(68,b,15,a)].
72 organization(c1,c11).  [resolve(13,a,71,a)].
73 -survival_chance(c1,A,c11) | greater(c6,A).  [resolve(72,a,66,a)].
74 survival_chance(c2,f1(c2,c11),c11).  [resolve(70,a,34,a)].
75 survival_chance(c1,f1(c1,c11),c11).  [resolve(72,a,34,a)].
76 -organization(c2,c11) | greater(c10,c11) | -greater(c12,c11) | greater(f1(c2,c11),c7).  [resolve(74,a,53,b)].
77 greater(c10,c11) | -greater(c12,c11) | greater(f1(c2,c11),c7).  [resolve(70,a,76,a)].
78 -greater(c12,c11) | greater(f1(c2,c11),c7).  [resolve(50,a,77,a)].
79 greater(f1(c2,c11),c7).  [resolve(65,a,78,a)].
80 -greater(A,f1(c2,c11)) | greater(A,c7).  [resolve(33,b,79,a)].
81 -greater(c6,f1(c2,c11)).  [resolve(80,b,30,a)].
82 greater(c6,f1(c1,c11)).  [resolve(73,a,75,a)].
83 -organization(c1,A) | -organization(c2,A) | -class(c1,B,c10) | -class(c2,B,c10) | -survival_chance(c1,C,c10) | -survival_chance(c2,C,c10) | -reorganization(c1,c10,A) | -reorganization(c2,c10,D) | -survival_chance(c1,E,A) | -survival_chance(c2,F,A) | -greater(c9,c8) | greater(E,F) | F = E.  [resolve(67,k,29,a)].
84 -organization(c1,A) | -organization(c2,A) | -class(c1,B,c10) | -class(c2,B,c10) | -survival_chance(c1,C,c10) | -survival_chance(c2,C,c10) | -reorganization(c1,c10,A) | -reorganization(c2,c10,D) | -survival_chance(c1,E,A) | -survival_chance(c2,F,A) | greater(E,F) | F = E.  [resolve(17,a,83,k)].
85 -survival_chance(c1,f1(c2,c11),c11).  [resolve(73,b,81,a)].
86 -greater(f1(c1,c11),A) | greater(c6,A).  [resolve(33,a,82,a)].
87 -greater(f1(c1,c11),f1(c2,c11)).  [resolve(86,b,81,a)].
88 -organization(c1,A) | -organization(c2,A) | -class(c1,c4,c10) | -survival_chance(c1,B,c10) | -survival_chance(c2,B,c10) | -reorganization(c1,c10,A) | -reorganization(c2,c10,C) | -survival_chance(c1,D,A) | -survival_chance(c2,E,A) | greater(D,E) | E = D.  [resolve(84,d,19,a)].
89 -organization(c1,A) | -organization(c2,A) | -survival_chance(c1,B,c10) | -survival_chance(c2,B,c10) | -reorganization(c1,c10,A) | -reorganization(c2,c10,C) | -survival_chance(c1,D,A) | -survival_chance(c2,E,A) | greater(D,E) | E = D.  [resolve(18,a,88,c)].
90 -organization(c1,c11) | -organization(c2,c11) | -survival_chance(c1,A,c10) | -survival_chance(c2,A,c10) | -reorganization(c2,c10,B) | -survival_chance(c1,C,c11) | -survival_chance(c2,D,c11) | greater(C,D) | D = C.  [resolve(89,e,22,a)].
91 -organization(c2,c11) | -survival_chance(c1,A,c10) | -survival_chance(c2,A,c10) | -reorganization(c2,c10,B) | -survival_chance(c1,C,c11) | -survival_chance(c2,D,c11) | greater(C,D) | D = C.  [resolve(72,a,90,a)].
92 -survival_chance(c1,A,c10) | -survival_chance(c2,A,c10) | -reorganization(c2,c10,B) | -survival_chance(c1,C,c11) | -survival_chance(c2,D,c11) | greater(C,D) | D = C.  [resolve(70,a,91,a)].
93 -survival_chance(c1,A,c10) | -survival_chance(c2,A,c10) | -survival_chance(c1,B,c11) | -survival_chance(c2,C,c11) | greater(B,C) | C = B.  [resolve(92,c,23,a)].
94 -survival_chance(c1,c5,c10) | -survival_chance(c1,A,c11) | -survival_chance(c2,B,c11) | greater(A,B) | B = A.  [resolve(93,b,21,a)].
95 -survival_chance(c1,A,c11) | -survival_chance(c2,B,c11) | greater(A,B) | B = A.  [resolve(20,a,94,a)].
96 -survival_chance(c2,A,c11) | greater(f1(c1,c11),A) | A = f1(c1,c11).  [resolve(95,a,75,a)].
97 -survival_chance(c2,A,c11) | greater(f1(c1,c11),A) | f1(c1,c11) = A.  [copy(96),flip(c)].
98 greater(f1(c1,c11),f1(c2,c11)) | f1(c1,c11) = f1(c2,c11).  [resolve(97,a,74,a)].
99 greater(f1(c1,c11),f1(c2,c11)) | f1(c2,c11) = f1(c1,c11).  [copy(98),flip(b)].
100 f1(c2,c11) = f1(c1,c11).  [resolve(87,a,99,a)].
101 -survival_chance(c1,f1(c1,c11),c11).  [para(100(a,1),85(a,2))].
102 $F.  [resolve(75,a,101,a)].

============================== end of proof ==========================
