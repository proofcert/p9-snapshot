============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n051.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 16:37:03 CDT 2014
% CPUTime    : 1.05 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 28392 was started by sandbox on n051.star.cs.uiowa.edu,
Thu Jun  5 16:37:03 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_28360_n051.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.93 (+ 0.01) seconds.
% Length of proof is 44.
% Level of proof is 12.
% Maximum clause weight is 32.000.
% Given clauses 588.


1 (all A all B (iext(uri_rdfs_subPropertyOf,A,B) -> ip(A) & ip(B) & (all C all D (iext(A,C,D) -> iext(B,C,D))))).  [assumption].
2 (all A all B all C all D all E (iext(uri_rdf_first,B,C) & iext(uri_rdf_rest,B,D) & iext(uri_rdf_first,D,E) & iext(uri_rdf_rest,D,uri_rdf_nil) -> (iext(uri_owl_propertyChainAxiom,A,B) <-> ip(A) & ip(C) & ip(E) & (all F all V6 all V7 (iext(C,F,V6) & iext(E,V6,V7) -> iext(A,F,V7)))))).  [assumption].
3 (exists A exists B exists C exists D exists E exists F exists V6 exists V7 (iext(uri_rdfs_subPropertyOf,uri_skos_memberList,A) & iext(uri_owl_propertyChainAxiom,uri_skos_member,B) & iext(uri_rdf_first,B,A) & iext(uri_rdf_rest,B,C) & iext(uri_rdf_first,C,uri_rdf_first) & iext(uri_rdf_rest,C,uri_rdf_nil) & iext(uri_owl_propertyChainAxiom,A,D) & iext(uri_rdf_first,D,A) & iext(uri_rdf_rest,D,E) & iext(uri_rdf_first,E,uri_rdf_rest) & iext(uri_rdf_rest,E,uri_rdf_nil) & iext(uri_rdf_type,uri_ex_MyOrderedCollection,uri_skos_OrderedCollection) & iext(uri_skos_memberList,uri_ex_MyOrderedCollection,F) & iext(uri_rdf_first,F,uri_ex_X) & iext(uri_rdf_rest,F,V6) & iext(uri_rdf_first,V6,uri_ex_Y) & iext(uri_rdf_rest,V6,V7) & iext(uri_rdf_first,V7,uri_ex_Z) & iext(uri_rdf_rest,V7,uri_rdf_nil))).  [assumption].
4 -(iext(uri_skos_member,uri_ex_MyOrderedCollection,uri_ex_X) & iext(uri_skos_member,uri_ex_MyOrderedCollection,uri_ex_Y) & iext(uri_skos_member,uri_ex_MyOrderedCollection,uri_ex_Z)).  [assumption].
5 iext(uri_rdfs_subPropertyOf,uri_skos_memberList,c1).  [clausify(3)].
6 iext(uri_owl_propertyChainAxiom,uri_skos_member,c2).  [clausify(3)].
7 iext(uri_rdf_first,c2,c1).  [clausify(3)].
8 iext(uri_rdf_rest,c2,c3).  [clausify(3)].
9 iext(uri_rdf_first,c3,uri_rdf_first).  [clausify(3)].
10 iext(uri_rdf_rest,c3,uri_rdf_nil).  [clausify(3)].
11 iext(uri_owl_propertyChainAxiom,c1,c4).  [clausify(3)].
12 iext(uri_rdf_first,c4,c1).  [clausify(3)].
13 iext(uri_rdf_rest,c4,c5).  [clausify(3)].
14 iext(uri_rdf_first,c5,uri_rdf_rest).  [clausify(3)].
15 iext(uri_rdf_rest,c5,uri_rdf_nil).  [clausify(3)].
16 iext(uri_skos_memberList,uri_ex_MyOrderedCollection,c6).  [clausify(3)].
17 iext(uri_rdf_first,c6,uri_ex_X).  [clausify(3)].
18 iext(uri_rdf_rest,c6,c7).  [clausify(3)].
19 iext(uri_rdf_first,c7,uri_ex_Y).  [clausify(3)].
20 iext(uri_rdf_rest,c7,c8).  [clausify(3)].
21 iext(uri_rdf_first,c8,uri_ex_Z).  [clausify(3)].
22 -iext(uri_skos_member,uri_ex_MyOrderedCollection,uri_ex_X) | -iext(uri_skos_member,uri_ex_MyOrderedCollection,uri_ex_Y) | -iext(uri_skos_member,uri_ex_MyOrderedCollection,uri_ex_Z).  [clausify(4)].
23 -iext(uri_rdfs_subPropertyOf,A,B) | -iext(A,C,D) | iext(B,C,D).  [clausify(1)].
24 -iext(uri_rdf_first,A,B) | -iext(uri_rdf_rest,A,C) | -iext(uri_rdf_first,C,D) | -iext(uri_rdf_rest,C,uri_rdf_nil) | -iext(uri_owl_propertyChainAxiom,E,A) | -iext(B,F,V6) | -iext(D,V6,V7) | iext(E,F,V7).  [clausify(2)].
25 -iext(uri_skos_memberList,A,B) | iext(c1,A,B).  [resolve(23,a,5,a)].
26 -iext(uri_rdf_rest,c4,A) | -iext(uri_rdf_first,A,B) | -iext(uri_rdf_rest,A,uri_rdf_nil) | -iext(uri_owl_propertyChainAxiom,C,c4) | -iext(c1,D,E) | -iext(B,E,F) | iext(C,D,F).  [resolve(24,a,12,a)].
27 -iext(uri_rdf_rest,c2,A) | -iext(uri_rdf_first,A,B) | -iext(uri_rdf_rest,A,uri_rdf_nil) | -iext(uri_owl_propertyChainAxiom,C,c2) | -iext(c1,D,E) | -iext(B,E,F) | iext(C,D,F).  [resolve(24,a,7,a)].
28 iext(c1,uri_ex_MyOrderedCollection,c6).  [resolve(25,a,16,a)].
29 -iext(uri_rdf_rest,c4,c5) | -iext(uri_rdf_rest,c5,uri_rdf_nil) | -iext(uri_owl_propertyChainAxiom,A,c4) | -iext(c1,B,C) | -iext(uri_rdf_rest,C,D) | iext(A,B,D).  [resolve(26,b,14,a)].
30 -iext(uri_rdf_rest,c5,uri_rdf_nil) | -iext(uri_owl_propertyChainAxiom,A,c4) | -iext(c1,B,C) | -iext(uri_rdf_rest,C,D) | iext(A,B,D).  [resolve(13,a,29,a)].
31 -iext(uri_owl_propertyChainAxiom,A,c4) | -iext(c1,B,C) | -iext(uri_rdf_rest,C,D) | iext(A,B,D).  [resolve(15,a,30,a)].
32 -iext(uri_rdf_rest,c2,c3) | -iext(uri_rdf_rest,c3,uri_rdf_nil) | -iext(uri_owl_propertyChainAxiom,A,c2) | -iext(c1,B,C) | -iext(uri_rdf_first,C,D) | iext(A,B,D).  [resolve(27,b,9,a)].
33 -iext(uri_rdf_rest,c3,uri_rdf_nil) | -iext(uri_owl_propertyChainAxiom,A,c2) | -iext(c1,B,C) | -iext(uri_rdf_first,C,D) | iext(A,B,D).  [resolve(8,a,32,a)].
34 -iext(uri_owl_propertyChainAxiom,A,c2) | -iext(c1,B,C) | -iext(uri_rdf_first,C,D) | iext(A,B,D).  [resolve(10,a,33,a)].
35 -iext(c1,A,B) | -iext(uri_rdf_rest,B,C) | iext(c1,A,C).  [resolve(31,a,11,a)].
36 -iext(uri_rdf_rest,c6,A) | iext(c1,uri_ex_MyOrderedCollection,A).  [resolve(35,a,28,a)].
37 -iext(c1,A,c7) | iext(c1,A,c8).  [resolve(35,b,20,a)].
38 iext(c1,uri_ex_MyOrderedCollection,c7).  [resolve(36,a,18,a)].
39 iext(c1,uri_ex_MyOrderedCollection,c8).  [resolve(37,a,38,a)].
40 -iext(c1,A,B) | -iext(uri_rdf_first,B,C) | iext(uri_skos_member,A,C).  [resolve(34,a,6,a)].
41 -iext(uri_rdf_first,c8,A) | iext(uri_skos_member,uri_ex_MyOrderedCollection,A).  [resolve(40,a,39,a)].
42 -iext(uri_rdf_first,c7,A) | iext(uri_skos_member,uri_ex_MyOrderedCollection,A).  [resolve(40,a,38,a)].
43 -iext(uri_rdf_first,c6,A) | iext(uri_skos_member,uri_ex_MyOrderedCollection,A).  [resolve(40,a,28,a)].
44 iext(uri_skos_member,uri_ex_MyOrderedCollection,uri_ex_Z).  [resolve(41,a,21,a)].
45 -iext(uri_skos_member,uri_ex_MyOrderedCollection,uri_ex_X) | -iext(uri_skos_member,uri_ex_MyOrderedCollection,uri_ex_Y).  [resolve(44,a,22,c)].
46 iext(uri_skos_member,uri_ex_MyOrderedCollection,uri_ex_Y).  [resolve(42,a,19,a)].
47 -iext(uri_skos_member,uri_ex_MyOrderedCollection,uri_ex_X).  [resolve(46,a,45,b)].
48 iext(uri_skos_member,uri_ex_MyOrderedCollection,uri_ex_X).  [resolve(43,a,17,a)].
49 $F.  [resolve(47,a,48,a)].

============================== end of proof ==========================
