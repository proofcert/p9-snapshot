============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n158.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 09:56:03 CDT 2014
% CPUTime    : 0.25 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 61736 was started by sandbox on n158.star.cs.uiowa.edu,
Fri Jun  6 09:56:03 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_61704_n158.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.12 (+ 0.00) seconds.
% Length of proof is 48.
% Level of proof is 9.
% Maximum clause weight is 13.000.
% Given clauses 157.


1 modus_ponens <-> (all A all B (is_a_theorem(A) & is_a_theorem(implies(A,B)) -> is_a_theorem(B))).  [assumption].
2 equivalence_2 <-> (all A all B is_a_theorem(implies(equiv(A,B),implies(B,A)))).  [assumption].
3 r2 <-> (all A all B is_a_theorem(implies(B,or(A,B)))).  [assumption].
4 r3 <-> (all A all B is_a_theorem(implies(or(A,B),or(B,A)))).  [assumption].
5 op_or -> (all A all B or(A,B) = not(and(not(A),not(B)))).  [assumption].
6 op_and -> (all A all B and(A,B) = not(or(not(A),not(B)))).  [assumption].
7 op_implies_and -> (all A all B implies(A,B) = not(and(A,not(B)))).  [assumption].
8 op_implies_or -> (all A all B implies(A,B) = or(not(A),B)).  [assumption].
9 op_equiv -> (all A all B equiv(A,B) = and(implies(A,B),implies(B,A))).  [assumption].
10 op_implies_or.  [assumption].
11 op_and.  [assumption].
12 op_equiv.  [assumption].
13 modus_ponens.  [assumption].
14 r2.  [assumption].
15 r3.  [assumption].
16 op_or.  [assumption].
17 op_implies_and.  [assumption].
18 -equivalence_2.  [assumption].
19 -r2 | is_a_theorem(implies(A,or(B,A))).  [clausify(3)].
20 is_a_theorem(implies(A,or(B,A))).  [resolve(14,a,19,a)].
21 -modus_ponens | -is_a_theorem(A) | -is_a_theorem(implies(A,B)) | is_a_theorem(B).  [clausify(1)].
22 -is_a_theorem(A) | -is_a_theorem(implies(A,B)) | is_a_theorem(B).  [resolve(13,a,21,a)].
23 equivalence_2 | -is_a_theorem(implies(equiv(c29,c30),implies(c30,c29))).  [clausify(2)].
24 -is_a_theorem(implies(equiv(c29,c30),implies(c30,c29))).  [resolve(18,a,23,a)].
25 -r3 | is_a_theorem(implies(or(A,B),or(B,A))).  [clausify(4)].
26 is_a_theorem(implies(or(A,B),or(B,A))).  [resolve(15,a,25,a)].
27 -op_implies_or | or(not(A),B) = implies(A,B).  [clausify(8)].
28 or(not(A),B) = implies(A,B).  [resolve(10,a,27,a)].
29 -op_implies_and | not(and(A,not(B))) = implies(A,B).  [clausify(7)].
30 not(and(A,not(B))) = implies(A,B).  [resolve(17,a,29,a)].
31 -op_or | or(A,B) = not(and(not(A),not(B))).  [clausify(5)].
32 -op_or | or(A,B) = implies(not(A),B).  [para(30(a,1),31(b,2))].
33 or(A,B) = implies(not(A),B).  [resolve(16,a,32,a)].
34 -op_and | and(A,B) = not(or(not(A),not(B))).  [clausify(6)].
35 -op_and | and(A,B) = not(implies(not(not(A)),not(B))).  [para(33(a,1),34(b,2,1))].
36 -op_and | not(implies(not(not(A)),not(B))) = and(A,B).  [copy(35),flip(b)].
37 not(implies(not(not(A)),not(B))) = and(A,B).  [resolve(11,a,36,a)].
38 -op_equiv | and(implies(A,B),implies(B,A)) = equiv(A,B).  [clausify(9)].
39 and(implies(A,B),implies(B,A)) = equiv(A,B).  [resolve(12,a,38,a)].
40 implies(not(not(A)),B) = implies(A,B).  [para(33(a,1),28(a,1))].
41 is_a_theorem(implies(implies(not(A),B),or(B,A))).  [para(33(a,1),26(a,1,1))].
42 is_a_theorem(implies(implies(not(A),B),implies(not(B),A))).  [para(33(a,1),41(a,1,2))].
43 is_a_theorem(implies(A,implies(not(B),A))).  [para(33(a,1),20(a,1,2))].
44 not(implies(A,not(B))) = and(A,B).  [para(40(a,1),37(a,1,1))].
45 implies(not(implies(A,B)),C) = implies(and(A,not(B)),C).  [para(30(a,1),40(a,1,1,1))].
46 -is_a_theorem(implies(not(A),B)) | is_a_theorem(implies(not(B),A)).  [resolve(42,a,22,b)].
47 is_a_theorem(implies(A,implies(B,A))).  [para(40(a,1),43(a,1,2))].
48 is_a_theorem(implies(A,implies(B,not(not(A))))).  [para(40(a,1),47(a,1))].
49 implies(and(A,B),C) = implies(and(A,not(not(B))),C).  [para(44(a,1),45(a,1,1))].
50 implies(and(A,not(not(B))),C) = implies(and(A,B),C).  [copy(49),flip(a)].
51 is_a_theorem(implies(not(implies(A,not(not(not(B))))),B)).  [resolve(46,a,48,a)].
52 is_a_theorem(implies(and(A,not(not(B))),B)).  [para(44(a,1),51(a,1,1))].
53 is_a_theorem(implies(and(A,B),B)).  [para(50(a,1),52(a,1))].
54 is_a_theorem(implies(equiv(A,B),implies(B,A))).  [para(39(a,1),53(a,1,1))].
55 $F.  [resolve(54,a,24,a)].

============================== end of proof ==========================
