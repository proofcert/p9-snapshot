============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n161.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 06:34:18 CDT 2014
% CPUTime    : 0.15 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 47712 was started by sandbox on n161.star.cs.uiowa.edu,
Fri Jun  6 06:34:18 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_47680_n161.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 20.
% Level of proof is 3.
% Maximum clause weight is 15.000.
% Given clauses 34.


1 (all A all B -unorthogonal_lines(orthogonal_through_point(B,A),B)).  [assumption].
2 (all A all B -apart_point_and_line(A,orthogonal_through_point(B,A))).  [assumption].
3 (all A all B all C all D (distinct_lines(B,C) -> apart_point_and_line(A,B) | apart_point_and_line(A,C) | unorthogonal_lines(B,D) | unorthogonal_lines(C,D))).  [assumption].
4 (all A all B (equal_lines(A,B) <-> -distinct_lines(A,B))).  [assumption].
5 (all A all B (incident_point_and_line(A,B) <-> -apart_point_and_line(A,B))).  [assumption].
6 (all A all B (orthogonal_lines(A,B) <-> -unorthogonal_lines(A,B))).  [assumption].
7 -(all A all B all C (incident_point_and_line(A,B) & orthogonal_lines(B,C) -> equal_lines(B,orthogonal_through_point(C,A)))).  [assumption].
8 -incident_point_and_line(A,B) | -apart_point_and_line(A,B).  [clausify(5)].
9 incident_point_and_line(c1,c2).  [clausify(7)].
10 -orthogonal_lines(A,B) | -unorthogonal_lines(A,B).  [clausify(6)].
11 orthogonal_lines(c2,c3).  [clausify(7)].
12 -equal_lines(c2,orthogonal_through_point(c3,c1)).  [clausify(7)].
13 equal_lines(A,B) | distinct_lines(A,B).  [clausify(4)].
14 -unorthogonal_lines(orthogonal_through_point(A,B),A).  [clausify(1)].
15 -apart_point_and_line(A,orthogonal_through_point(B,A)).  [clausify(2)].
16 -distinct_lines(A,B) | apart_point_and_line(C,A) | apart_point_and_line(C,B) | unorthogonal_lines(A,D) | unorthogonal_lines(B,D).  [clausify(3)].
17 -apart_point_and_line(c1,c2).  [resolve(8,a,9,a)].
18 -unorthogonal_lines(c2,c3).  [resolve(10,a,11,a)].
19 distinct_lines(c2,orthogonal_through_point(c3,c1)).  [resolve(12,a,13,a)].
20 -distinct_lines(c2,A) | apart_point_and_line(c1,A) | unorthogonal_lines(c2,B) | unorthogonal_lines(A,B).  [resolve(16,b,17,a)].
21 -distinct_lines(c2,orthogonal_through_point(A,c1)) | unorthogonal_lines(c2,B) | unorthogonal_lines(orthogonal_through_point(A,c1),B).  [resolve(20,b,15,a)].
22 -distinct_lines(c2,orthogonal_through_point(A,c1)) | unorthogonal_lines(orthogonal_through_point(A,c1),c3).  [resolve(21,b,18,a)].
23 -distinct_lines(c2,orthogonal_through_point(c3,c1)).  [resolve(22,b,14,a)].
24 $F.  [resolve(19,a,23,a)].

============================== end of proof ==========================
