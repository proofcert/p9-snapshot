============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n101.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 23:15:18 CDT 2014
% CPUTime    : 0.69 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 49775 was started by sandbox on n101.star.cs.uiowa.edu,
Fri Jun  6 23:15:18 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_49743_n101.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.56 (+ 0.00) seconds.
% Length of proof is 24.
% Level of proof is 5.
% Maximum clause weight is 17.000.
% Given clauses 323.


1 (all A all B (subset(A,B) <-> (all C (member(C,A) -> member(C,B))))).  [assumption].
2 (all A (member(A,on) <-> set(A) & strict_well_order(member_predicate,A) & (all B (member(B,A) -> subset(B,A))))).  [assumption].
3 (all A all B (strict_well_order(A,B) <-> strict_order(A,B) & (all C (subset(C,B) & (exists D member(D,C)) -> (exists E least(E,A,C)))))).  [assumption].
4 (all A all B (apply(member_predicate,A,B) <-> member(A,B))).  [assumption].
5 (all A all B (strict_order(A,B) <-> (all C all D (member(C,B) & member(D,B) -> -(apply(A,C,D) & apply(A,D,C)))) & (all C all D all E (member(C,B) & member(D,B) & member(E,B) -> (apply(A,C,D) & apply(A,D,E) -> apply(A,C,E)))))).  [assumption].
6 -(all A all B (member(A,on) & member(B,on) -> -(member(A,B) & member(B,A)))).  [assumption].
7 -strict_order(A,B) | -member(C,B) | -member(D,B) | -apply(A,C,D) | -apply(A,D,C).  [clausify(5)].
8 -strict_well_order(A,B) | strict_order(A,B).  [clausify(3)].
9 member(c1,on).  [clausify(6)].
10 member(c1,c2).  [clausify(6)].
11 member(c2,c1).  [clausify(6)].
12 -member(A,on) | strict_well_order(member_predicate,A).  [clausify(2)].
13 apply(member_predicate,A,B) | -member(A,B).  [clausify(4)].
14 -subset(A,B) | -member(C,A) | member(C,B).  [clausify(1)].
15 -member(A,on) | -member(B,A) | subset(B,A).  [clausify(2)].
16 -strict_well_order(A,B) | -member(C,B) | -member(D,B) | -apply(A,C,D) | -apply(A,D,C).  [resolve(8,b,7,a)].
17 strict_well_order(member_predicate,c1).  [resolve(12,a,9,a)].
18 apply(member_predicate,c2,c1).  [resolve(13,b,11,a)].
19 apply(member_predicate,c1,c2).  [resolve(13,b,10,a)].
20 -member(c1,on) | subset(c2,c1).  [resolve(15,b,11,a)].
21 subset(c2,c1).  [resolve(9,a,20,a)].
22 -member(A,c2) | member(A,c1).  [resolve(21,a,14,a)].
23 -strict_well_order(member_predicate,A) | -member(c1,A) | -member(c2,A) | -apply(member_predicate,c1,c2).  [resolve(18,a,16,e)].
24 -strict_well_order(member_predicate,A) | -member(c1,A) | -member(c2,A).  [resolve(19,a,23,d)].
25 -member(c1,c1) | -member(c2,c1).  [resolve(24,a,17,a)].
26 -member(c1,c1).  [resolve(11,a,25,b)].
27 member(c1,c1).  [resolve(22,a,10,a)].
28 $F.  [resolve(26,a,27,a)].

============================== end of proof ==========================
