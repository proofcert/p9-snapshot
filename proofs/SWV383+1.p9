============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n046.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 08:00:33 CDT 2014
% CPUTime    : 0.16 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 62856 was started by sandbox on n046.star.cs.uiowa.edu,
Fri Jun  6 08:00:33 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_62824_n046.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 8.
% Level of proof is 2.
% Maximum clause weight is 24.000.
% Given clauses 53.


1 (all A all B all C (-check_cpq(triple(A,B,C)) | -ok(triple(A,B,C)) -> (all D all E all F (succ_cpq(triple(A,B,C),triple(D,E,F)) -> -ok(triple(D,E,F)) | -check_cpq(triple(D,E,F)))))).  [assumption].
2 -(all A all B all C (-check_cpq(triple(A,B,C)) -> (all D all E all F (succ_cpq(triple(A,B,C),triple(D,E,F)) -> -ok(triple(D,E,F)) | -check_cpq(triple(D,E,F)))))).  [assumption].
3 ok(triple(c4,c5,c6)).  [clausify(2)].
4 check_cpq(triple(c4,c5,c6)).  [clausify(2)].
5 succ_cpq(triple(c1,c2,c3),triple(c4,c5,c6)).  [clausify(2)].
6 -check_cpq(triple(c1,c2,c3)).  [clausify(2)].
7 check_cpq(triple(A,B,C)) | -succ_cpq(triple(A,B,C),triple(D,E,F)) | -ok(triple(D,E,F)) | -check_cpq(triple(D,E,F)).  [clausify(1)].
8 check_cpq(triple(c1,c2,c3)) | -ok(triple(c4,c5,c6)) | -check_cpq(triple(c4,c5,c6)).  [resolve(7,b,5,a)].
9 -ok(triple(c4,c5,c6)) | -check_cpq(triple(c4,c5,c6)).  [resolve(6,a,8,a)].
10 -check_cpq(triple(c4,c5,c6)).  [resolve(3,a,9,a)].
11 $F.  [resolve(4,a,10,a)].

============================== end of proof ==========================
