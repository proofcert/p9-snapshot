============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n050.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 00:13:43 CDT 2014
% CPUTime    : 0.13 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 22001 was started by sandbox on n050.star.cs.uiowa.edu,
Fri Jun  6 00:13:43 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_21969_n050.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.02 (+ 0.00) seconds: goals.
% Length of proof is 44.
% Level of proof is 10.
% Maximum clause weight is 13.000.
% Given clauses 66.


1 (all A all B addition(A,B) = addition(B,A)).  [assumption].
2 (all A all B all C addition(C,addition(B,A)) = addition(addition(C,B),A)).  [assumption].
3 (all A addition(A,zero) = A).  [assumption].
4 (all A addition(A,A) = A).  [assumption].
5 (all A all B all C multiplication(A,multiplication(B,C)) = multiplication(multiplication(A,B),C)).  [assumption].
6 (all A multiplication(A,one) = A).  [assumption].
7 (all A all B all C multiplication(A,addition(B,C)) = addition(multiplication(A,B),multiplication(A,C))).  [assumption].
8 (all A all B all C multiplication(addition(A,B),C) = addition(multiplication(A,C),multiplication(B,C))).  [assumption].
9 (all A multiplication(zero,A) = zero).  [assumption].
10 (all A strong_iteration(A) = addition(multiplication(A,strong_iteration(A)),one)).  [assumption].
11 (all A all B (leq(A,B) <-> addition(A,B) = B)).  [assumption].
12 -(all A all B ((multiplication(A,B) = zero -> leq(multiplication(A,strong_iteration(B)),A)) & leq(A,multiplication(A,strong_iteration(B))))).  [assumption].
13 addition(A,zero) = A.  [clausify(3)].
14 addition(A,A) = A.  [clausify(4)].
15 multiplication(A,one) = A.  [clausify(6)].
16 multiplication(zero,A) = zero.  [clausify(9)].
17 addition(A,B) = addition(B,A).  [clausify(1)].
18 strong_iteration(A) = addition(multiplication(A,strong_iteration(A)),one).  [clausify(10)].
19 strong_iteration(A) = addition(one,multiplication(A,strong_iteration(A))).  [para(17(a,1),18(a,2))].
20 addition(one,multiplication(A,strong_iteration(A))) = strong_iteration(A).  [copy(19),flip(a)].
21 addition(addition(A,B),C) = addition(A,addition(B,C)).  [clausify(2)].
22 addition(C,addition(A,B)) = addition(A,addition(B,C)).  [para(17(a,1),21(a,1))].
23 addition(A,addition(B,C)) = addition(C,addition(A,B)).  [copy(22),flip(a)].
24 multiplication(multiplication(A,B),C) = multiplication(A,multiplication(B,C)).  [clausify(5)].
25 multiplication(A,addition(B,C)) = addition(multiplication(A,B),multiplication(A,C)).  [clausify(7)].
26 addition(multiplication(A,B),multiplication(A,C)) = multiplication(A,addition(B,C)).  [copy(25),flip(a)].
27 multiplication(addition(A,B),C) = addition(multiplication(A,C),multiplication(B,C)).  [clausify(8)].
28 addition(multiplication(A,B),multiplication(C,B)) = multiplication(addition(A,C),B).  [copy(27),flip(a)].
29 -leq(multiplication(c1,strong_iteration(c2)),c1) | -leq(c1,multiplication(c1,strong_iteration(c2))).  [clausify(12)].
30 leq(A,B) | addition(A,B) != B.  [clausify(11)].
31 multiplication(c1,c2) = zero | -leq(c1,multiplication(c1,strong_iteration(c2))).  [clausify(12)].
32 addition(A,addition(addition(B,A),B)) = addition(B,A).  [para(23(a,1),14(a,1))].
33 addition(A,addition(addition(A,B),B)) = addition(B,A).  [para(17(a,1),32(a,1,2,1))].
34 addition(A,addition(B,addition(A,B))) = addition(B,A).  [para(17(a,1),33(a,1,2))].
35 addition(A,addition(A,addition(B,B))) = addition(B,A).  [para(23(a,2),34(a,1,2))].
36 addition(A,addition(A,B)) = addition(B,A).  [para(14(a,1),35(a,1,2,2))].
37 addition(A,addition(A,B)) = addition(A,B).  [para(17(a,1),36(a,2))].
38 addition(A,multiplication(A,B)) = multiplication(A,addition(one,B)).  [para(15(a,1),26(a,1,1))].
39 addition(A,multiplication(A,B)) = multiplication(A,addition(B,one)).  [para(17(a,1),38(a,2,2))].
40 multiplication(A,addition(B,one)) = addition(A,multiplication(A,B)).  [copy(39),flip(a)].
41 addition(multiplication(A,one),multiplication(A,multiplication(B,strong_iteration(B)))) = multiplication(A,strong_iteration(B)).  [para(20(a,1),26(a,2,2))].
42 addition(A,multiplication(A,multiplication(B,strong_iteration(B)))) = multiplication(A,strong_iteration(B)).  [para(15(a,1),41(a,1,1))].
43 addition(multiplication(A,B),multiplication(zero,B)) = multiplication(A,B).  [para(13(a,1),28(a,2,1))].
44 addition(multiplication(A,B),zero) = multiplication(A,B).  [para(16(a,1),43(a,1,2))].
45 addition(zero,multiplication(A,B)) = multiplication(A,B).  [para(17(a,1),44(a,1))].
46 leq(A,addition(A,B)).  [resolve(30,b,37,a)].
47 addition(one,strong_iteration(A)) = addition(one,multiplication(A,strong_iteration(A))).  [para(20(a,1),37(a,1,2))].
48 addition(one,strong_iteration(A)) = strong_iteration(A).  [para(20(a,1),47(a,2))].
49 leq(multiplication(A,B),multiplication(A,addition(B,C))).  [para(26(a,1),46(a,2))].
50 leq(multiplication(A,one),multiplication(A,strong_iteration(B))).  [para(20(a,1),49(a,2,2))].
51 leq(A,multiplication(A,strong_iteration(B))).  [para(15(a,1),50(a,1))].
52 multiplication(c1,c2) = zero.  [resolve(51,a,31,b)].
53 -leq(multiplication(c1,strong_iteration(c2)),c1).  [resolve(51,a,29,b)].
54 multiplication(zero,A) = multiplication(c1,multiplication(c2,A)).  [para(52(a,1),24(a,1,1))].
55 zero = multiplication(c1,multiplication(c2,A)).  [para(16(a,1),54(a,1))].
56 multiplication(c1,multiplication(c2,A)) = zero.  [copy(55),flip(a)].
57 addition(zero,multiplication(c1,A)) = multiplication(c1,addition(c2,A)).  [para(52(a,1),26(a,1,1))].
58 multiplication(c1,A) = multiplication(c1,addition(c2,A)).  [para(45(a,1),57(a,1))].
59 multiplication(c1,A) = multiplication(c1,addition(A,c2)).  [para(17(a,1),58(a,2,2))].
60 multiplication(c1,addition(A,c2)) = multiplication(c1,A).  [copy(59),flip(a)].
61 multiplication(c1,addition(c2,one)) = addition(c1,zero).  [para(52(a,1),40(a,2,2))].
62 multiplication(c1,addition(one,c2)) = addition(c1,zero).  [para(17(a,1),61(a,1,2))].
63 multiplication(c1,one) = addition(c1,zero).  [para(60(a,1),62(a,1))].
64 c1 = addition(c1,zero).  [para(15(a,1),63(a,1))].
65 c1 = addition(zero,c1).  [para(17(a,1),64(a,2))].
66 addition(zero,c1) = c1.  [copy(65),flip(a)].
67 addition(multiplication(c1,strong_iteration(c2)),c1) != c1.  [resolve(30,a,53,a)].
68 addition(c1,multiplication(c1,strong_iteration(c2))) != c1.  [para(17(a,1),67(a,1))].
69 multiplication(c1,addition(strong_iteration(c2),one)) != c1.  [para(40(a,2),68(a,1))].
70 multiplication(c1,addition(one,strong_iteration(c2))) != c1.  [para(17(a,1),69(a,1,2))].
71 multiplication(c1,strong_iteration(c2)) != c1.  [para(48(a,1),70(a,1,2))].
72 addition(c1,zero) = multiplication(c1,strong_iteration(c2)).  [para(56(a,1),42(a,1,2))].
73 addition(zero,c1) = multiplication(c1,strong_iteration(c2)).  [para(17(a,1),72(a,1))].
74 c1 = multiplication(c1,strong_iteration(c2)).  [para(66(a,1),73(a,1))].
75 multiplication(c1,strong_iteration(c2)) = c1.  [copy(74),flip(a)].
76 $F.  [resolve(71,a,75,a)].

============================== end of proof ==========================
