============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n135.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 06:06:53 CDT 2014
% CPUTime    : 0.19 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 2813 was started by sandbox on n135.star.cs.uiowa.edu,
Fri Jun  6 06:06:53 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_2781_n135.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 26.
% Level of proof is 5.
% Maximum clause weight is 13.000.
% Given clauses 86.


1 (all A (ordinal(A) -> epsilon_transitive(A) & epsilon_connected(A))).  [assumption].
2 (all A (epsilon_transitive(A) <-> (all B (in(B,A) -> subset(B,A))))).  [assumption].
3 (all A all B (ordinal(A) & ordinal(B) -> (ordinal_subset(A,B) <-> subset(A,B)))).  [assumption].
4 (all A all B subset(A,A)).  [assumption].
5 (all A (ordinal(A) -> (all B (ordinal(B) -> -(-in(A,B) & A != B & -in(B,A)))))).  [assumption].
6 (all A all B (element(A,powerset(B)) <-> subset(A,B))).  [assumption].
7 -(all A (ordinal(A) -> (all B (ordinal(B) -> ordinal_subset(A,B) | in(B,A))))).  [assumption].
8 -ordinal(A) | epsilon_transitive(A).  [clausify(1)].
9 -epsilon_transitive(A) | -in(B,A) | subset(B,A).  [clausify(2)].
10 ordinal(c12).  [clausify(7)].
11 ordinal(c13).  [clausify(7)].
12 subset(A,A).  [clausify(4)].
13 -ordinal_subset(c12,c13).  [clausify(7)].
14 -in(c13,c12).  [clausify(7)].
15 -element(A,powerset(B)) | subset(A,B).  [clausify(6)].
16 element(A,powerset(B)) | -subset(A,B).  [clausify(6)].
17 -ordinal(A) | -ordinal(B) | ordinal_subset(A,B) | -subset(A,B).  [clausify(3)].
18 -ordinal(A) | -ordinal(B) | in(A,B) | B = A | in(B,A).  [clausify(5)].
19 -in(A,B) | subset(A,B) | -ordinal(B).  [resolve(9,a,8,b)].
20 element(A,powerset(A)).  [resolve(16,b,12,a)].
21 -ordinal(A) | ordinal_subset(c12,A) | -subset(c12,A).  [resolve(17,a,10,a)].
22 ordinal_subset(c12,c13) | -subset(c12,c13).  [resolve(21,a,11,a)].
23 -subset(c12,c13).  [resolve(22,a,13,a)].
24 -ordinal(A) | in(c13,A) | A = c13 | in(A,c13).  [resolve(18,a,11,a)].
25 -ordinal(A) | in(c13,A) | c13 = A | in(A,c13).  [copy(24),flip(c)].
26 -in(c12,c13) | -ordinal(c13).  [resolve(19,b,23,a)].
27 -in(c12,c13).  [resolve(26,b,11,a)].
28 -element(c12,powerset(c13)).  [resolve(15,b,23,a)].
29 in(c13,c12) | c13 = c12 | in(c12,c13).  [resolve(25,a,10,a)].
30 c13 = c12 | in(c12,c13).  [resolve(14,a,29,a)].
31 c13 = c12.  [resolve(27,a,30,b)].
32 -element(c12,powerset(c12)).  [para(31(a,1),28(a,2,1))].
33 $F.  [resolve(20,a,32,a)].

============================== end of proof ==========================
