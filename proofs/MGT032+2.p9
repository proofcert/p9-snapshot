============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n098.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 15:57:08 CDT 2014
% CPUTime    : 0.11 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 13630 was started by sandbox on n098.star.cs.uiowa.edu,
Thu Jun  5 15:57:08 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_13598_n098.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.00 (+ 0.00) seconds.
% Length of proof is 24.
% Level of proof is 7.
% Maximum clause weight is 0.000.
% Given clauses 0.


1 (all A all B all C all D (environment(A) & subpopulations(B,C,A,D) & greater(growth_rate(C,D),growth_rate(B,D)) -> selection_favors(C,B,D))).  [assumption].
2 (all A (environment(A) & stable(A) -> (exists B (in_environment(A,B) & (all C (subpopulations(first_movers,efficient_producers,A,C) & greater_or_equal(C,B) -> greater(growth_rate(efficient_producers,C),growth_rate(first_movers,C)))))))).  [assumption].
3 -(all A (environment(A) & stable(A) -> (exists B (in_environment(A,B) & (all C (subpopulations(first_movers,efficient_producers,A,C) & greater_or_equal(C,B) -> selection_favors(efficient_producers,first_movers,C))))))).  [assumption].
4 -environment(A) | -stable(A) | in_environment(A,f1(A)).  [clausify(2)].
5 environment(c1).  [clausify(3)].
6 -environment(A) | -subpopulations(B,C,A,D) | -greater(growth_rate(C,D),growth_rate(B,D)) | selection_favors(C,B,D).  [clausify(1)].
7 -environment(A) | -stable(A) | -subpopulations(first_movers,efficient_producers,A,B) | -greater_or_equal(B,f1(A)) | greater(growth_rate(efficient_producers,B),growth_rate(first_movers,B)).  [clausify(2)].
8 -stable(c1) | in_environment(c1,f1(c1)).  [resolve(4,a,5,a)].
9 stable(c1).  [clausify(3)].
10 -stable(c1) | -subpopulations(first_movers,efficient_producers,c1,A) | -greater_or_equal(A,f1(c1)) | greater(growth_rate(efficient_producers,A),growth_rate(first_movers,A)).  [resolve(7,a,5,a)].
11 in_environment(c1,f1(c1)).  [resolve(8,a,9,a)].
12 -in_environment(c1,A) | -selection_favors(efficient_producers,first_movers,f2(A)).  [clausify(3)].
13 -in_environment(c1,A) | greater_or_equal(f2(A),A).  [clausify(3)].
14 -in_environment(c1,A) | subpopulations(first_movers,efficient_producers,c1,f2(A)).  [clausify(3)].
15 subpopulations(first_movers,efficient_producers,c1,f2(f1(c1))).  [resolve(11,a,14,a)].
16 -subpopulations(A,B,c1,C) | -greater(growth_rate(B,C),growth_rate(A,C)) | selection_favors(B,A,C).  [resolve(6,a,5,a)].
17 -subpopulations(first_movers,efficient_producers,c1,A) | -greater_or_equal(A,f1(c1)) | greater(growth_rate(efficient_producers,A),growth_rate(first_movers,A)).  [resolve(10,a,9,a)].
18 -greater(growth_rate(efficient_producers,f2(f1(c1))),growth_rate(first_movers,f2(f1(c1)))) | selection_favors(efficient_producers,first_movers,f2(f1(c1))).  [resolve(15,a,16,a)].
19 -selection_favors(efficient_producers,first_movers,f2(f1(c1))).  [resolve(11,a,12,a)].
20 -greater_or_equal(f2(f1(c1)),f1(c1)) | greater(growth_rate(efficient_producers,f2(f1(c1))),growth_rate(first_movers,f2(f1(c1)))).  [resolve(15,a,17,a)].
21 greater_or_equal(f2(f1(c1)),f1(c1)).  [resolve(11,a,13,a)].
22 greater(growth_rate(efficient_producers,f2(f1(c1))),growth_rate(first_movers,f2(f1(c1)))).  [resolve(20,a,21,a)].
23 -greater(growth_rate(efficient_producers,f2(f1(c1))),growth_rate(first_movers,f2(f1(c1)))).  [resolve(18,b,19,a)].
24 $F.  [resolve(22,a,23,a)].

============================== end of proof ==========================
