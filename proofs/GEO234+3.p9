============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n128.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 07:54:13 CDT 2014
% CPUTime    : 0.15 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 63594 was started by sandbox on n128.star.cs.uiowa.edu,
Fri Jun  6 07:54:13 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_63562_n128.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 28.
% Level of proof is 5.
% Maximum clause weight is 9.000.
% Given clauses 24.


1 (all A all B (unequally_directed_opposite_lines(A,B) <-> unequally_directed_lines(A,reverse_line(B)))).  [assumption].
2 (all A all B (equally_directed_lines(A,B) <-> -unequally_directed_lines(A,B))).  [assumption].
3 (all A equally_directed_lines(A,A)).  [assumption].
4 (all A all B all C (unequally_directed_lines(A,B) -> unequally_directed_lines(A,C) | unequally_directed_lines(B,C))).  [assumption].
5 (all A all B (unequally_directed_lines(A,B) | unequally_directed_lines(A,reverse_line(B)))).  [assumption].
6 (all A all B (unequally_directed_lines(A,B) & unequally_directed_lines(A,reverse_line(B)) -> left_convergent_lines(A,B) | left_convergent_lines(A,reverse_line(B)))).  [assumption].
7 (all A all B -(left_convergent_lines(A,B) | left_convergent_lines(A,reverse_line(B)))).  [assumption].
8 -(all A all B all C (unequally_directed_opposite_lines(A,B) -> unequally_directed_lines(A,C) | unequally_directed_opposite_lines(B,C))).  [assumption].
9 -equally_directed_lines(A,B) | -unequally_directed_lines(A,B).  [clausify(2)].
10 equally_directed_lines(A,A).  [clausify(3)].
11 -unequally_directed_opposite_lines(c2,c3).  [clausify(8)].
12 unequally_directed_opposite_lines(c1,c2).  [clausify(8)].
13 -unequally_directed_opposite_lines(A,B) | unequally_directed_lines(A,reverse_line(B)).  [clausify(1)].
14 unequally_directed_opposite_lines(A,B) | -unequally_directed_lines(A,reverse_line(B)).  [clausify(1)].
15 unequally_directed_lines(A,B) | unequally_directed_lines(A,reverse_line(B)).  [clausify(5)].
16 -left_convergent_lines(A,B).  [clausify(7)].
17 -unequally_directed_lines(c1,c3).  [clausify(8)].
18 -unequally_directed_lines(A,B) | unequally_directed_lines(A,C) | unequally_directed_lines(B,C).  [clausify(4)].
19 -unequally_directed_lines(A,B) | -unequally_directed_lines(A,reverse_line(B)) | left_convergent_lines(A,B) | left_convergent_lines(A,reverse_line(B)).  [clausify(6)].
20 -unequally_directed_lines(A,B) | -unequally_directed_lines(A,reverse_line(B)) | left_convergent_lines(A,reverse_line(B)).  [resolve(16,a,19,c)].
21 -unequally_directed_lines(A,B) | -unequally_directed_lines(A,reverse_line(B)).  [resolve(16,a,20,c)].
22 -unequally_directed_lines(A,A).  [resolve(9,a,10,a)].
23 unequally_directed_lines(c1,reverse_line(c2)).  [resolve(13,a,12,a)].
24 -unequally_directed_lines(c2,reverse_line(c3)).  [resolve(14,a,11,a)].
25 -unequally_directed_lines(A,B) | unequally_directed_lines(B,A).  [resolve(18,b,22,a)].
26 -unequally_directed_lines(c3,c1).  [resolve(25,b,17,a)].
27 -unequally_directed_lines(c1,c2).  [resolve(23,a,21,b)].
28 unequally_directed_lines(c2,c3).  [resolve(24,a,15,b)].
29 -unequally_directed_lines(A,B) | unequally_directed_lines(B,A).  [resolve(18,b,22,a)].
30 -unequally_directed_lines(c2,c1).  [resolve(29,b,27,a)].
31 -unequally_directed_lines(c2,A) | unequally_directed_lines(A,c1).  [resolve(18,b,30,a)].
32 -unequally_directed_lines(c2,c3).  [resolve(31,b,26,a)].
33 $F.  [resolve(28,a,32,a)].

============================== end of proof ==========================
