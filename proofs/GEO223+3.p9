============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n092.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 07:23:38 CDT 2014
% CPUTime    : 0.15 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 19409 was started by sandbox on n092.star.cs.uiowa.edu,
Fri Jun  6 07:23:38 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_19377_n092.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 41.
% Level of proof is 7.
% Maximum clause weight is 12.000.
% Given clauses 62.


1 (all A -distinct_lines(A,A)).  [assumption].
2 (all A -convergent_lines(A,A)).  [assumption].
3 (all A all B all C (distinct_lines(A,B) -> distinct_lines(A,C) | distinct_lines(B,C))).  [assumption].
4 (all A all B all C (convergent_lines(A,B) -> convergent_lines(A,C) | convergent_lines(B,C))).  [assumption].
5 (all A all B all C (convergent_lines(A,B) -> distinct_lines(B,C) | convergent_lines(A,C))).  [assumption].
6 (all A all B (distinct_lines(A,B) -> convergent_lines(A,B))).  [assumption].
7 (all A all B -convergent_lines(parallel_through_point(B,A),B)).  [assumption].
8 (all A all B (convergent_lines(A,B) | unorthogonal_lines(A,B))).  [assumption].
9 (all A all B all C (convergent_lines(A,B) & unorthogonal_lines(A,B) -> convergent_lines(A,C) & unorthogonal_lines(A,C) | convergent_lines(B,C) & unorthogonal_lines(B,C))).  [assumption].
10 (all A all B -unorthogonal_lines(orthogonal_through_point(B,A),B)).  [assumption].
11 (all A all B all C ((-convergent_lines(A,B) | -unorthogonal_lines(A,B)) & (-convergent_lines(A,C) | -unorthogonal_lines(A,C)) -> -convergent_lines(B,C) | -unorthogonal_lines(B,C))).  [assumption].
12 (all A all B all C (-unorthogonal_lines(A,B) & -unorthogonal_lines(A,C) -> -convergent_lines(B,C))).  [assumption].
13 (all A all B (equal_lines(A,B) <-> -distinct_lines(A,B))).  [assumption].
14 -(all A all B equal_lines(parallel_through_point(B,A),orthogonal_through_point(orthogonal_through_point(B,A),A))).  [assumption].
15 equal_lines(A,B) | distinct_lines(A,B).  [clausify(13)].
16 -equal_lines(parallel_through_point(c2,c1),orthogonal_through_point(orthogonal_through_point(c2,c1),c1)).  [clausify(14)].
17 convergent_lines(A,B) | unorthogonal_lines(A,B).  [clausify(8)].
18 -distinct_lines(A,A).  [clausify(1)].
19 -convergent_lines(A,A).  [clausify(2)].
20 -convergent_lines(parallel_through_point(A,B),A).  [clausify(7)].
21 -unorthogonal_lines(orthogonal_through_point(A,B),A).  [clausify(10)].
22 -distinct_lines(A,B) | convergent_lines(A,B).  [clausify(6)].
23 -distinct_lines(A,B) | distinct_lines(A,C) | distinct_lines(B,C).  [clausify(3)].
24 -convergent_lines(A,B) | convergent_lines(A,C) | convergent_lines(B,C).  [clausify(4)].
25 -convergent_lines(A,B) | distinct_lines(B,C) | convergent_lines(A,C).  [clausify(5)].
26 unorthogonal_lines(A,B) | unorthogonal_lines(A,C) | -convergent_lines(B,C).  [clausify(12)].
27 -convergent_lines(A,B) | -unorthogonal_lines(A,B) | unorthogonal_lines(A,C) | convergent_lines(B,C).  [clausify(9)].
28 unorthogonal_lines(A,B) | convergent_lines(A,C) | -convergent_lines(B,C) | -unorthogonal_lines(B,C).  [clausify(11)].
29 distinct_lines(parallel_through_point(c2,c1),orthogonal_through_point(orthogonal_through_point(c2,c1),c1)).  [resolve(16,a,15,a)].
30 convergent_lines(orthogonal_through_point(A,B),A).  [resolve(21,a,17,b)].
31 -distinct_lines(parallel_through_point(A,B),A).  [resolve(22,b,20,a)].
32 convergent_lines(parallel_through_point(c2,c1),orthogonal_through_point(orthogonal_through_point(c2,c1),c1)).  [resolve(29,a,22,a)].
33 distinct_lines(A,B) | convergent_lines(orthogonal_through_point(A,C),B).  [resolve(30,a,25,a)].
34 convergent_lines(orthogonal_through_point(A,B),C) | convergent_lines(A,C).  [resolve(30,a,24,a)].
35 -distinct_lines(A,B) | distinct_lines(B,A).  [resolve(23,b,18,a)].
36 -distinct_lines(A,parallel_through_point(A,B)).  [resolve(35,b,31,a)].
37 convergent_lines(orthogonal_through_point(A,B),parallel_through_point(A,C)).  [resolve(33,a,36,a)].
38 -unorthogonal_lines(orthogonal_through_point(A,B),parallel_through_point(A,C)) | unorthogonal_lines(orthogonal_through_point(A,B),D) | convergent_lines(parallel_through_point(A,C),D).  [resolve(27,a,37,a)].
39 -unorthogonal_lines(orthogonal_through_point(A,B),parallel_through_point(A,C)) | convergent_lines(parallel_through_point(A,C),A).  [resolve(38,b,21,a)].
40 -unorthogonal_lines(orthogonal_through_point(A,B),parallel_through_point(A,C)).  [resolve(39,b,20,a)].
41 convergent_lines(A,orthogonal_through_point(A,B)).  [resolve(34,a,19,a)].
42 convergent_lines(orthogonal_through_point(A,B),C) | -convergent_lines(A,C) | -unorthogonal_lines(A,C).  [resolve(28,a,21,a)].
43 -convergent_lines(A,orthogonal_through_point(A,B)) | -unorthogonal_lines(A,orthogonal_through_point(A,B)).  [resolve(42,a,19,a)].
44 -unorthogonal_lines(A,orthogonal_through_point(A,B)).  [resolve(43,a,41,a)].
45 unorthogonal_lines(orthogonal_through_point(A,B),C) | -convergent_lines(parallel_through_point(A,D),C).  [resolve(26,a,40,a)].
46 -convergent_lines(parallel_through_point(A,B),orthogonal_through_point(orthogonal_through_point(A,C),D)).  [resolve(45,a,44,a)].
47 $F.  [resolve(46,a,32,a)].

============================== end of proof ==========================
