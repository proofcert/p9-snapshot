============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n167.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 08:59:58 CDT 2014
% CPUTime    : 0.17 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 46085 was started by sandbox on n167.star.cs.uiowa.edu,
Fri Jun  6 08:59:58 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_46053_n167.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.05 (+ 0.00) seconds.
% Length of proof is 40.
% Level of proof is 8.
% Maximum clause weight is 15.000.
% Given clauses 98.


1 modus_ponens <-> (all A all B (is_a_theorem(A) & is_a_theorem(implies(A,B)) -> is_a_theorem(B))).  [assumption].
2 implies_1 <-> (all A all B is_a_theorem(implies(A,implies(B,A)))).  [assumption].
3 implies_2 <-> (all A all B is_a_theorem(implies(implies(A,implies(A,B)),implies(A,B)))).  [assumption].
4 or_3 <-> (all A all B all C is_a_theorem(implies(implies(A,C),implies(implies(B,C),implies(or(A,B),C))))).  [assumption].
5 cn3 <-> (all A is_a_theorem(implies(implies(not(A),A),A))).  [assumption].
6 r1 <-> (all A is_a_theorem(implies(or(A,A),A))).  [assumption].
7 op_or -> (all A all B or(A,B) = not(and(not(A),not(B)))).  [assumption].
8 op_implies_and -> (all A all B implies(A,B) = not(and(A,not(B)))).  [assumption].
9 op_or.  [assumption].
10 op_implies_and.  [assumption].
11 modus_ponens.  [assumption].
12 implies_1.  [assumption].
13 implies_2.  [assumption].
14 or_3.  [assumption].
15 -cn3.  [assumption].
16 -implies_1 | is_a_theorem(implies(A,implies(B,A))).  [clausify(2)].
17 is_a_theorem(implies(A,implies(B,A))).  [resolve(12,a,16,a)].
18 -r1 | is_a_theorem(implies(or(A,A),A)).  [clausify(6)].
19 r1 | -is_a_theorem(implies(or(c45,c45),c45)).  [clausify(6)].
20 cn3 | -is_a_theorem(implies(implies(not(c44),c44),c44)).  [clausify(5)].
21 -is_a_theorem(implies(implies(not(c44),c44),c44)).  [resolve(15,a,20,a)].
22 -modus_ponens | -is_a_theorem(A) | -is_a_theorem(implies(A,B)) | is_a_theorem(B).  [clausify(1)].
23 -is_a_theorem(A) | -is_a_theorem(implies(A,B)) | is_a_theorem(B).  [resolve(11,a,22,a)].
24 -op_implies_and | not(and(A,not(B))) = implies(A,B).  [clausify(8)].
25 not(and(A,not(B))) = implies(A,B).  [resolve(10,a,24,a)].
26 -implies_2 | is_a_theorem(implies(implies(A,implies(A,B)),implies(A,B))).  [clausify(3)].
27 is_a_theorem(implies(implies(A,implies(A,B)),implies(A,B))).  [resolve(13,a,26,a)].
28 -op_or | or(A,B) = not(and(not(A),not(B))).  [clausify(7)].
29 -op_or | or(A,B) = implies(not(A),B).  [para(25(a,1),28(b,2))].
30 or(A,B) = implies(not(A),B).  [resolve(9,a,29,a)].
31 -or_3 | is_a_theorem(implies(implies(A,B),implies(implies(C,B),implies(or(A,C),B)))).  [clausify(4)].
32 -or_3 | is_a_theorem(implies(implies(A,B),implies(implies(C,B),implies(implies(not(A),C),B)))).  [para(30(a,1),31(b,1,2,2,1))].
33 is_a_theorem(implies(implies(A,B),implies(implies(C,B),implies(implies(not(A),C),B)))).  [resolve(14,a,32,a)].
34 r1 | -is_a_theorem(implies(implies(not(c45),c45),c45)).  [para(30(a,1),19(b,1,1))].
35 -r1 | is_a_theorem(implies(implies(not(A),A),A)).  [para(30(a,1),18(b,1,1))].
36 -is_a_theorem(implies(A,implies(A,B))) | is_a_theorem(implies(A,B)).  [resolve(27,a,23,b)].
37 -r1.  [resolve(35,b,21,a)].
38 -is_a_theorem(implies(implies(not(c45),c45),c45)).  [resolve(37,a,34,a)].
39 is_a_theorem(implies(implies(A,B),implies(implies(not(A),A),B))).  [resolve(36,a,33,a)].
40 is_a_theorem(implies(A,A)).  [resolve(36,a,17,a)].
41 -is_a_theorem(implies(implies(A,A),B)) | is_a_theorem(B).  [resolve(23,a,40,a)].
42 -is_a_theorem(implies(implies(A,A),implies(implies(not(c45),c45),c45))).  [resolve(41,b,38,a)].
43 $F.  [resolve(42,a,39,a)].

============================== end of proof ==========================
