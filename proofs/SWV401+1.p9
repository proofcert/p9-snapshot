============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n063.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 08:20:43 CDT 2014
% CPUTime    : 3.98 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 44692 was started by sandbox on n063.star.cs.uiowa.edu,
Fri Jun  6 08:20:43 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_44660_n063.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 3.83 (+ 0.02) seconds.
% Length of proof is 40.
% Level of proof is 11.
% Maximum clause weight is 30.000.
% Given clauses 409.


1 (all A all B (less_than(A,B) | less_than(B,A))).  [assumption].
2 (all A all B (strictly_less_than(A,B) <-> less_than(A,B) & -less_than(B,A))).  [assumption].
3 (all A all B all C all D all E (pair_in_list(insert_slb(A,pair(B,D)),C,E) <-> pair_in_list(A,C,E) | B = C & D = E)).  [assumption].
4 (all A all B all C lookup_slb(insert_slb(A,pair(B,C)),B) = C).  [assumption].
5 (all A all B all C all D (strictly_less_than(D,C) -> update_slb(insert_slb(A,pair(B,D)),C) = insert_slb(update_slb(A,C),pair(B,C)))).  [assumption].
6 (all A all B all C all D (less_than(C,D) -> update_slb(insert_slb(A,pair(B,D)),C) = insert_slb(update_slb(A,C),pair(B,D)))).  [assumption].
7 -(all A ((all B all C all D (pair_in_list(A,B,C) & less_than(D,C) -> pair_in_list(update_slb(A,D),B,C))) -> (all E all F all V6 all V7 all V8 (pair_in_list(insert_slb(A,pair(V7,V8)),E,F) & less_than(V6,F) -> pair_in_list(update_slb(insert_slb(A,pair(V7,V8)),V6),E,F))))).  [assumption].
8 strictly_less_than(A,B) | -less_than(A,B) | less_than(B,A).  [clausify(2)].
9 -strictly_less_than(A,B) | update_slb(insert_slb(C,pair(D,A)),B) = insert_slb(update_slb(C,B),pair(D,B)).  [clausify(5)].
10 less_than(c4,c3).  [clausify(7)].
11 less_than(A,B) | less_than(B,A).  [clausify(1)].
12 pair_in_list(insert_slb(c1,pair(c5,c6)),c2,c3).  [clausify(7)].
13 lookup_slb(insert_slb(A,pair(B,C)),B) = C.  [clausify(4)].
14 -pair_in_list(update_slb(insert_slb(c1,pair(c5,c6)),c4),c2,c3).  [clausify(7)].
15 pair_in_list(insert_slb(A,pair(B,C)),D,E) | -pair_in_list(A,D,E).  [clausify(3)].
16 -pair_in_list(c1,A,B) | -less_than(C,B) | pair_in_list(update_slb(c1,C),A,B).  [clausify(7)].
17 pair_in_list(insert_slb(A,pair(B,C)),D,E) | D != B | E != C.  [clausify(3)].
18 -pair_in_list(insert_slb(A,pair(B,C)),D,E) | pair_in_list(A,D,E) | D = B.  [clausify(3)].
19 -pair_in_list(insert_slb(A,pair(B,C)),D,E) | pair_in_list(A,D,E) | E = C.  [clausify(3)].
20 -less_than(A,B) | update_slb(insert_slb(C,pair(D,B)),A) = insert_slb(update_slb(C,A),pair(D,B)).  [clausify(6)].
21 update_slb(insert_slb(A,pair(B,C)),D) = insert_slb(update_slb(A,D),pair(B,D)) | -less_than(C,D) | less_than(D,C).  [resolve(9,a,8,a)].
22 pair_in_list(insert_slb(A,pair(B,C)),D,lookup_slb(insert_slb(E,pair(F,C)),F)) | D != B.  [resolve(17,c,13,a)].
23 pair_in_list(insert_slb(A,pair(B,C)),D,C) | D != B.  [para(13(a,1),22(a,3))].
24 pair_in_list(c1,c2,c3) | c2 = c5.  [resolve(18,a,12,a)].
25 pair_in_list(c1,c2,c3) | c5 = c2.  [copy(24),flip(b)].
26 pair_in_list(c1,c2,c3) | c3 = c6.  [resolve(19,a,12,a)].
27 pair_in_list(c1,c2,c3) | c6 = c3.  [copy(26),flip(b)].
28 update_slb(insert_slb(A,pair(B,c3)),c4) = insert_slb(update_slb(A,c4),pair(B,c3)).  [resolve(20,a,10,a)].
29 update_slb(insert_slb(A,pair(B,C)),D) = insert_slb(update_slb(A,D),pair(B,D)) | less_than(D,C) | less_than(D,C).  [resolve(21,b,11,b)].
30 update_slb(insert_slb(A,pair(B,C)),D) = insert_slb(update_slb(A,D),pair(B,D)) | less_than(D,C).  [copy(29),merge(c)].
31 c5 = c2 | -less_than(A,c3) | pair_in_list(update_slb(c1,A),c2,c3).  [resolve(25,a,16,a)].
32 c6 = c3 | -less_than(A,c3) | pair_in_list(update_slb(c1,A),c2,c3).  [resolve(27,a,16,a)].
33 c5 = c2 | pair_in_list(update_slb(c1,c4),c2,c3).  [resolve(31,b,10,a)].
34 c5 = c2 | pair_in_list(insert_slb(update_slb(c1,c4),pair(A,B)),c2,c3).  [resolve(33,b,15,b)].
35 c6 = c3 | pair_in_list(update_slb(c1,c4),c2,c3).  [resolve(32,b,10,a)].
36 c6 = c3 | pair_in_list(insert_slb(update_slb(c1,c4),pair(A,B)),c2,c3).  [resolve(35,b,15,b)].
37 update_slb(insert_slb(A,pair(B,C)),D) = insert_slb(update_slb(A,D),pair(B,D)) | update_slb(insert_slb(E,pair(F,C)),D) = insert_slb(update_slb(E,D),pair(F,C)).  [resolve(30,b,20,a)].
38 update_slb(insert_slb(A,pair(B,c6)),c4) = insert_slb(update_slb(A,c4),pair(B,c6)) | -pair_in_list(insert_slb(update_slb(c1,c4),pair(c5,c4)),c2,c3).  [para(37(a,1),14(a,1))].
39 update_slb(insert_slb(A,pair(B,c6)),c4) = insert_slb(update_slb(A,c4),pair(B,c6)) | c6 = c3.  [resolve(38,b,36,b)].
40 c6 = c3 | -pair_in_list(insert_slb(update_slb(c1,c4),pair(c5,c6)),c2,c3).  [para(39(a,1),14(a,1))].
41 c6 = c3 | c6 = c3.  [resolve(40,b,36,b)].
42 c6 = c3.  [copy(41),merge(b)].
43 -pair_in_list(update_slb(insert_slb(c1,pair(c5,c3)),c4),c2,c3).  [para(42(a,1),14(a,1,1,2,2))].
44 -pair_in_list(insert_slb(update_slb(c1,c4),pair(c5,c3)),c2,c3).  [para(28(a,1),43(a,1))].
45 c5 = c2.  [resolve(44,a,34,b)].
46 c2 != c5.  [resolve(23,a,44,a)].
47 c2 != c2.  [para(45(a,1),46(a,2))].
48 $F.  [copy(47),xx(a)].

============================== end of proof ==========================
