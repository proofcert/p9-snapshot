============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n097.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 14:57:18 CDT 2014
% CPUTime    : 2.28 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 33261 was started by sandbox on n097.star.cs.uiowa.edu,
Thu Jun  5 14:57:18 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_33229_n097.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 2.06 (+ 0.01) seconds.
% Length of proof is 23.
% Level of proof is 4.
% Maximum clause weight is 11.000.
% Given clauses 1407.


1 (all A (ssList(A) -> (all B (ssList(B) -> (neq(A,B) <-> A != B))))).  [assumption].
2 -(all A (ssList(A) -> (all B (ssList(B) -> (all C (ssList(C) -> (all D (ssList(D) -> B != D | A != C | -neq(B,nil) | (exists E (ssList(E) & neq(E,nil) & frontsegP(B,E) & frontsegP(A,E))) | (all F (ssList(F) -> -neq(F,nil) | -frontsegP(D,F) | -frontsegP(C,F))) & (nil != D | nil != C))))))))).  [assumption].
3 -ssList(A) | -ssList(B) | -neq(A,B) | B != A.  [clausify(1)].
4 ssList(nil).  [assumption].
5 ssList(c4).  [clausify(2)].
6 c6 = c4.  [clausify(2)].
7 c5 = c3.  [clausify(2)].
8 neq(c4,nil).  [clausify(2)].
9 -ssList(A) | -neq(A,nil) | -frontsegP(c4,A) | -frontsegP(c3,A).  [clausify(2)].
10 ssList(c7) | nil = c6.  [clausify(2)].
11 ssList(c7) | nil = c4.  [para(6(a,1),10(b,2))].
12 ssList(c7) | c4 = nil.  [copy(11),flip(b)].
13 neq(c7,nil) | nil = c6.  [clausify(2)].
14 neq(c7,nil) | nil = c4.  [para(6(a,1),13(b,2))].
15 neq(c7,nil) | c4 = nil.  [copy(14),flip(b)].
16 frontsegP(c6,c7) | nil = c6.  [clausify(2)].
17 frontsegP(c4,c7) | nil = c6.  [para(6(a,1),16(a,1))].
18 frontsegP(c4,c7) | nil = c4.  [para(6(a,1),17(b,2))].
19 frontsegP(c4,c7) | c4 = nil.  [copy(18),flip(b)].
20 frontsegP(c5,c7) | nil = c6.  [clausify(2)].
21 frontsegP(c3,c7) | nil = c6.  [para(7(a,1),20(a,1))].
22 frontsegP(c3,c7) | nil = c4.  [para(6(a,1),21(b,2))].
23 frontsegP(c3,c7) | c4 = nil.  [copy(22),flip(b)].
24 -ssList(c4) | -ssList(nil) | nil != c4.  [resolve(8,a,3,c)].
25 -ssList(c4) | -ssList(nil) | c4 != nil.  [copy(24),flip(c)].
26 -ssList(nil) | c4 != nil.  [resolve(5,a,25,a)].
27 c4 != nil.  [resolve(4,a,26,a)].
28 frontsegP(c3,c7).  [resolve(27,a,23,b)].
29 frontsegP(c4,c7).  [resolve(27,a,19,b)].
30 neq(c7,nil).  [resolve(27,a,15,b)].
31 ssList(c7).  [resolve(27,a,12,b)].
32 -ssList(c7) | -frontsegP(c4,c7) | -frontsegP(c3,c7).  [resolve(30,a,9,b)].
33 -frontsegP(c4,c7) | -frontsegP(c3,c7).  [resolve(31,a,32,a)].
34 -frontsegP(c3,c7).  [resolve(29,a,33,a)].
35 $F.  [resolve(28,a,34,a)].

============================== end of proof ==========================
