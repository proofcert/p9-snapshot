============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n033.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 23:09:53 CDT 2014
% CPUTime    : 0.16 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 53825 was started by sandbox on n033.star.cs.uiowa.edu,
Thu Jun  5 23:09:53 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_53793_n033.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.03 (+ 0.00) seconds.
% Length of proof is 16.
% Level of proof is 4.
% Maximum clause weight is 13.000.
% Given clauses 56.


1 (all A all B (part_of(B,A) <-> (all C (incident_c(C,B) -> incident_c(C,A))))).  [assumption].
2 (all A all B (inner_point(A,B) <-> incident_c(A,B) & -end_point(A,B))).  [assumption].
3 (all A all B all C (meet(A,B,C) <-> incident_c(A,B) & incident_c(A,C) & (all D (incident_c(D,B) & incident_c(D,C) -> end_point(D,B) & end_point(D,C))))).  [assumption].
4 (all A exists B inner_point(B,A)).  [assumption].
5 -(all A all B (part_of(A,B) -> -(exists C meet(C,A,B)))).  [assumption].
6 -inner_point(A,B) | -end_point(A,B).  [clausify(2)].
7 inner_point(f8(A),A).  [clausify(4)].
8 -inner_point(A,B) | incident_c(A,B).  [clausify(2)].
9 part_of(c10,c11).  [clausify(5)].
10 meet(c12,c10,c11).  [clausify(5)].
11 -part_of(A,B) | -incident_c(C,A) | incident_c(C,B).  [clausify(1)].
12 -meet(A,B,C) | -incident_c(D,B) | -incident_c(D,C) | end_point(D,B).  [clausify(3)].
13 -end_point(f8(A),A).  [resolve(6,a,7,a)].
14 incident_c(f8(A),A).  [resolve(8,a,7,a)].
15 -incident_c(A,c10) | -incident_c(A,c11) | end_point(A,c10).  [resolve(12,a,10,a)].
16 -incident_c(f8(c10),c11) | end_point(f8(c10),c10).  [resolve(15,a,14,a)].
17 -incident_c(f8(c10),c11).  [resolve(16,b,13,a)].
18 -part_of(A,B) | incident_c(f8(A),B).  [resolve(11,b,14,a)].
19 -part_of(c10,c11).  [resolve(18,b,17,a)].
20 $F.  [resolve(9,a,19,a)].

============================== end of proof ==========================
