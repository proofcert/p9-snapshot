============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n041.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 13:32:48 CDT 2014
% CPUTime    : 0.13 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 57200 was started by sandbox on n041.star.cs.uiowa.edu,
Thu Jun  5 13:32:48 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_57168_n041.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 40.
% Level of proof is 7.
% Maximum clause weight is 38.000.
% Given clauses 40.


1 (all A all B addition(A,B) = addition(B,A)).  [assumption].
2 (all A all B all C addition(C,addition(B,A)) = addition(addition(C,B),A)).  [assumption].
3 (all A addition(A,A) = A).  [assumption].
4 (all A multiplication(A,one) = A).  [assumption].
5 (all A multiplication(one,A) = A).  [assumption].
6 (all A all B all C multiplication(A,addition(B,C)) = addition(multiplication(A,B),multiplication(A,C))).  [assumption].
7 (all A all B all C multiplication(addition(A,B),C) = addition(multiplication(A,C),multiplication(B,C))).  [assumption].
8 (all A all B (leq(A,B) <-> addition(A,B) = B)).  [assumption].
9 (all A all B (complement(B,A) <-> multiplication(A,B) = zero & multiplication(B,A) = zero & addition(A,B) = one)).  [assumption].
10 (all A all B (test(A) -> (c(A) = B <-> complement(A,B)))).  [assumption].
11 -(all A all B (test(B) & test(A) -> leq(one,addition(addition(addition(multiplication(A,B),multiplication(A,c(B))),multiplication(c(A),B)),multiplication(c(A),c(B)))) & leq(addition(addition(addition(multiplication(A,B),multiplication(A,c(B))),multiplication(c(A),B)),multiplication(c(A),c(B))),one))).  [assumption].
12 test(c2).  [clausify(11)].
13 test(c1).  [clausify(11)].
14 -test(A) | c(A) != B | complement(A,B).  [clausify(10)].
15 addition(A,A) = A.  [clausify(3)].
16 multiplication(A,one) = A.  [clausify(4)].
17 multiplication(one,A) = A.  [clausify(5)].
18 addition(A,B) = addition(B,A).  [clausify(1)].
19 addition(addition(A,B),C) = addition(A,addition(B,C)).  [clausify(2)].
20 addition(C,addition(A,B)) = addition(A,addition(B,C)).  [para(18(a,1),19(a,1))].
21 addition(A,addition(B,C)) = addition(C,addition(A,B)).  [copy(20),flip(a)].
22 multiplication(A,addition(B,C)) = addition(multiplication(A,B),multiplication(A,C)).  [clausify(6)].
23 addition(multiplication(A,B),multiplication(A,C)) = multiplication(A,addition(B,C)).  [copy(22),flip(a)].
24 multiplication(addition(A,B),C) = addition(multiplication(A,C),multiplication(B,C)).  [clausify(7)].
25 addition(multiplication(A,B),multiplication(C,B)) = multiplication(addition(A,C),B).  [copy(24),flip(a)].
26 -leq(one,addition(addition(addition(multiplication(c1,c2),multiplication(c1,c(c2))),multiplication(c(c1),c2)),multiplication(c(c1),c(c2)))) | -leq(addition(addition(addition(multiplication(c1,c2),multiplication(c1,c(c2))),multiplication(c(c1),c2)),multiplication(c(c1),c(c2))),one).  [clausify(11)].
27 -leq(one,addition(addition(multiplication(c1,addition(c2,c(c2))),multiplication(c(c1),c2)),multiplication(c(c1),c(c2)))) | -leq(addition(addition(addition(multiplication(c1,c2),multiplication(c1,c(c2))),multiplication(c(c1),c2)),multiplication(c(c1),c(c2))),one).  [para(23(a,1),26(a,2,1,1))].
28 -leq(one,addition(addition(multiplication(c(c1),c2),multiplication(c1,addition(c2,c(c2)))),multiplication(c(c1),c(c2)))) | -leq(addition(addition(addition(multiplication(c1,c2),multiplication(c1,c(c2))),multiplication(c(c1),c2)),multiplication(c(c1),c(c2))),one).  [para(18(a,1),27(a,2,1))].
29 -leq(one,addition(multiplication(c(c1),c(c2)),addition(multiplication(c(c1),c2),multiplication(c1,addition(c2,c(c2)))))) | -leq(addition(addition(addition(multiplication(c1,c2),multiplication(c1,c(c2))),multiplication(c(c1),c2)),multiplication(c(c1),c(c2))),one).  [para(18(a,1),28(a,2))].
30 -leq(one,addition(multiplication(c(c1),c2),addition(multiplication(c1,addition(c2,c(c2))),multiplication(c(c1),c(c2))))) | -leq(addition(addition(addition(multiplication(c1,c2),multiplication(c1,c(c2))),multiplication(c(c1),c2)),multiplication(c(c1),c(c2))),one).  [para(21(a,2),29(a,2))].
31 -leq(one,addition(multiplication(c(c1),c2),addition(multiplication(c(c1),c(c2)),multiplication(c1,addition(c2,c(c2)))))) | -leq(addition(addition(addition(multiplication(c1,c2),multiplication(c1,c(c2))),multiplication(c(c1),c2)),multiplication(c(c1),c(c2))),one).  [para(18(a,1),30(a,2,2))].
32 -leq(one,addition(multiplication(c(c1),c2),addition(multiplication(c(c1),c(c2)),multiplication(c1,addition(c2,c(c2)))))) | -leq(addition(addition(multiplication(c1,addition(c2,c(c2))),multiplication(c(c1),c2)),multiplication(c(c1),c(c2))),one).  [para(23(a,1),31(b,1,1,1))].
33 -leq(one,addition(multiplication(c(c1),c2),addition(multiplication(c(c1),c(c2)),multiplication(c1,addition(c2,c(c2)))))) | -leq(addition(addition(multiplication(c(c1),c2),multiplication(c1,addition(c2,c(c2)))),multiplication(c(c1),c(c2))),one).  [para(18(a,1),32(b,1,1))].
34 -leq(one,addition(multiplication(c(c1),c2),addition(multiplication(c(c1),c(c2)),multiplication(c1,addition(c2,c(c2)))))) | -leq(addition(multiplication(c(c1),c(c2)),addition(multiplication(c(c1),c2),multiplication(c1,addition(c2,c(c2))))),one).  [para(18(a,1),33(b,1))].
35 -leq(one,addition(multiplication(c(c1),c2),addition(multiplication(c(c1),c(c2)),multiplication(c1,addition(c2,c(c2)))))) | -leq(addition(multiplication(c(c1),c2),addition(multiplication(c1,addition(c2,c(c2))),multiplication(c(c1),c(c2)))),one).  [para(21(a,2),34(b,1))].
36 -leq(one,addition(multiplication(c(c1),c2),addition(multiplication(c(c1),c(c2)),multiplication(c1,addition(c2,c(c2)))))) | -leq(addition(multiplication(c(c1),c2),addition(multiplication(c(c1),c(c2)),multiplication(c1,addition(c2,c(c2))))),one).  [para(18(a,1),35(b,1,2))].
37 leq(A,B) | addition(A,B) != B.  [clausify(8)].
38 -complement(A,B) | addition(B,A) = one.  [clausify(9)].
39 -complement(A,B) | addition(A,B) = one.  [para(18(a,1),38(b,1))].
40 c(c2) != A | complement(c2,A).  [resolve(14,a,12,a)].
41 c(c1) != A | complement(c1,A).  [resolve(14,a,13,a)].
42 -leq(one,addition(multiplication(c(c1),c2),addition(multiplication(c(c1),c(c2)),multiplication(c1,addition(c2,c(c2)))))) | -leq(addition(multiplication(c1,addition(c2,c(c2))),addition(multiplication(c(c1),c2),multiplication(c(c1),c(c2)))),one).  [para(21(a,1),36(b,1))].
43 -leq(one,addition(multiplication(c(c1),c2),addition(multiplication(c(c1),c(c2)),multiplication(c1,addition(c2,c(c2)))))) | -leq(addition(multiplication(c1,addition(c2,c(c2))),multiplication(c(c1),addition(c2,c(c2)))),one).  [para(23(a,1),42(b,1,2))].
44 -leq(one,addition(multiplication(c(c1),c2),addition(multiplication(c(c1),c(c2)),multiplication(c1,addition(c2,c(c2)))))) | -leq(multiplication(addition(c1,c(c1)),addition(c2,c(c2))),one).  [para(25(a,1),43(b,1))].
45 leq(A,A).  [resolve(37,b,15,a)].
46 complement(c2,multiplication(one,c(c2))).  [resolve(40,a,17,a(flip))].
47 complement(c2,c(c2)).  [para(17(a,1),46(a,2))].
48 complement(c1,multiplication(one,c(c1))).  [resolve(41,a,17,a(flip))].
49 complement(c1,c(c1)).  [para(17(a,1),48(a,2))].
50 -leq(one,addition(multiplication(c1,addition(c2,c(c2))),addition(multiplication(c(c1),c2),multiplication(c(c1),c(c2))))) | -leq(multiplication(addition(c1,c(c1)),addition(c2,c(c2))),one).  [para(21(a,1),44(a,2))].
51 -leq(one,addition(multiplication(c1,addition(c2,c(c2))),multiplication(c(c1),addition(c2,c(c2))))) | -leq(multiplication(addition(c1,c(c1)),addition(c2,c(c2))),one).  [para(23(a,1),50(a,2,2))].
52 -leq(one,multiplication(addition(c1,c(c1)),addition(c2,c(c2)))) | -leq(multiplication(addition(c1,c(c1)),addition(c2,c(c2))),one).  [para(25(a,1),51(a,2))].
53 addition(c2,c(c2)) = one.  [resolve(47,a,39,a)].
54 -leq(one,multiplication(addition(c1,c(c1)),one)) | -leq(multiplication(addition(c1,c(c1)),addition(c2,c(c2))),one).  [para(53(a,1),52(a,2,2))].
55 -leq(one,addition(c1,c(c1))) | -leq(multiplication(addition(c1,c(c1)),addition(c2,c(c2))),one).  [para(16(a,1),54(a,2))].
56 -leq(one,addition(c1,c(c1))) | -leq(multiplication(addition(c1,c(c1)),one),one).  [para(53(a,1),55(b,1,2))].
57 -leq(one,addition(c1,c(c1))) | -leq(addition(c1,c(c1)),one).  [para(16(a,1),56(b,1))].
58 addition(c1,c(c1)) = one.  [resolve(49,a,39,a)].
59 -leq(one,one) | -leq(addition(c1,c(c1)),one).  [para(58(a,1),57(a,2))].
60 -leq(one,one) | -leq(one,one).  [para(58(a,1),59(b,1))].
61 -leq(one,one).  [copy(60),merge(b)].
62 $F.  [resolve(45,a,61,a)].

============================== end of proof ==========================
