============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n123.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 04:27:08 CDT 2014
% CPUTime    : 184.22 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 27150 was started by sandbox on n123.star.cs.uiowa.edu,
Fri Jun  6 04:27:08 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_27118_n123.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 183.77 (+ 0.21) seconds.
% Length of proof is 62.
% Level of proof is 12.
% Maximum clause weight is 39.000.
% Given clauses 51688.


1 (all A all B all C all D all E all F (rdn_translate(A,rdn_pos(D)) & rdn_translate(B,rdn_pos(E)) & rdn_add_with_carry(rdnn(n0),D,E,F) & rdn_translate(C,rdn_pos(F)) -> sum(A,B,C))).  [assumption].
2 (all A all B all C all D (sum(A,B,C) & sum(A,B,D) -> C = D)).  [assumption].
3 (all A all B all C all D all E (rdn_digit_add(rdnn(B),rdnn(C),rdnn(E),rdnn(n0)) & rdn_digit_add(rdnn(E),rdnn(A),rdnn(D),rdnn(n0)) -> rdn_add_with_carry(rdnn(A),rdnn(B),rdnn(C),rdnn(D)))).  [assumption].
4 (all A all B all C all D all E all F all V6 (rdn_digit_add(rdnn(B),rdnn(C),rdnn(D),rdnn(F)) & rdn_digit_add(rdnn(D),rdnn(A),rdnn(E),rdnn(V6)) & rdn_digit_add(rdnn(F),rdnn(V6),rdnn(n1),rdnn(n0)) -> rdn_add_with_carry(rdnn(A),rdnn(B),rdnn(C),rdn(rdnn(E),rdnn(n1))))).  [assumption].
5 -(all A all B all C all D (sum(n2,n3,A) & sum(A,n6,B) & sum(n3,n6,C) & sum(n2,C,D) -> B = D)).  [assumption].
6 rdn_translate(n2,rdn_pos(rdnn(n2))).  [assumption].
7 rdn_translate(n3,rdn_pos(rdnn(n3))).  [assumption].
8 rdn_translate(n5,rdn_pos(rdnn(n5))).  [assumption].
9 rdn_translate(n6,rdn_pos(rdnn(n6))).  [assumption].
10 rdn_translate(n9,rdn_pos(rdnn(n9))).  [assumption].
11 rdn_translate(n11,rdn_pos(rdn(rdnn(n1),rdnn(n1)))).  [assumption].
12 -rdn_translate(A,rdn_pos(B)) | -rdn_translate(C,rdn_pos(D)) | -rdn_add_with_carry(rdnn(n0),B,D,E) | -rdn_translate(F,rdn_pos(E)) | sum(A,C,F).  [clausify(1)].
13 -sum(A,B,C) | -sum(A,B,D) | D = C.  [clausify(2)].
14 -rdn_digit_add(rdnn(A),rdnn(B),rdnn(C),rdnn(n0)) | -rdn_digit_add(rdnn(C),rdnn(D),rdnn(E),rdnn(n0)) | rdn_add_with_carry(rdnn(D),rdnn(A),rdnn(B),rdnn(E)).  [clausify(3)].
15 -rdn_digit_add(rdnn(A),rdnn(B),rdnn(C),rdnn(D)) | -rdn_digit_add(rdnn(C),rdnn(E),rdnn(F),rdnn(V6)) | -rdn_digit_add(rdnn(D),rdnn(V6),rdnn(n1),rdnn(n0)) | rdn_add_with_carry(rdnn(E),rdnn(A),rdnn(B),rdn(rdnn(F),rdnn(n1))).  [clausify(4)].
16 rdn_digit_add(rdnn(n1),rdnn(n0),rdnn(n1),rdnn(n0)).  [assumption].
17 rdn_digit_add(rdnn(n2),rdnn(n3),rdnn(n5),rdnn(n0)).  [assumption].
18 rdn_digit_add(rdnn(n2),rdnn(n9),rdnn(n1),rdnn(n1)).  [assumption].
19 rdn_digit_add(rdnn(n3),rdnn(n6),rdnn(n9),rdnn(n0)).  [assumption].
20 rdn_digit_add(rdnn(n5),rdnn(n0),rdnn(n5),rdnn(n0)).  [assumption].
21 rdn_digit_add(rdnn(n5),rdnn(n6),rdnn(n1),rdnn(n1)).  [assumption].
22 rdn_digit_add(rdnn(n9),rdnn(n0),rdnn(n9),rdnn(n0)).  [assumption].
23 sum(n2,n3,c1).  [clausify(5)].
24 sum(c1,n6,c2).  [clausify(5)].
25 sum(n3,n6,c3).  [clausify(5)].
26 sum(n2,c3,c4).  [clausify(5)].
27 c4 != c2.  [clausify(5)].
28 -rdn_digit_add(rdnn(n5),rdnn(A),rdnn(B),rdnn(n0)) | rdn_add_with_carry(rdnn(A),rdnn(n2),rdnn(n3),rdnn(B)).  [resolve(17,a,14,a)].
29 -rdn_digit_add(rdnn(n1),rdnn(A),rdnn(B),rdnn(C)) | -rdn_digit_add(rdnn(n1),rdnn(C),rdnn(n1),rdnn(n0)) | rdn_add_with_carry(rdnn(A),rdnn(n2),rdnn(n9),rdn(rdnn(B),rdnn(n1))).  [resolve(18,a,15,a)].
30 -rdn_digit_add(rdnn(n1),rdnn(n0),rdnn(n1),rdnn(n0)) | rdn_add_with_carry(rdnn(n0),rdnn(n2),rdnn(n9),rdn(rdnn(n1),rdnn(n1))).  [factor(29,a,b)].
31 rdn_add_with_carry(rdnn(n0),rdnn(n2),rdnn(n9),rdn(rdnn(n1),rdnn(n1))).  [resolve(16,a,30,a)].
32 -rdn_digit_add(rdnn(n9),rdnn(A),rdnn(B),rdnn(n0)) | rdn_add_with_carry(rdnn(A),rdnn(n3),rdnn(n6),rdnn(B)).  [resolve(19,a,14,a)].
33 -rdn_digit_add(rdnn(n1),rdnn(A),rdnn(B),rdnn(C)) | -rdn_digit_add(rdnn(n1),rdnn(C),rdnn(n1),rdnn(n0)) | rdn_add_with_carry(rdnn(A),rdnn(n5),rdnn(n6),rdn(rdnn(B),rdnn(n1))).  [resolve(21,a,15,a)].
34 -rdn_digit_add(rdnn(n1),rdnn(n0),rdnn(n1),rdnn(n0)) | rdn_add_with_carry(rdnn(n0),rdnn(n5),rdnn(n6),rdn(rdnn(n1),rdnn(n1))).  [factor(33,a,b)].
35 rdn_add_with_carry(rdnn(n0),rdnn(n5),rdnn(n6),rdn(rdnn(n1),rdnn(n1))).  [resolve(16,a,34,a)].
36 -sum(n2,n3,A) | c1 = A.  [resolve(23,a,13,b)].
37 -sum(n3,n6,A) | c3 = A.  [resolve(25,a,13,b)].
38 rdn_add_with_carry(rdnn(n0),rdnn(n2),rdnn(n3),rdnn(n5)).  [resolve(28,a,20,a)].
39 -rdn_translate(A,rdn_pos(rdnn(n2))) | -rdn_translate(B,rdn_pos(rdnn(n9))) | -rdn_translate(C,rdn_pos(rdn(rdnn(n1),rdnn(n1)))) | sum(A,B,C).  [resolve(31,a,12,c)].
40 rdn_add_with_carry(rdnn(n0),rdnn(n3),rdnn(n6),rdnn(n9)).  [resolve(32,a,22,a)].
41 -rdn_translate(A,rdn_pos(rdnn(n5))) | -rdn_translate(B,rdn_pos(rdnn(n6))) | -rdn_translate(C,rdn_pos(rdn(rdnn(n1),rdnn(n1)))) | sum(A,B,C).  [resolve(35,a,12,c)].
42 -rdn_translate(A,rdn_pos(rdnn(n2))) | -rdn_translate(B,rdn_pos(rdnn(n3))) | -rdn_translate(C,rdn_pos(rdnn(n5))) | sum(A,B,C).  [resolve(38,a,12,c)].
43 -rdn_translate(A,rdn_pos(rdnn(n3))) | -rdn_translate(B,rdn_pos(rdnn(n6))) | -rdn_translate(C,rdn_pos(rdnn(n9))) | sum(A,B,C).  [resolve(40,a,12,c)].
44 -rdn_translate(A,rdn_pos(rdnn(n9))) | -rdn_translate(B,rdn_pos(rdn(rdnn(n1),rdnn(n1)))) | sum(n2,A,B).  [resolve(39,a,6,a)].
45 -rdn_translate(A,rdn_pos(rdnn(n6))) | -rdn_translate(B,rdn_pos(rdn(rdnn(n1),rdnn(n1)))) | sum(n5,A,B).  [resolve(41,a,8,a)].
46 -rdn_translate(A,rdn_pos(rdnn(n3))) | -rdn_translate(B,rdn_pos(rdnn(n5))) | sum(n2,A,B).  [resolve(42,a,6,a)].
47 -rdn_translate(A,rdn_pos(rdnn(n6))) | -rdn_translate(B,rdn_pos(rdnn(n9))) | sum(n3,A,B).  [resolve(43,a,7,a)].
48 -rdn_translate(A,rdn_pos(rdnn(n9))) | sum(n2,A,n11).  [resolve(44,b,11,a)].
49 sum(n2,n9,n11).  [resolve(48,a,10,a)].
50 -sum(n2,n9,A) | n11 = A.  [resolve(49,a,13,b)].
51 -rdn_translate(A,rdn_pos(rdnn(n6))) | sum(n5,A,n11).  [resolve(45,b,11,a)].
52 sum(n5,n6,n11).  [resolve(51,a,9,a)].
53 -sum(n5,n6,A) | n11 = A.  [resolve(52,a,13,b)].
54 -rdn_translate(A,rdn_pos(rdnn(n5))) | sum(n2,n3,A).  [resolve(46,a,7,a)].
55 sum(n2,n3,n5).  [resolve(54,a,8,a)].
56 c1 = n5.  [resolve(55,a,36,a)].
57 sum(n5,n6,c2).  [para(56(a,1),24(a,1))].
58 n11 = c2.  [resolve(57,a,53,a)].
59 c2 = n11.  [copy(58),flip(a)].
60 c4 != n11.  [para(59(a,1),27(a,2))].
61 -rdn_translate(A,rdn_pos(rdnn(n9))) | sum(n3,n6,A).  [resolve(47,a,9,a)].
62 sum(n3,n6,n9).  [resolve(61,a,10,a)].
63 c3 = n9.  [resolve(62,a,37,a)].
64 sum(n2,n9,c4).  [para(63(a,1),26(a,2))].
65 n11 = c4.  [resolve(64,a,50,a)].
66 c4 = n11.  [copy(65),flip(a)].
67 $F.  [resolve(60,a,66,a)].

============================== end of proof ==========================
