============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n140.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 01:00:23 CDT 2014
% CPUTime    : 33.17 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 12876 was started by sandbox on n140.star.cs.uiowa.edu,
Fri Jun  6 01:00:23 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_12844_n140.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 32.57 (+ 0.41) seconds.
% Length of proof is 28.
% Level of proof is 6.
% Maximum clause weight is 19.000.
% Given clauses 3477.


1 (all A all B (leq(A,B) & A != B -> gt(B,A))).  [assumption].
2 (all A all B (leq(A,pred(B)) <-> gt(B,A))).  [assumption].
3 (all A (leq(n0,A) & leq(A,n2) -> A = n0 | A = n1 | A = n2)).  [assumption].
4 -(a_select2(rho_defuse,n0) = use & a_select2(rho_defuse,n1) = use & a_select2(rho_defuse,n2) = use & a_select2(sigma_defuse,n0) = use & a_select2(sigma_defuse,n1) = use & a_select2(sigma_defuse,n2) = use & a_select2(sigma_defuse,n3) = use & a_select2(sigma_defuse,n4) = use & a_select2(sigma_defuse,n5) = use & a_select3(u_defuse,n0,n0) = use & a_select3(u_defuse,n1,n0) = use & a_select3(u_defuse,n2,n0) = use & a_select2(xinit_defuse,n3) = use & a_select2(xinit_defuse,n4) = use & a_select2(xinit_defuse,n5) = use & a_select2(xinit_mean_defuse,n0) = use & a_select2(xinit_mean_defuse,n1) = use & a_select2(xinit_mean_defuse,n2) = use & a_select2(xinit_mean_defuse,n3) = use & a_select2(xinit_mean_defuse,n4) = use & a_select2(xinit_mean_defuse,n5) = use & a_select2(xinit_noise_defuse,n0) = use & a_select2(xinit_noise_defuse,n1) = use & a_select2(xinit_noise_defuse,n2) = use & a_select2(xinit_noise_defuse,n3) = use & a_select2(xinit_noise_defuse,n4) = use & a_select2(xinit_noise_defuse,n5) = use & leq(n0,pv5) & leq(pv5,n998) & gt(pv5,n0) & (all A all B (leq(n0,A) & leq(n0,B) & leq(A,n2) & leq(B,pred(pv5)) -> a_select3(u_defuse,A,B) = use)) & (all C all D (leq(n0,C) & leq(n0,D) & leq(C,n2) & leq(D,pred(pv5)) -> a_select3(z_defuse,C,D) = use)) -> (all E all F (leq(n0,E) & leq(n0,F) & leq(E,n2) & leq(F,pv5) -> (-(n0 = E & pv5 = F) & -(n1 = E & pv5 = F) & -(n2 = E & pv5 = F) -> a_select3(u_defuse,E,F) = use)))).  [assumption].
5 -leq(A,B) | B = A | gt(B,A).  [clausify(1)].
6 leq(A,pred(B)) | -gt(B,A).  [clausify(2)].
7 -leq(n0,A) | -leq(A,n2) | n0 = A | n1 = A | n2 = A.  [clausify(3)].
8 -leq(n0,A) | -leq(n0,B) | -leq(A,n2) | -leq(B,pred(pv5)) | a_select3(u_defuse,A,B) = use.  [clausify(4)].
9 leq(n0,c1).  [clausify(4)].
10 leq(n0,c2).  [clausify(4)].
11 leq(c1,n2).  [clausify(4)].
12 leq(c2,pv5).  [clausify(4)].
13 c1 != n0 | pv5 != c2.  [clausify(4)].
14 c1 != n0 | c2 != pv5.  [copy(13),flip(b)].
15 n1 != c1 | pv5 != c2.  [clausify(4)].
16 c1 != n1 | pv5 != c2.  [copy(15),flip(a)].
17 c1 != n1 | c2 != pv5.  [copy(16),flip(b)].
18 n2 != c1 | pv5 != c2.  [clausify(4)].
19 c1 != n2 | pv5 != c2.  [copy(18),flip(a)].
20 c1 != n2 | c2 != pv5.  [copy(19),flip(b)].
21 a_select3(u_defuse,c1,c2) != use.  [clausify(4)].
22 -leq(n0,A) | -leq(c1,n2) | -leq(A,pred(pv5)) | a_select3(u_defuse,c1,A) = use.  [resolve(9,a,8,a)].
23 -leq(n0,A) | -leq(A,pred(pv5)) | a_select3(u_defuse,c1,A) = use.  [resolve(11,a,22,b)].
24 -leq(c1,n2) | n0 = c1 | n1 = c1 | n2 = c1.  [resolve(9,a,7,a)].
25 -leq(c1,n2) | c1 = n0 | n1 = c1 | n2 = c1.  [copy(24),flip(b)].
26 -leq(c1,n2) | c1 = n0 | c1 = n1 | n2 = c1.  [copy(25),flip(c)].
27 -leq(c1,n2) | c1 = n0 | c1 = n1 | c1 = n2.  [copy(26),flip(d)].
28 c1 = n0 | c1 = n1 | c1 = n2.  [resolve(11,a,27,a)].
29 pv5 = c2 | gt(pv5,c2).  [resolve(12,a,5,a)].
30 c2 = pv5 | gt(pv5,c2).  [copy(29),flip(a)].
31 c2 = pv5 | leq(c2,pred(pv5)).  [resolve(30,b,6,b)].
32 c2 = pv5 | -leq(n0,c2) | a_select3(u_defuse,c1,c2) = use.  [resolve(31,b,23,b)].
33 c2 = pv5 | a_select3(u_defuse,c1,c2) = use.  [resolve(10,a,32,b)].
34 c2 = pv5.  [resolve(21,a,33,b)].
35 c1 != n2 | pv5 != pv5.  [para(34(a,1),20(b,1))].
36 c1 != n2.  [copy(35),xx(b)].
37 c1 != n1 | pv5 != pv5.  [para(34(a,1),17(b,1))].
38 c1 != n1.  [copy(37),xx(b)].
39 c1 != n0 | pv5 != pv5.  [para(34(a,1),14(b,1))].
40 c1 != n0.  [copy(39),xx(b)].
41 c1 = n1 | c1 = n2.  [resolve(40,a,28,a)].
42 c1 = n2.  [resolve(38,a,41,a)].
43 $F.  [resolve(36,a,42,a)].

============================== end of proof ==========================
