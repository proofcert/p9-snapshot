============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n061.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 10:56:23 CDT 2014
% CPUTime    : 68.76 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 36878 was started by sandbox on n061.star.cs.uiowa.edu,
Fri Jun  6 10:56:23 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_36846_n061.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 67.45 (+ 1.15) seconds.
% Length of proof is 39.
% Level of proof is 9.
% Maximum clause weight is 33.000.
% Given clauses 12215.


1 (all A all B m_Down(A) != m_Halt(B)).  [assumption].
2 (all A all B all C (elem(A,cons(B,C)) <-> A = B | elem(A,C))).  [assumption].
3 (all A all B all C (elem(A,snoc(C,B)) <-> A = B | elem(A,C))).  [assumption].
4 -(all A all B all C all D ((all E all F (setIn(F,alive) -> -elem(m_Down(F),queue(host(E))))) & (all E all F (elem(m_Down(F),queue(host(E))) -> -setIn(F,alive))) & (all E all F (elem(m_Down(F),queue(host(E))) -> host(F) != host(E))) & (all E all F (elem(m_Halt(F),queue(host(E))) -> -leq(host(E),host(F)))) & (all E all V6 all F (elem(m_Ack(F,E),queue(host(V6))) -> -leq(host(E),host(F)))) & (all E all F (-setIn(E,alive) & leq(F,E) & host(F) = host(E) -> -setIn(F,alive))) & (all E all F (F != E & host(F) = host(E) -> -setIn(E,alive) | -setIn(F,alive))) & (all E all V7 all V6 all F (host(V6) != host(E) & setIn(E,alive) & setIn(V6,alive) & host(V7) = host(E) & host(F) = host(V6) -> -(elem(m_Down(F),queue(host(E))) & elem(m_Down(V7),queue(host(V6)))))) & queue(host(D)) = cons(m_NotNorm(C),A) -> (setIn(D,alive) -> (index(ldr,host(D)) = host(D) & index(status,host(D)) = norm & index(elid,host(D)) = C -> ((all E (host(D) = host(E) -> leq(E,B))) & -setIn(B,pids) & host(D) = host(B) -> (host(B) = s(zero) -> (-leq(nbr_proc,host(B)) -> (all E (s(host(B)) = host(E) -> (host(D) != host(E) -> (all V8 all V9 (s(host(B)) != host(V9) -> (host(D) = host(V9) -> (all V10 ((E != D & setIn(E,alive) | E = B) & (V9 != D & setIn(V9,alive) | V9 = B) & host(V9) != host(E) & host(V8) = host(E) & host(V10) = host(V9) -> -(elem(m_Down(V8),A) & elem(m_Down(V10),snoc(queue(host(E)),m_Halt(B))))))))))))))))))).  [assumption].
5 m_Down(A) != m_Halt(B).  [clausify(1)].
6 elem(A,cons(B,C)) | -elem(A,C).  [clausify(2)].
7 -elem(A,snoc(B,C)) | C = A | elem(A,B).  [clausify(3)].
8 host(A) = host(B) | -setIn(B,alive) | -setIn(A,alive) | host(C) != host(B) | host(A) != host(D) | -elem(m_Down(D),queue(host(B))) | -elem(m_Down(C),queue(host(A))).  [clausify(4)].
9 cons(m_NotNorm(c3),c1) = queue(host(c4)).  [clausify(4)].
10 setIn(c4,alive).  [clausify(4)].
11 host(c2) = host(c4).  [clausify(4)].
12 host(c4) = host(c2).  [copy(11),flip(a)].
13 s(host(c2)) = host(c5).  [clausify(4)].
14 host(c5) != host(c4).  [clausify(4)].
15 host(c5) != host(c2).  [para(12(a,1),14(a,2))].
16 s(host(c2)) != host(c7).  [clausify(4)].
17 host(c5) != host(c7).  [para(13(a,1),16(a,1))].
18 host(c7) != host(c5).  [copy(17),flip(a)].
19 host(c7) = host(c4).  [clausify(4)].
20 host(c7) = host(c2).  [para(12(a,1),19(a,2))].
21 setIn(c5,alive) | c2 = c5.  [clausify(4)].
22 setIn(c5,alive) | c5 = c2.  [copy(21),flip(b)].
23 host(c6) = host(c5).  [clausify(4)].
24 host(c8) = host(c7).  [clausify(4)].
25 host(c8) = host(c2).  [para(20(a,1),24(a,2))].
26 elem(m_Down(c6),c1).  [clausify(4)].
27 elem(m_Down(c8),snoc(queue(host(c5)),m_Halt(c2))).  [clausify(4)].
28 cons(m_NotNorm(c3),c1) = queue(host(c2)).  [para(12(a,1),9(a,2,1))].
29 host(c5) = c_0.  [new_symbol(15)].
30 host(c2) != host(c5).  [para(20(a,1),18(a,1))].
31 host(c2) != c_0.  [para(29(a,1),30(a,2))].
32 elem(m_Down(c8),snoc(queue(c_0),m_Halt(c2))).  [para(29(a,1),27(a,2,1,1))].
33 host(c6) = c_0.  [para(29(a,1),23(a,2))].
34 host(c4) = host(A) | -setIn(A,alive) | host(B) != host(A) | host(c4) != host(C) | -elem(m_Down(C),queue(host(A))) | -elem(m_Down(B),queue(host(c4))).  [resolve(10,a,8,c)].
35 host(c2) = host(A) | -setIn(A,alive) | host(B) != host(A) | host(c4) != host(C) | -elem(m_Down(C),queue(host(A))) | -elem(m_Down(B),queue(host(c4))).  [para(12(a,1),34(a,1))].
36 host(c2) = host(A) | -setIn(A,alive) | host(B) != host(A) | host(c2) != host(C) | -elem(m_Down(C),queue(host(A))) | -elem(m_Down(B),queue(host(c4))).  [para(12(a,1),35(d,1))].
37 host(c2) = host(A) | -setIn(A,alive) | host(B) != host(A) | host(c2) != host(C) | -elem(m_Down(C),queue(host(A))) | -elem(m_Down(B),queue(host(c2))).  [para(12(a,1),36(f,2,1))].
38 elem(m_Down(c6),cons(A,c1)).  [resolve(26,a,6,b)].
39 m_Halt(c2) = m_Down(c8) | elem(m_Down(c8),queue(c_0)).  [resolve(32,a,7,a)].
40 elem(m_Down(c8),queue(c_0)).  [resolve(5,a,39,a(flip))].
41 elem(m_Down(c6),queue(host(c2))).  [para(28(a,1),38(a,2))].
42 host(c2) = host(c5) | host(A) != host(c5) | host(c2) != host(B) | -elem(m_Down(B),queue(host(c5))) | -elem(m_Down(A),queue(host(c2))) | c5 = c2.  [resolve(37,b,22,a)].
43 host(c2) = c_0 | host(A) != host(c5) | host(c2) != host(B) | -elem(m_Down(B),queue(host(c5))) | -elem(m_Down(A),queue(host(c2))) | c5 = c2.  [para(29(a,1),42(a,2))].
44 host(c2) = c_0 | host(A) != c_0 | host(c2) != host(B) | -elem(m_Down(B),queue(host(c5))) | -elem(m_Down(A),queue(host(c2))) | c5 = c2.  [para(29(a,1),43(b,2))].
45 host(c2) = c_0 | host(A) != c_0 | host(c2) != host(B) | -elem(m_Down(B),queue(c_0)) | -elem(m_Down(A),queue(host(c2))) | c5 = c2.  [para(29(a,1),44(d,2,1))].
46 host(A) != c_0 | host(c2) != host(B) | -elem(m_Down(B),queue(c_0)) | -elem(m_Down(A),queue(host(c2))) | c5 = c2.  [resolve(31,a,45,a)].
47 host(A) != c_0 | host(c2) != host(c8) | -elem(m_Down(A),queue(host(c2))) | c5 = c2.  [resolve(46,c,40,a)].
48 host(A) != c_0 | host(c2) != host(c2) | -elem(m_Down(A),queue(host(c2))) | c5 = c2.  [para(25(a,1),47(b,2))].
49 host(A) != c_0 | -elem(m_Down(A),queue(host(c2))) | c5 = c2.  [copy(48),xx(b)].
50 host(c6) != c_0 | c5 = c2.  [resolve(49,b,41,a)].
51 c_0 != c_0 | c5 = c2.  [para(33(a,1),50(a,1))].
52 c5 = c2.  [copy(51),xx(a)].
53 host(c2) = c_0.  [para(52(a,1),29(a,1,1))].
54 $F.  [resolve(31,a,53,a)].

============================== end of proof ==========================
