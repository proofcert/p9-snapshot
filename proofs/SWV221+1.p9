============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n034.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 16127.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 01:33:43 CDT 2014
% CPUTime    : 30.49 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 63814 was started by sandbox on n034.star.cs.uiowa.edu,
Fri Jun  6 01:33:43 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_63782_n034.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 29.98 (+ 0.33) seconds.
% Length of proof is 10.
% Level of proof is 3.
% Maximum clause weight is 22.000.
% Given clauses 3201.


1 -(leq(n0,pv5) & leq(n0,pv57) & leq(pv5,n998) & leq(pv57,n5) & leq(pv58,n5) & gt(pv58,pv57) & (all A all B (leq(n0,A) & leq(n0,B) & leq(A,n5) & leq(B,n5) -> a_select3(q_ds1_filter,A,B) = a_select3(q_ds1_filter,B,A))) & (all C all D (leq(n0,C) & leq(n0,D) & leq(C,n2) & leq(D,n2) -> a_select3(r_ds1_filter,C,D) = a_select3(r_ds1_filter,D,C))) & (all E all F (leq(n0,E) & leq(n0,F) & leq(E,n5) & leq(F,n5) -> a_select3(pminus_ds1_filter,E,F) = a_select3(pminus_ds1_filter,F,E))) & (all V6 all V7 (leq(n0,V6) & leq(n0,V7) & leq(V6,n5) & leq(V7,n5) -> (V6 = pv57 & gt(pv58,V7) -> a_select3(id_ds1_filter,V6,V7) = a_select3(id_ds1_filter,V7,V6)))) & (all V8 all V9 (leq(n0,V8) & leq(n0,V9) & leq(V8,n5) & leq(V9,n5) -> (gt(pv57,V8) -> a_select3(id_ds1_filter,V8,V9) = a_select3(id_ds1_filter,V9,V8)))) & (all V10 (leq(n0,V10) & leq(V10,pred(pv57)) -> (all V11 (leq(n0,V11) & leq(V11,n5) -> a_select3(id_ds1_filter,V10,V11) = a_select3(id_ds1_filter,V11,V10))))) -> (all V12 (leq(n0,V12) & leq(V12,pred(pv57)) -> (all V13 (leq(n0,V13) & leq(V13,n5) -> (-(pv57 = V13 & V13 = V12) & pv57 != V12 -> a_select3(id_ds1_filter,V12,V13) = a_select3(id_ds1_filter,V13,V12))))))).  [assumption].
2 -leq(n0,A) | -leq(A,pred(pv57)) | -leq(n0,B) | -leq(B,n5) | a_select3(id_ds1_filter,A,B) = a_select3(id_ds1_filter,B,A).  [clausify(1)].
3 leq(n0,c1).  [clausify(1)].
4 leq(c1,pred(pv57)).  [clausify(1)].
5 leq(n0,c2).  [clausify(1)].
6 leq(c2,n5).  [clausify(1)].
7 a_select3(id_ds1_filter,c1,c2) != a_select3(id_ds1_filter,c2,c1).  [clausify(1)].
8 a_select3(id_ds1_filter,c2,c1) != a_select3(id_ds1_filter,c1,c2).  [copy(7),flip(a)].
9 -leq(n0,c1) | -leq(n0,A) | -leq(A,n5) | a_select3(id_ds1_filter,c1,A) = a_select3(id_ds1_filter,A,c1).  [resolve(4,a,2,b)].
10 -leq(n0,A) | -leq(A,n5) | a_select3(id_ds1_filter,c1,A) = a_select3(id_ds1_filter,A,c1).  [resolve(3,a,9,a)].
11 -leq(c2,n5) | a_select3(id_ds1_filter,c1,c2) = a_select3(id_ds1_filter,c2,c1).  [resolve(10,a,5,a)].
12 -leq(c2,n5) | a_select3(id_ds1_filter,c2,c1) = a_select3(id_ds1_filter,c1,c2).  [copy(11),flip(b)].
13 a_select3(id_ds1_filter,c2,c1) = a_select3(id_ds1_filter,c1,c2).  [resolve(6,a,12,a)].
14 $F.  [resolve(8,a,13,a)].

============================== end of proof ==========================
