============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n163.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 16:36:08 CDT 2014
% CPUTime    : 0.15 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 64101 was started by sandbox on n163.star.cs.uiowa.edu,
Thu Jun  5 16:36:08 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_64069_n163.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.03 (+ 0.00) seconds.
% Length of proof is 42.
% Level of proof is 8.
% Maximum clause weight is 13.000.
% Given clauses 100.


1 (all A all B addition(A,B) = addition(B,A)).  [assumption].
2 (all A all B all C addition(C,addition(B,A)) = addition(addition(C,B),A)).  [assumption].
3 (all A addition(A,A) = A).  [assumption].
4 (all A multiplication(A,one) = A).  [assumption].
5 (all A multiplication(one,A) = A).  [assumption].
6 (all A all B all C multiplication(A,addition(B,C)) = addition(multiplication(A,B),multiplication(A,C))).  [assumption].
7 (all A all B (leq(A,B) <-> addition(A,B) = B)).  [assumption].
8 (all A leq(addition(one,multiplication(star(A),A)),star(A))).  [assumption].
9 (all A all B all C (leq(addition(multiplication(A,B),C),A) -> leq(multiplication(C,star(B)),A))).  [assumption].
10 (all A (test(A) <-> (exists B complement(B,A)))).  [assumption].
11 (all A all B (complement(B,A) <-> multiplication(A,B) = zero & multiplication(B,A) = zero & addition(A,B) = one)).  [assumption].
12 -(all A (test(A) -> star(A) = one)).  [assumption].
13 -test(A) | complement(f1(A),A).  [clausify(10)].
14 test(c1).  [clausify(12)].
15 addition(A,A) = A.  [clausify(3)].
16 multiplication(A,one) = A.  [clausify(4)].
17 multiplication(one,A) = A.  [clausify(5)].
18 addition(A,B) = addition(B,A).  [clausify(1)].
19 leq(addition(one,multiplication(star(A),A)),star(A)).  [clausify(8)].
20 addition(addition(A,B),C) = addition(A,addition(B,C)).  [clausify(2)].
21 addition(C,addition(A,B)) = addition(A,addition(B,C)).  [para(18(a,1),20(a,1))].
22 addition(A,addition(B,C)) = addition(C,addition(A,B)).  [copy(21),flip(a)].
23 multiplication(A,addition(B,C)) = addition(multiplication(A,B),multiplication(A,C)).  [clausify(6)].
24 addition(multiplication(A,B),multiplication(A,C)) = multiplication(A,addition(B,C)).  [copy(23),flip(a)].
25 star(c1) != one.  [clausify(12)].
26 -leq(A,B) | addition(A,B) = B.  [clausify(7)].
27 leq(A,B) | addition(A,B) != B.  [clausify(7)].
28 -complement(A,B) | addition(B,A) = one.  [clausify(11)].
29 -complement(A,B) | addition(A,B) = one.  [para(18(a,1),28(b,1))].
30 -leq(addition(multiplication(A,B),C),A) | leq(multiplication(C,star(B)),A).  [clausify(9)].
31 -leq(addition(A,multiplication(B,C)),B) | leq(multiplication(A,star(C)),B).  [para(18(a,1),30(a,1))].
32 complement(f1(c1),c1).  [resolve(13,a,14,a)].
33 addition(A,addition(addition(B,A),B)) = addition(B,A).  [para(22(a,1),15(a,1))].
34 addition(A,addition(addition(A,B),B)) = addition(B,A).  [para(18(a,1),33(a,1,2,1))].
35 addition(A,addition(B,addition(A,B))) = addition(B,A).  [para(18(a,1),34(a,1,2))].
36 addition(A,addition(A,addition(B,B))) = addition(B,A).  [para(22(a,2),35(a,1,2))].
37 addition(A,addition(A,B)) = addition(B,A).  [para(15(a,1),36(a,1,2,2))].
38 addition(A,addition(A,B)) = addition(A,B).  [para(18(a,1),37(a,2))].
39 addition(A,multiplication(A,B)) = multiplication(A,addition(one,B)).  [para(16(a,1),24(a,1,1))].
40 addition(A,multiplication(A,B)) = multiplication(A,addition(B,one)).  [para(18(a,1),39(a,2,2))].
41 multiplication(A,addition(B,one)) = addition(A,multiplication(A,B)).  [copy(40),flip(a)].
42 addition(addition(one,multiplication(star(A),A)),star(A)) = star(A).  [resolve(26,a,19,a)].
43 addition(star(A),addition(one,multiplication(star(A),A))) = star(A).  [para(18(a,1),42(a,1))].
44 addition(one,addition(multiplication(star(A),A),star(A))) = star(A).  [para(22(a,2),43(a,1))].
45 addition(one,addition(star(A),multiplication(star(A),A))) = star(A).  [para(18(a,1),44(a,1,2))].
46 addition(one,multiplication(star(A),addition(A,one))) = star(A).  [para(41(a,2),45(a,1,2))].
47 leq(A,A).  [resolve(27,b,15,a)].
48 addition(f1(c1),c1) = one.  [resolve(32,a,29,a)].
49 addition(c1,f1(c1)) = one.  [para(18(a,1),48(a,1))].
50 addition(c1,one) = addition(c1,f1(c1)).  [para(49(a,1),38(a,1,2))].
51 addition(one,c1) = addition(c1,f1(c1)).  [para(18(a,1),50(a,1))].
52 addition(one,c1) = one.  [para(49(a,1),51(a,2))].
53 addition(multiplication(A,one),multiplication(A,c1)) = multiplication(A,one).  [para(52(a,1),24(a,2,2))].
54 addition(A,multiplication(A,c1)) = multiplication(A,one).  [para(16(a,1),53(a,1,1))].
55 addition(A,multiplication(A,c1)) = A.  [para(16(a,1),54(a,2))].
56 addition(one,star(A)) = addition(one,multiplication(star(A),addition(A,one))).  [para(46(a,1),38(a,1,2))].
57 addition(one,star(A)) = star(A).  [para(46(a,1),56(a,2))].
58 -leq(A,A) | leq(multiplication(A,star(c1)),A).  [para(55(a,1),31(a,1))].
59 leq(multiplication(A,star(c1)),A).  [resolve(47,a,58,a)].
60 leq(star(c1),one).  [para(17(a,1),59(a,1))].
61 addition(star(c1),one) = one.  [resolve(60,a,26,a)].
62 addition(one,star(c1)) = one.  [para(18(a,1),61(a,1))].
63 star(c1) = one.  [para(57(a,1),62(a,1))].
64 $F.  [resolve(25,a,63,a)].

============================== end of proof ==========================
