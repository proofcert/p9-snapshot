============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n121.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 23:34:18 CDT 2014
% CPUTime    : 14.51 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 8836 was started by sandbox on n121.star.cs.uiowa.edu,
Fri Jun  6 23:34:27 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_8804_n121.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 5.68 (+ 0.09) seconds.
% Length of proof is 46.
% Level of proof is 6.
% Maximum clause weight is 16.000.
% Given clauses 1991.


1 (all A plus_plus_int(number_number_of_int(A),one_one_int) = number_number_of_int(plus_plus_int(A,bit1(pls)))).  [assumption].
2 (all A all B plus_plus_int(hAPP_nat_int(semiri1621563631at_int,A),hAPP_nat_int(semiri1621563631at_int,B)) = hAPP_nat_int(semiri1621563631at_int,plus_plus_nat(A,B))).  [assumption].
3 (all A all B plus_plus_int(A,B) = plus_plus_int(B,A)).  [assumption].
4 (all A bit0(A) = plus_plus_int(A,A)).  [assumption].
5 (all A all B plus_plus_nat(A,B) = plus_plus_nat(B,A)).  [assumption].
6 (all A all B (hBOOL(hAPP_nat_bool(hAPP_n1699378549t_bool(ord_less_nat,A),B)) -> B != zero_zero_nat)).  [assumption].
7 (all A hBOOL(hAPP_nat_bool(hAPP_n1699378549t_bool(ord_less_nat,A),plus_plus_nat(A,one_one_nat)))).  [assumption].
8 (all A nat(number_number_of_int(A)) = number_number_of_nat(A)).  [assumption].
9 (all A (hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,hAPP_nat_int(semiri1621563631at_int,A)),zero_zero_int)) <-> A = zero_zero_nat)).  [assumption].
10 (all A succ(A) = plus_plus_int(A,one_one_int)).  [assumption].
11 (all A hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,A),hAPP_nat_int(power_power_int(A),number_number_of_nat(bit0(bit1(pls))))))).  [assumption].
12 -(hAPP_nat_int(power_power_int(plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,n))),number_number_of_nat(bit0(bit1(pls)))) != zero_zero_int).  [assumption].
13 number_number_of_int(plus_plus_int(A,bit1(pls))) = plus_plus_int(number_number_of_int(A),one_one_int).  [clausify(1)].
14 plus_plus_nat(one_one_nat,one_one_nat) = number_number_of_nat(bit0(bit1(pls))).  [assumption].
15 number_number_of_nat(bit0(bit1(pls))) = plus_plus_nat(one_one_nat,one_one_nat).  [copy(14),flip(a)].
16 hAPP_nat_int(semiri1621563631at_int,plus_plus_nat(A,B)) = plus_plus_int(hAPP_nat_int(semiri1621563631at_int,A),hAPP_nat_int(semiri1621563631at_int,B)).  [clausify(2)].
17 plus_plus_int(hAPP_nat_int(semiri1621563631at_int,A),hAPP_nat_int(semiri1621563631at_int,B)) = hAPP_nat_int(semiri1621563631at_int,plus_plus_nat(A,B)).  [copy(16),flip(a)].
18 hAPP_nat_int(semiri1621563631at_int,one_one_nat) = one_one_int.  [assumption].
19 plus_plus_int(A,B) = plus_plus_int(B,A).  [clausify(3)].
20 pls = zero_zero_int.  [assumption].
21 bit0(A) = plus_plus_int(A,A).  [clausify(4)].
22 number_number_of_int(bit1(pls)) = one_one_int.  [assumption].
23 number_number_of_int(bit1(zero_zero_int)) = one_one_int.  [para(20(a,1),22(a,1,1,1))].
24 plus_plus_nat(A,B) = plus_plus_nat(B,A).  [clausify(5)].
25 -hBOOL(hAPP_nat_bool(hAPP_n1699378549t_bool(ord_less_nat,A),B)) | B != zero_zero_nat.  [clausify(6)].
26 -hBOOL(hAPP_nat_bool(hAPP_n1699378549t_bool(ord_less_nat,A),B)) | zero_zero_nat != B.  [copy(25),flip(b)].
27 hBOOL(hAPP_nat_bool(hAPP_n1699378549t_bool(ord_less_nat,A),plus_plus_nat(A,one_one_nat))).  [clausify(7)].
28 nat(number_number_of_int(A)) = number_number_of_nat(A).  [clausify(8)].
29 number_number_of_nat(A) = nat(number_number_of_int(A)).  [copy(28),flip(a)].
30 -hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,hAPP_nat_int(semiri1621563631at_int,A)),zero_zero_int)) | A = zero_zero_nat.  [clausify(9)].
31 -hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,hAPP_nat_int(semiri1621563631at_int,A)),zero_zero_int)) | zero_zero_nat = A.  [copy(30),flip(b)].
32 succ(A) = plus_plus_int(A,one_one_int).  [clausify(10)].
33 plus_plus_int(A,one_one_int) = succ(A).  [copy(32),flip(a)].
34 hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,A),hAPP_nat_int(power_power_int(A),number_number_of_nat(bit0(bit1(pls)))))).  [clausify(11)].
35 hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,A),hAPP_nat_int(power_power_int(A),number_number_of_nat(bit0(bit1(zero_zero_int)))))).  [para(20(a,1),34(a,1,2,2,1,1,1))].
36 hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,A),hAPP_nat_int(power_power_int(A),number_number_of_nat(plus_plus_int(bit1(zero_zero_int),bit1(zero_zero_int)))))).  [para(21(a,1),35(a,1,2,2,1))].
37 hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,A),hAPP_nat_int(power_power_int(A),nat(number_number_of_int(plus_plus_int(bit1(zero_zero_int),bit1(zero_zero_int))))))).  [para(29(a,1),36(a,1,2,2))].
38 hAPP_nat_int(power_power_int(plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,n))),number_number_of_nat(bit0(bit1(pls)))) = zero_zero_int.  [clausify(12)].
39 hAPP_nat_int(power_power_int(plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,n))),number_number_of_nat(bit0(bit1(zero_zero_int)))) = zero_zero_int.  [para(20(a,1),38(a,1,2,1,1,1))].
40 hAPP_nat_int(power_power_int(plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,n))),number_number_of_nat(plus_plus_int(bit1(zero_zero_int),bit1(zero_zero_int)))) = zero_zero_int.  [para(21(a,1),39(a,1,2,1))].
41 hAPP_nat_int(power_power_int(plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,n))),nat(number_number_of_int(plus_plus_int(bit1(zero_zero_int),bit1(zero_zero_int))))) = zero_zero_int.  [para(29(a,1),40(a,1,2))].
42 number_number_of_int(plus_plus_int(A,bit1(zero_zero_int))) = plus_plus_int(number_number_of_int(A),one_one_int).  [para(20(a,1),13(a,1,1,2,1))].
43 number_number_of_int(plus_plus_int(A,bit1(zero_zero_int))) = plus_plus_int(one_one_int,number_number_of_int(A)).  [para(19(a,1),42(a,2))].
44 number_number_of_nat(bit0(bit1(zero_zero_int))) = plus_plus_nat(one_one_nat,one_one_nat).  [para(20(a,1),15(a,1,1,1,1))].
45 number_number_of_nat(plus_plus_int(bit1(zero_zero_int),bit1(zero_zero_int))) = plus_plus_nat(one_one_nat,one_one_nat).  [para(21(a,1),44(a,1,1))].
46 nat(number_number_of_int(plus_plus_int(bit1(zero_zero_int),bit1(zero_zero_int)))) = plus_plus_nat(one_one_nat,one_one_nat).  [para(29(a,1),45(a,1))].
47 nat(plus_plus_int(one_one_int,number_number_of_int(bit1(zero_zero_int)))) = plus_plus_nat(one_one_nat,one_one_nat).  [para(43(a,1),46(a,1,1))].
48 nat(plus_plus_int(one_one_int,one_one_int)) = plus_plus_nat(one_one_nat,one_one_nat).  [para(23(a,1),47(a,1,1,2))].
49 nat(succ(one_one_int)) = plus_plus_nat(one_one_nat,one_one_nat).  [para(33(a,1),48(a,1,1))].
50 hAPP_nat_int(power_power_int(plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,n))),nat(plus_plus_int(one_one_int,number_number_of_int(bit1(zero_zero_int))))) = zero_zero_int.  [para(43(a,1),41(a,1,2,1))].
51 hAPP_nat_int(power_power_int(plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,n))),nat(plus_plus_int(one_one_int,one_one_int))) = zero_zero_int.  [para(23(a,1),50(a,1,2,1,2))].
52 hAPP_nat_int(power_power_int(plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,n))),nat(succ(one_one_int))) = zero_zero_int.  [para(33(a,1),51(a,1,2,1))].
53 hAPP_nat_int(power_power_int(plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,n))),plus_plus_nat(one_one_nat,one_one_nat)) = zero_zero_int.  [para(49(a,1),52(a,1,2))].
54 hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,A),hAPP_nat_int(power_power_int(A),nat(plus_plus_int(one_one_int,number_number_of_int(bit1(zero_zero_int))))))).  [para(43(a,1),37(a,1,2,2,1))].
55 hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,A),hAPP_nat_int(power_power_int(A),nat(plus_plus_int(one_one_int,one_one_int))))).  [para(23(a,1),54(a,1,2,2,1,2))].
56 hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,A),hAPP_nat_int(power_power_int(A),nat(succ(one_one_int))))).  [para(33(a,1),55(a,1,2,2,1))].
57 hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,A),hAPP_nat_int(power_power_int(A),plus_plus_nat(one_one_nat,one_one_nat)))).  [para(49(a,1),56(a,1,2,2))].
58 plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,A)) = hAPP_nat_int(semiri1621563631at_int,plus_plus_nat(one_one_nat,A)).  [para(18(a,1),17(a,1,1))].
59 plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,A)) = hAPP_nat_int(semiri1621563631at_int,plus_plus_nat(A,one_one_nat)).  [para(24(a,1),58(a,2,2))].
60 hAPP_nat_int(semiri1621563631at_int,plus_plus_nat(A,one_one_nat)) = plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,A)).  [copy(59),flip(a)].
61 zero_zero_nat != plus_plus_nat(A,one_one_nat).  [resolve(27,a,26,a)].
62 plus_plus_nat(A,one_one_nat) != zero_zero_nat.  [copy(61),flip(a)].
63 hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,n))),zero_zero_int)).  [para(53(a,1),57(a,1,2))].
64 -hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,A))),zero_zero_int)) | zero_zero_nat = plus_plus_nat(A,one_one_nat).  [para(60(a,1),31(a,1,1,2))].
65 -hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,A))),zero_zero_int)) | plus_plus_nat(A,one_one_nat) = zero_zero_nat.  [copy(64),flip(b)].
66 -hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_eq_int,plus_plus_int(one_one_int,hAPP_nat_int(semiri1621563631at_int,A))),zero_zero_int)).  [resolve(62,a,65,b)].
67 $F.  [resolve(66,a,63,a)].

============================== end of proof ==========================
