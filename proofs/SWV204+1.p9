============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n099.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 01:03:48 CDT 2014
% CPUTime    : 18.19 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 18384 was started by sandbox on n099.star.cs.uiowa.edu,
Fri Jun  6 01:03:48 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_18352_n099.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 17.82 (+ 0.17) seconds.
% Length of proof is 13.
% Level of proof is 5.
% Maximum clause weight is 15.000.
% Given clauses 2301.


1 (all A (leq(n0,A) & leq(A,n2) -> A = n0 | A = n1 | A = n2)).  [assumption].
2 -(a_select2(rho_defuse,n0) = use & a_select2(rho_defuse,n1) = use & a_select2(rho_defuse,n2) = use & a_select2(sigma_defuse,n0) = use & a_select2(sigma_defuse,n1) = use & a_select2(sigma_defuse,n2) = use & a_select2(sigma_defuse,n3) = use & a_select2(sigma_defuse,n4) = use & a_select2(sigma_defuse,n5) = use & a_select3(u_defuse,n0,n0) = use & a_select3(u_defuse,n1,n0) = use & a_select3(u_defuse,n2,n0) = use & a_select2(xinit_defuse,n3) = use & a_select2(xinit_defuse,n4) = use & a_select2(xinit_defuse,n5) = use & a_select2(xinit_mean_defuse,n0) = use & a_select2(xinit_mean_defuse,n1) = use & a_select2(xinit_mean_defuse,n2) = use & a_select2(xinit_mean_defuse,n3) = use & a_select2(xinit_mean_defuse,n4) = use & a_select2(xinit_mean_defuse,n5) = use & a_select2(xinit_noise_defuse,n0) = use & a_select2(xinit_noise_defuse,n1) = use & a_select2(xinit_noise_defuse,n2) = use & a_select2(xinit_noise_defuse,n3) = use & a_select2(xinit_noise_defuse,n4) = use & a_select2(xinit_noise_defuse,n5) = use & (all A all B (leq(n0,A) & leq(n0,B) & leq(A,n2) & leq(B,n998) -> a_select3(u_defuse,A,B) = use)) & (all C all D (leq(n0,C) & leq(n0,D) & leq(C,n2) & leq(D,n998) -> a_select3(z_defuse,C,D) = use)) -> (all E (leq(n0,E) & leq(E,n2) -> a_select2(rho_defuse,E) = use))).  [assumption].
3 -leq(n0,A) | -leq(A,n2) | n0 = A | n1 = A | n2 = A.  [clausify(1)].
4 a_select2(rho_defuse,n0) = use.  [clausify(2)].
5 a_select2(rho_defuse,n1) = use.  [clausify(2)].
6 a_select2(rho_defuse,n2) = use.  [clausify(2)].
7 leq(n0,c1).  [clausify(2)].
8 leq(c1,n2).  [clausify(2)].
9 a_select2(rho_defuse,c1) != use.  [clausify(2)].
10 -leq(c1,n2) | n0 = c1 | n1 = c1 | n2 = c1.  [resolve(7,a,3,a)].
11 -leq(c1,n2) | c1 = n0 | n1 = c1 | n2 = c1.  [copy(10),flip(b)].
12 -leq(c1,n2) | c1 = n0 | c1 = n1 | n2 = c1.  [copy(11),flip(c)].
13 -leq(c1,n2) | c1 = n0 | c1 = n1 | c1 = n2.  [copy(12),flip(d)].
14 c1 = n0 | c1 = n1 | c1 = n2.  [resolve(8,a,13,a)].
15 c1 = n0 | c1 = n2 | a_select2(rho_defuse,n1) != use.  [para(14(b,1),9(a,1,2))].
16 c1 = n0 | c1 = n2 | use != use.  [para(5(a,1),15(c,1))].
17 c1 = n0 | c1 = n2.  [copy(16),xx(c)].
18 c1 = n0 | a_select2(rho_defuse,n2) != use.  [para(17(b,1),9(a,1,2))].
19 c1 = n0 | use != use.  [para(6(a,1),18(b,1))].
20 c1 = n0.  [copy(19),xx(b)].
21 a_select2(rho_defuse,n0) != use.  [para(20(a,1),9(a,1,2))].
22 use != use.  [para(4(a,1),21(a,1))].
23 $F.  [copy(22),xx(a)].

============================== end of proof ==========================
