============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n104.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 14:36:18 CDT 2014
% CPUTime    : 2.68 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 52522 was started by sandbox on n104.star.cs.uiowa.edu,
Thu Jun  5 14:36:18 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_52490_n104.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 2.46 (+ 0.01) seconds.
% Length of proof is 19.
% Level of proof is 5.
% Maximum clause weight is 10.000.
% Given clauses 1513.


1 (all A (ssList(A) -> (all B (ssList(B) -> (neq(A,B) <-> A != B))))).  [assumption].
2 (all A (ssList(A) -> frontsegP(A,A))).  [assumption].
3 -(all A (ssList(A) -> (all B (ssList(B) -> (all C (ssList(C) -> (all D (ssList(D) -> B != D | A != C | D != C | (exists E (ssList(E) & neq(E,nil) & frontsegP(B,E) & frontsegP(A,E))) | nil = B & nil = A)))))))).  [assumption].
4 -ssList(A) | -ssList(B) | neq(A,B) | B = A.  [clausify(1)].
5 ssList(nil).  [assumption].
6 -ssList(A) | frontsegP(A,A).  [clausify(2)].
7 ssList(c3).  [clausify(3)].
8 c6 = c4.  [clausify(3)].
9 c5 = c3.  [clausify(3)].
10 c6 = c5.  [clausify(3)].
11 c4 = c5.  [para(8(a,1),10(a,1))].
12 c4 = c3.  [para(9(a,1),11(a,2))].
13 -ssList(A) | -neq(A,nil) | -frontsegP(c4,A) | -frontsegP(c3,A).  [clausify(3)].
14 -ssList(A) | -neq(A,nil) | -frontsegP(c3,A) | -frontsegP(c3,A).  [para(12(a,1),13(c,1))].
15 -ssList(A) | -neq(A,nil) | -frontsegP(c3,A).  [copy(14),merge(d)].
16 nil != c4 | nil != c3.  [clausify(3)].
17 nil != c3 | nil != c3.  [para(12(a,1),16(a,2))].
18 c3 != nil | nil != c3.  [copy(17),flip(a)].
19 c3 != nil | c3 != nil.  [copy(18),flip(b)].
20 c3 != nil.  [copy(19),merge(b)].
21 -ssList(A) | neq(A,nil) | nil = A.  [resolve(5,a,4,b)].
22 frontsegP(c3,c3).  [resolve(7,a,6,a)].
23 neq(c3,nil) | nil = c3.  [resolve(21,a,7,a)].
24 neq(c3,nil) | c3 = nil.  [copy(23),flip(b)].
25 neq(c3,nil).  [resolve(20,a,24,b)].
26 -ssList(c3) | -frontsegP(c3,c3).  [resolve(25,a,15,b)].
27 -frontsegP(c3,c3).  [resolve(7,a,26,a)].
28 $F.  [resolve(22,a,27,a)].

============================== end of proof ==========================
