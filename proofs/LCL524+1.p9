============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n163.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 10:28:58 CDT 2014
% CPUTime    : 7.06 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 62368 was started by sandbox on n163.star.cs.uiowa.edu,
Fri Jun  6 10:28:58 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_62336_n163.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 6.86 (+ 0.05) seconds.
% Length of proof is 79.
% Level of proof is 12.
% Maximum clause weight is 15.000.
% Given clauses 2107.


1 modus_ponens <-> (all A all B (is_a_theorem(A) & is_a_theorem(implies(A,B)) -> is_a_theorem(B))).  [assumption].
2 substitution_of_equivalents <-> (all A all B (is_a_theorem(equiv(A,B)) -> A = B)).  [assumption].
3 modus_tollens <-> (all A all B is_a_theorem(implies(implies(not(B),not(A)),implies(A,B)))).  [assumption].
4 implies_2 <-> (all A all B is_a_theorem(implies(implies(A,implies(A,B)),implies(A,B)))).  [assumption].
5 and_1 <-> (all A all B is_a_theorem(implies(and(A,B),A))).  [assumption].
6 and_3 <-> (all A all B is_a_theorem(implies(A,implies(B,and(A,B))))).  [assumption].
7 or_3 <-> (all A all B all C is_a_theorem(implies(implies(A,C),implies(implies(B,C),implies(or(A,B),C))))).  [assumption].
8 equivalence_3 <-> (all A all B is_a_theorem(implies(implies(A,B),implies(implies(B,A),equiv(A,B))))).  [assumption].
9 op_or -> (all A all B or(A,B) = not(and(not(A),not(B)))).  [assumption].
10 op_implies_and -> (all A all B implies(A,B) = not(and(A,not(B)))).  [assumption].
11 axiom_M <-> (all A is_a_theorem(implies(necessarily(A),A))).  [assumption].
12 axiom_B <-> (all A is_a_theorem(implies(A,necessarily(possibly(A))))).  [assumption].
13 axiom_5 <-> (all A is_a_theorem(implies(possibly(A),necessarily(possibly(A))))).  [assumption].
14 op_possibly -> (all A possibly(A) = not(necessarily(not(A)))).  [assumption].
15 -modus_ponens | -is_a_theorem(A) | -is_a_theorem(implies(A,B)) | is_a_theorem(B).  [clausify(1)].
16 -substitution_of_equivalents | -is_a_theorem(equiv(A,B)) | B = A.  [clausify(2)].
17 -modus_tollens | is_a_theorem(implies(implies(not(A),not(B)),implies(B,A))).  [clausify(3)].
18 -implies_2 | is_a_theorem(implies(implies(A,implies(A,B)),implies(A,B))).  [clausify(4)].
19 -and_1 | is_a_theorem(implies(and(A,B),A)).  [clausify(5)].
20 -and_3 | is_a_theorem(implies(A,implies(B,and(A,B)))).  [clausify(6)].
21 -or_3 | is_a_theorem(implies(implies(A,B),implies(implies(C,B),implies(or(A,C),B)))).  [clausify(7)].
22 -equivalence_3 | is_a_theorem(implies(implies(A,B),implies(implies(B,A),equiv(A,B)))).  [clausify(8)].
23 -op_or | or(A,B) = not(and(not(A),not(B))).  [clausify(9)].
24 -op_or | not(and(not(A),not(B))) = or(A,B).  [copy(23),flip(b)].
25 -op_implies_and | not(and(A,not(B))) = implies(A,B).  [clausify(10)].
26 op_or.  [assumption].
27 op_implies_and.  [assumption].
28 modus_ponens.  [assumption].
29 modus_tollens.  [assumption].
30 implies_2.  [assumption].
31 and_1.  [assumption].
32 and_3.  [assumption].
33 or_3.  [assumption].
34 equivalence_3.  [assumption].
35 substitution_of_equivalents.  [assumption].
36 -axiom_M | is_a_theorem(implies(necessarily(A),A)).  [clausify(11)].
37 axiom_B | -is_a_theorem(implies(c67,necessarily(possibly(c67)))).  [clausify(12)].
38 -axiom_5 | is_a_theorem(implies(possibly(A),necessarily(possibly(A)))).  [clausify(13)].
39 -op_possibly | possibly(A) = not(necessarily(not(A))).  [clausify(14)].
40 -op_possibly | not(necessarily(not(A))) = possibly(A).  [copy(39),flip(b)].
41 op_possibly.  [assumption].
42 axiom_M.  [assumption].
43 axiom_5.  [assumption].
44 -axiom_B.  [assumption].
45 not(and(not(A),not(B))) = or(A,B).  [resolve(26,a,24,a)].
46 not(and(A,not(B))) = implies(A,B).  [resolve(27,a,25,a)].
47 -is_a_theorem(A) | -is_a_theorem(implies(A,B)) | is_a_theorem(B).  [resolve(28,a,15,a)].
48 is_a_theorem(implies(implies(not(A),not(B)),implies(B,A))).  [resolve(29,a,17,a)].
49 is_a_theorem(implies(implies(A,implies(A,B)),implies(A,B))).  [resolve(30,a,18,a)].
50 is_a_theorem(implies(and(A,B),A)).  [resolve(31,a,19,a)].
51 is_a_theorem(implies(A,implies(B,and(A,B)))).  [resolve(32,a,20,a)].
52 is_a_theorem(implies(implies(A,B),implies(implies(C,B),implies(or(A,C),B)))).  [resolve(33,a,21,a)].
53 is_a_theorem(implies(implies(A,B),implies(implies(B,A),equiv(A,B)))).  [resolve(34,a,22,a)].
54 -is_a_theorem(equiv(A,B)) | B = A.  [resolve(35,a,16,a)].
55 not(necessarily(not(A))) = possibly(A).  [resolve(41,a,40,a)].
56 is_a_theorem(implies(necessarily(A),A)).  [resolve(42,a,36,a)].
57 is_a_theorem(implies(possibly(A),necessarily(possibly(A)))).  [resolve(43,a,38,a)].
58 -is_a_theorem(implies(c67,necessarily(possibly(c67)))).  [resolve(44,a,37,a)].
59 implies(not(A),B) = or(A,B).  [para(46(a,1),45(a,1))].
60 is_a_theorem(implies(or(A,not(B)),implies(B,A))).  [para(59(a,1),48(a,1,1))].
61 -is_a_theorem(implies(A,implies(A,B))) | is_a_theorem(implies(A,B)).  [resolve(49,a,47,b)].
62 -is_a_theorem(implies(A,B)) | is_a_theorem(implies(implies(B,A),equiv(A,B))).  [resolve(53,a,47,b)].
63 implies(implies(A,B),C) = or(and(A,not(B)),C).  [para(46(a,1),59(a,1,1))].
64 or(and(A,not(B)),C) = implies(implies(A,B),C).  [copy(63),flip(a)].
65 -is_a_theorem(or(A,not(B))) | is_a_theorem(implies(B,A)).  [resolve(60,a,47,b)].
66 is_a_theorem(implies(implies(A,B),implies(or(A,A),B))).  [resolve(61,a,52,a)].
67 is_a_theorem(implies(A,and(A,A))).  [resolve(61,a,51,a)].
68 is_a_theorem(implies(implies(and(A,A),A),equiv(A,and(A,A)))).  [resolve(62,a,67,a)].
69 is_a_theorem(implies(implies(necessarily(possibly(A)),possibly(A)),equiv(possibly(A),necessarily(possibly(A))))).  [resolve(62,a,57,a)].
70 -is_a_theorem(implies(A,B)) | is_a_theorem(implies(or(A,A),B)).  [resolve(66,a,47,b)].
71 -is_a_theorem(implies(and(A,A),A)) | is_a_theorem(equiv(A,and(A,A))).  [resolve(68,a,47,b)].
72 is_a_theorem(equiv(A,and(A,A))).  [resolve(50,a,71,a)].
73 and(A,A) = A.  [resolve(72,a,54,a)].
74 or(not(A),B) = implies(implies(not(A),A),B).  [para(73(a,1),64(a,1,1))].
75 or(not(A),B) = implies(or(A,A),B).  [para(59(a,1),74(a,2,1))].
76 implies(or(A,A),B) = or(not(A),B).  [copy(75),flip(a)].
77 -is_a_theorem(implies(A,B)) | is_a_theorem(or(not(A),B)).  [para(76(a,1),70(b,1))].
78 -is_a_theorem(implies(necessarily(possibly(A)),possibly(A))) | is_a_theorem(equiv(possibly(A),necessarily(possibly(A)))).  [resolve(69,a,47,b)].
79 is_a_theorem(equiv(possibly(A),necessarily(possibly(A)))).  [resolve(56,a,78,a)].
80 necessarily(possibly(A)) = possibly(A).  [resolve(79,a,54,a)].
81 -is_a_theorem(implies(c67,possibly(c67))).  [para(80(a,1),58(a,1,2))].
82 is_a_theorem(or(not(necessarily(A)),A)).  [resolve(77,a,56,a)].
83 is_a_theorem(implies(A,not(necessarily(not(A))))).  [resolve(82,a,65,a)].
84 is_a_theorem(implies(A,possibly(A))).  [para(55(a,1),83(a,1,2))].
85 $F.  [resolve(84,a,81,a)].

============================== end of proof ==========================
