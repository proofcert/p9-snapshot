============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n085.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 13:52:13 CDT 2014
% CPUTime    : 0.26 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 51184 was started by sandbox on n085.star.cs.uiowa.edu,
Thu Jun  5 13:52:13 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_51152_n085.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.12 (+ 0.00) seconds.
% Length of proof is 35.
% Level of proof is 6.
% Maximum clause weight is 13.000.
% Given clauses 429.


1 (all A all B all C (happens(A,B) & initiates(A,C,B) -> holdsAt(C,plus(B,n1)))).  [assumption].
2 (all A all B all C (initiates(A,B,C) <-> A = push & B = forwards & -happens(pull,C) | A = pull & B = backwards & -happens(push,C) | A = pull & B = spinning & happens(push,C))).  [assumption].
3 (all A all B (happens(A,B) <-> A = push & B = n0 | A = pull & B = n1 | A = pull & B = n2 | A = push & B = n2)).  [assumption].
4 (all A all B plus(A,B) = plus(B,A)).  [assumption].
5 (all A all B (less_or_equal(A,B) <-> less(A,B) | A = B)).  [assumption].
6 (all A (less(A,n1) <-> less_or_equal(A,n0))).  [assumption].
7 (all A (less(A,n2) <-> less_or_equal(A,n1))).  [assumption].
8 (all A all B (less(A,B) <-> -less(B,A) & B != A)).  [assumption].
9 -happens(A,B) | -initiates(A,C,B) | holdsAt(C,plus(B,n1)).  [clausify(1)].
10 initiates(A,B,C) | pull != A | backwards != B | happens(push,C).  [clausify(2)].
11 -happens(A,B) | n0 = B | pull = A | n2 = B.  [clausify(3)].
12 happens(A,B) | pull != A | n1 != B.  [clausify(3)].
13 push != pull.  [assumption].
14 pull != push.  [copy(13),flip(a)].
15 plus(n0,n1) = n1.  [assumption].
16 plus(n1,n1) = n2.  [assumption].
17 plus(A,B) = plus(B,A).  [clausify(4)].
18 less_or_equal(A,B) | B != A.  [clausify(5)].
19 less(A,n1) | -less_or_equal(A,n0).  [clausify(6)].
20 less(A,n2) | -less_or_equal(A,n1).  [clausify(7)].
21 -less(A,B) | B != A.  [clausify(8)].
22 -holdsAt(backwards,n2).  [assumption].
23 plus(n1,n0) = n1.  [para(17(a,1),15(a,1))].
24 initiates(pull,A,B) | backwards != A | happens(push,B).  [xx_res(10,b)].
25 happens(pull,A) | n1 != A.  [xx_res(12,b)].
26 less_or_equal(A,A).  [xx_res(18,b)].
27 less(n1,n2).  [resolve(26,a,20,b)].
28 less(n0,n1).  [resolve(26,a,19,b)].
29 initiates(pull,backwards,A) | happens(push,A).  [xx_res(24,b)].
30 n2 != n1.  [resolve(27,a,21,a)].
31 n1 != n0.  [resolve(28,a,21,a)].
32 n0 != n1.  [copy(31),flip(a)].
33 happens(pull,plus(n1,n0)).  [resolve(25,b,23,a(flip))].
34 happens(pull,n1).  [para(23(a,1),33(a,2))].
35 happens(push,A) | -happens(pull,A) | holdsAt(backwards,plus(A,n1)).  [resolve(29,a,9,b)].
36 happens(push,n1) | holdsAt(backwards,plus(n1,n1)).  [resolve(35,b,34,a)].
37 happens(push,n1) | holdsAt(backwards,n2).  [para(16(a,1),36(b,2))].
38 happens(push,n1).  [resolve(22,a,37,b)].
39 n0 = n1 | pull = push | n2 = n1.  [resolve(38,a,11,a)].
40 pull = push | n2 = n1.  [resolve(32,a,39,a)].
41 n2 = n1.  [resolve(14,a,40,a)].
42 $F.  [resolve(30,a,41,a)].

============================== end of proof ==========================
