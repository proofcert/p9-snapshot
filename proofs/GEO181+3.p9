============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n157.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 04:42:13 CDT 2014
% CPUTime    : 0.15 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 9636 was started by sandbox on n157.star.cs.uiowa.edu,
Fri Jun  6 04:42:13 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_9604_n157.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 19.
% Level of proof is 5.
% Maximum clause weight is 9.000.
% Given clauses 46.


1 (all A -distinct_lines(A,A)).  [assumption].
2 (all A all B all C (distinct_lines(A,B) -> distinct_lines(A,C) | distinct_lines(B,C))).  [assumption].
3 (all A all B all C (apart_point_and_line(A,B) -> distinct_lines(B,C) | apart_point_and_line(A,C))).  [assumption].
4 (all A all B (distinct_lines(A,B) -> convergent_lines(A,B))).  [assumption].
5 (all A all B -convergent_lines(parallel_through_point(B,A),B)).  [assumption].
6 (all A all B -apart_point_and_line(A,parallel_through_point(B,A))).  [assumption].
7 -(all A all B all C (distinct_points(A,B) -> (apart_point_and_line(C,line_connecting(A,B)) -> apart_point_and_line(B,line_connecting(A,C))))).  [assumption].
8 apart_point_and_line(c3,line_connecting(c1,c2)).  [clausify(7)].
9 -distinct_lines(A,A).  [clausify(1)].
10 -convergent_lines(parallel_through_point(A,B),A).  [clausify(5)].
11 -apart_point_and_line(A,parallel_through_point(B,A)).  [clausify(6)].
12 -distinct_lines(A,B) | convergent_lines(A,B).  [clausify(4)].
13 -distinct_lines(A,B) | distinct_lines(A,C) | distinct_lines(B,C).  [clausify(2)].
14 -apart_point_and_line(A,B) | distinct_lines(B,C) | apart_point_and_line(A,C).  [clausify(3)].
15 -distinct_lines(parallel_through_point(A,B),A).  [resolve(12,b,10,a)].
16 distinct_lines(line_connecting(c1,c2),A) | apart_point_and_line(c3,A).  [resolve(14,a,8,a)].
17 -distinct_lines(A,B) | distinct_lines(B,A).  [resolve(13,b,9,a)].
18 -distinct_lines(A,parallel_through_point(A,B)).  [resolve(17,b,15,a)].
19 apart_point_and_line(c3,parallel_through_point(line_connecting(c1,c2),A)).  [resolve(18,a,16,a)].
20 $F.  [resolve(19,a,11,a)].

============================== end of proof ==========================
