============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n099.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 10:54:43 CDT 2014
% CPUTime    : 0.34 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 24189 was started by sandbox on n099.star.cs.uiowa.edu,
Fri Jun  6 10:54:43 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_24157_n099.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.18 (+ 0.00) seconds.
% Length of proof is 32.
% Level of proof is 8.
% Maximum clause weight is 33.000.
% Given clauses 409.


1 (all A all B m_Down(A) != m_Ldr(B)).  [assumption].
2 (all A all B all C (elem(A,cons(B,C)) <-> A = B | elem(A,C))).  [assumption].
3 (all A all B all C (elem(A,snoc(C,B)) <-> A = B | elem(A,C))).  [assumption].
4 -(all A all B all C all D ((all E all F (setIn(F,alive) -> -elem(m_Down(F),queue(host(E))))) & (all E all F (elem(m_Down(F),queue(host(E))) -> -setIn(F,alive))) & (all E all F (elem(m_Down(F),queue(host(E))) -> host(F) != host(E))) & (all E all F (elem(m_Halt(F),queue(host(E))) -> -leq(host(E),host(F)))) & (all E all V6 all F (elem(m_Ack(F,E),queue(host(V6))) -> -leq(host(E),host(F)))) & (all E all F (-setIn(E,alive) & leq(F,E) & host(F) = host(E) -> -setIn(F,alive))) & (all E all F (F != E & host(F) = host(E) -> -setIn(E,alive) | -setIn(F,alive))) & (all E all V7 all V6 all F (host(V6) != host(E) & setIn(E,alive) & setIn(V6,alive) & host(V7) = host(E) & host(F) = host(V6) -> -(elem(m_Down(F),queue(host(E))) & elem(m_Down(V7),queue(host(V6)))))) & queue(host(C)) = cons(m_Ack(B,D),A) -> (setIn(C,alive) -> (index(elid,host(C)) = B & index(status,host(C)) = elec_2 & host(D) = index(pendack,host(C)) -> (leq(nbr_proc,index(pendack,host(C))) -> (all E (setIn(host(E),index(acks,host(C))) | host(E) = host(D) -> (all V8 (host(E) = host(V8) -> (host(C) = host(V8) -> (all V9 all V10 (host(E) != host(V10) -> (host(C) != host(V10) -> (all V11 (host(V10) != host(V8) & setIn(V8,alive) & setIn(V10,alive) & host(V9) = host(V8) & host(V11) = host(V10) -> -(elem(m_Down(V9),queue(host(V10))) & elem(m_Down(V11),snoc(A,m_Ldr(C))))))))))))))))))).  [assumption].
5 m_Ldr(A) != m_Down(B).  [clausify(1)].
6 elem(A,cons(B,C)) | -elem(A,C).  [clausify(2)].
7 -elem(A,snoc(B,C)) | C = A | elem(A,B).  [clausify(3)].
8 host(A) = host(B) | -setIn(B,alive) | -setIn(A,alive) | host(C) != host(B) | host(A) != host(D) | -elem(m_Down(D),queue(host(B))) | -elem(m_Down(C),queue(host(A))).  [clausify(4)].
9 cons(m_Ack(c2,c4),c1) = queue(host(c3)).  [clausify(4)].
10 setIn(c3,alive).  [clausify(4)].
11 host(c6) = host(c5).  [clausify(4)].
12 host(c6) = host(c3).  [clausify(4)].
13 host(c5) = host(c3).  [para(11(a,1),12(a,1))].
14 host(c8) != host(c5).  [clausify(4)].
15 host(c8) != host(c3).  [para(13(a,1),14(a,2))].
16 setIn(c8,alive).  [clausify(4)].
17 host(c7) = host(c6).  [clausify(4)].
18 host(c7) = host(c5).  [para(11(a,1),17(a,2))].
19 host(c7) = host(c3).  [para(13(a,1),18(a,2))].
20 host(c9) = host(c8).  [clausify(4)].
21 elem(m_Down(c7),queue(host(c8))).  [clausify(4)].
22 elem(m_Down(c9),snoc(c1,m_Ldr(c3))).  [clausify(4)].
23 host(c8) = c_0.  [new_symbol(15)].
24 elem(m_Down(c7),queue(c_0)).  [para(23(a,1),21(a,2,1))].
25 host(c9) = c_0.  [para(23(a,1),20(a,2))].
26 c_0 != host(c3).  [para(23(a,1),15(a,1))].
27 host(c3) != c_0.  [copy(26),flip(a)].
28 host(c3) = host(A) | -setIn(A,alive) | host(B) != host(A) | host(c3) != host(C) | -elem(m_Down(C),queue(host(A))) | -elem(m_Down(B),queue(host(c3))).  [resolve(10,a,8,c)].
29 m_Ldr(c3) = m_Down(c9) | elem(m_Down(c9),c1).  [resolve(22,a,7,a)].
30 elem(m_Down(c9),c1).  [resolve(5,a,29,a)].
31 elem(m_Down(c9),cons(A,c1)).  [resolve(30,a,6,b)].
32 elem(m_Down(c9),queue(host(c3))).  [para(9(a,1),31(a,2))].
33 host(c3) = host(c8) | host(A) != host(c8) | host(c3) != host(B) | -elem(m_Down(B),queue(host(c8))) | -elem(m_Down(A),queue(host(c3))).  [resolve(28,b,16,a)].
34 host(c3) = c_0 | host(A) != host(c8) | host(c3) != host(B) | -elem(m_Down(B),queue(host(c8))) | -elem(m_Down(A),queue(host(c3))).  [para(23(a,1),33(a,2))].
35 host(c3) = c_0 | host(A) != c_0 | host(c3) != host(B) | -elem(m_Down(B),queue(host(c8))) | -elem(m_Down(A),queue(host(c3))).  [para(23(a,1),34(b,2))].
36 host(c3) = c_0 | host(A) != c_0 | host(c3) != host(B) | -elem(m_Down(B),queue(c_0)) | -elem(m_Down(A),queue(host(c3))).  [para(23(a,1),35(d,2,1))].
37 host(A) != c_0 | host(c3) != host(B) | -elem(m_Down(B),queue(c_0)) | -elem(m_Down(A),queue(host(c3))).  [resolve(27,a,36,a)].
38 host(A) != c_0 | host(c3) != host(c7) | -elem(m_Down(A),queue(host(c3))).  [resolve(37,c,24,a)].
39 host(A) != c_0 | host(c3) != host(c3) | -elem(m_Down(A),queue(host(c3))).  [para(19(a,1),38(b,2))].
40 host(A) != c_0 | -elem(m_Down(A),queue(host(c3))).  [copy(39),xx(b)].
41 host(c9) != c_0.  [resolve(40,b,32,a)].
42 c_0 != c_0.  [para(25(a,1),41(a,1))].
43 $F.  [copy(42),xx(a)].

============================== end of proof ==========================
