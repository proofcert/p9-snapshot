============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n086.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 07:34:13 CDT 2014
% CPUTime    : 0.13 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 7623 was started by sandbox on n086.star.cs.uiowa.edu,
Fri Jun  6 07:34:13 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_7591_n086.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 11.
% Level of proof is 3.
% Maximum clause weight is 11.000.
% Given clauses 25.


1 (all A -distinct_points(A,A)).  [assumption].
2 (all A all B all C (convergent_lines(A,B) -> (apart_point_and_line(C,A) | apart_point_and_line(C,B) -> distinct_points(C,intersection_point(A,B))))).  [assumption].
3 -(all A all B (line(A) & line(B) & convergent_lines(A,B) -> (exists C (point(C) -> -apart_point_and_line(C,A) & -apart_point_and_line(C,B))))).  [assumption].
4 convergent_lines(c1,c2).  [clausify(3)].
5 apart_point_and_line(A,c1) | apart_point_and_line(A,c2).  [clausify(3)].
6 -distinct_points(A,A).  [clausify(1)].
7 -convergent_lines(A,B) | -apart_point_and_line(C,A) | distinct_points(C,intersection_point(A,B)).  [clausify(2)].
8 -convergent_lines(A,B) | -apart_point_and_line(C,B) | distinct_points(C,intersection_point(A,B)).  [clausify(2)].
9 -apart_point_and_line(A,c1) | distinct_points(A,intersection_point(c1,c2)).  [resolve(7,a,4,a)].
10 -apart_point_and_line(intersection_point(c1,c2),c1).  [resolve(9,b,6,a)].
11 -apart_point_and_line(A,c2) | distinct_points(A,intersection_point(c1,c2)).  [resolve(8,a,4,a)].
12 -apart_point_and_line(intersection_point(c1,c2),c2).  [resolve(11,b,6,a)].
13 apart_point_and_line(intersection_point(c1,c2),c1).  [resolve(12,a,5,b)].
14 $F.  [resolve(10,a,13,a)].

============================== end of proof ==========================
