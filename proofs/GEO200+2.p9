============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n058.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 05:55:13 CDT 2014
% CPUTime    : 0.12 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 23248 was started by sandbox on n058.star.cs.uiowa.edu,
Fri Jun  6 05:55:13 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_23216_n058.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 20.
% Level of proof is 6.
% Maximum clause weight is 18.000.
% Given clauses 26.


1 (all A -distinct_points(A,A)).  [assumption].
2 (all A all B all C (distinct_points(A,B) -> distinct_points(A,C) | distinct_points(B,C))).  [assumption].
3 (all A all B all C (distinct_points(A,B) -> (apart_point_and_line(C,line_connecting(A,B)) -> distinct_points(C,A) & distinct_points(C,B)))).  [assumption].
4 (all A all B all C all D (distinct_points(A,B) & distinct_lines(C,D) -> apart_point_and_line(A,C) | apart_point_and_line(A,D) | apart_point_and_line(B,C) | apart_point_and_line(B,D))).  [assumption].
5 -(all A all B (distinct_points(A,B) -> -distinct_lines(line_connecting(A,B),line_connecting(B,A)))).  [assumption].
6 distinct_points(c1,c2).  [clausify(5)].
7 distinct_lines(line_connecting(c1,c2),line_connecting(c2,c1)).  [clausify(5)].
8 -distinct_points(A,A).  [clausify(1)].
9 -distinct_points(A,B) | distinct_points(A,C) | distinct_points(B,C).  [clausify(2)].
10 -distinct_points(A,B) | -apart_point_and_line(C,line_connecting(A,B)) | distinct_points(C,A).  [clausify(3)].
11 -distinct_points(A,B) | -apart_point_and_line(C,line_connecting(A,B)) | distinct_points(C,B).  [clausify(3)].
12 -distinct_points(A,B) | -distinct_lines(C,D) | apart_point_and_line(A,C) | apart_point_and_line(A,D) | apart_point_and_line(B,C) | apart_point_and_line(B,D).  [clausify(4)].
13 distinct_points(c1,A) | distinct_points(c2,A).  [resolve(9,a,6,a)].
14 -apart_point_and_line(A,line_connecting(c1,c2)) | distinct_points(A,c1).  [resolve(10,a,6,a)].
15 -apart_point_and_line(c1,line_connecting(c1,c2)).  [resolve(14,b,8,a)].
16 -apart_point_and_line(A,line_connecting(c1,c2)) | distinct_points(A,c2).  [resolve(11,a,6,a)].
17 -apart_point_and_line(c2,line_connecting(c1,c2)).  [resolve(16,b,8,a)].
18 distinct_points(c1,A) | distinct_points(c2,B) | distinct_points(A,B).  [resolve(13,b,9,a)].
19 distinct_points(c1,c1) | distinct_points(c2,c1).  [factor(18,a,c)].
20 distinct_points(c2,c1).  [resolve(8,a,19,a)].
21 -apart_point_and_line(A,line_connecting(c2,c1)) | distinct_points(A,c1).  [resolve(11,a,20,a)].
22 -apart_point_and_line(c1,line_connecting(c2,c1)).  [resolve(21,b,8,a)].
23 -apart_point_and_line(A,line_connecting(c2,c1)) | distinct_points(A,c2).  [resolve(10,a,20,a)].
24 -apart_point_and_line(c2,line_connecting(c2,c1)).  [resolve(23,b,8,a)].
25 -distinct_points(A,B) | apart_point_and_line(A,line_connecting(c1,c2)) | apart_point_and_line(A,line_connecting(c2,c1)) | apart_point_and_line(B,line_connecting(c1,c2)) | apart_point_and_line(B,line_connecting(c2,c1)).  [resolve(12,b,7,a)].
26 -distinct_points(c1,A) | apart_point_and_line(c1,line_connecting(c2,c1)) | apart_point_and_line(A,line_connecting(c1,c2)) | apart_point_and_line(A,line_connecting(c2,c1)).  [resolve(25,b,15,a)].
27 -distinct_points(c1,A) | apart_point_and_line(A,line_connecting(c1,c2)) | apart_point_and_line(A,line_connecting(c2,c1)).  [resolve(26,b,22,a)].
28 -distinct_points(c1,c2) | apart_point_and_line(c2,line_connecting(c2,c1)).  [resolve(27,b,17,a)].
29 -distinct_points(c1,c2).  [resolve(28,b,24,a)].
30 $F.  [resolve(6,a,29,a)].

============================== end of proof ==========================
