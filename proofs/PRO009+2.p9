============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n111.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 14:26:03 CDT 2014
% CPUTime    : 0.24 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 16396 was started by sandbox on n111.star.cs.uiowa.edu,
Thu Jun  5 14:26:03 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_16364_n111.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.10 (+ 0.00) seconds.
% Length of proof is 28.
% Level of proof is 7.
% Maximum clause weight is 16.000.
% Given clauses 359.


1 (all A all B all C all D (min_precedes(A,B,D) & min_precedes(B,C,D) -> min_precedes(A,C,D))).  [assumption].
2 (all A all B all C (next_subocc(A,B,C) <-> min_precedes(A,B,C) & -(exists D (min_precedes(A,D,C) & min_precedes(D,B,C))))).  [assumption].
3 (all A (occurrence_of(A,tptp0) -> (exists B exists C exists D (occurrence_of(B,tptp3) & root_occ(B,A) & occurrence_of(C,tptp4) & next_subocc(B,C,tptp0) & (occurrence_of(D,tptp2) | occurrence_of(D,tptp1)) & next_subocc(C,D,tptp0) & leaf_occ(D,A))))).  [assumption].
4 -(all A (occurrence_of(A,tptp0) -> (exists B exists C (occurrence_of(B,tptp3) & root_occ(B,A) & (occurrence_of(C,tptp2) | occurrence_of(C,tptp1)) & min_precedes(B,C,tptp0) & leaf_occ(C,A))))).  [assumption].
5 -occurrence_of(A,tptp0) | next_subocc(f15(A),f16(A),tptp0).  [clausify(3)].
6 -next_subocc(A,B,C) | min_precedes(A,B,C).  [clausify(2)].
7 -occurrence_of(A,tptp0) | next_subocc(f16(A),f17(A),tptp0).  [clausify(3)].
8 occurrence_of(c1,tptp0).  [clausify(4)].
9 -occurrence_of(A,tptp3) | -root_occ(A,c1) | -occurrence_of(B,tptp2) | -min_precedes(A,B,tptp0) | -leaf_occ(B,c1).  [clausify(4)].
10 -occurrence_of(A,tptp3) | -root_occ(A,c1) | -occurrence_of(B,tptp1) | -min_precedes(A,B,tptp0) | -leaf_occ(B,c1).  [clausify(4)].
11 -occurrence_of(A,tptp0) | occurrence_of(f15(A),tptp3).  [clausify(3)].
12 -occurrence_of(A,tptp0) | root_occ(f15(A),A).  [clausify(3)].
13 -occurrence_of(A,tptp0) | leaf_occ(f17(A),A).  [clausify(3)].
14 -occurrence_of(A,tptp0) | occurrence_of(f17(A),tptp2) | occurrence_of(f17(A),tptp1).  [clausify(3)].
15 -min_precedes(A,B,C) | -min_precedes(B,D,C) | min_precedes(A,D,C).  [clausify(1)].
16 -occurrence_of(A,tptp0) | min_precedes(f15(A),f16(A),tptp0).  [resolve(5,b,6,a)].
17 -occurrence_of(A,tptp0) | min_precedes(f16(A),f17(A),tptp0).  [resolve(7,b,6,a)].
18 occurrence_of(f15(c1),tptp3).  [resolve(11,a,8,a)].
19 root_occ(f15(c1),c1).  [resolve(12,a,8,a)].
20 leaf_occ(f17(c1),c1).  [resolve(13,a,8,a)].
21 occurrence_of(f17(c1),tptp2) | occurrence_of(f17(c1),tptp1).  [resolve(14,a,8,a)].
22 min_precedes(f15(c1),f16(c1),tptp0).  [resolve(16,a,8,a)].
23 min_precedes(f16(c1),f17(c1),tptp0).  [resolve(17,a,8,a)].
24 -min_precedes(f16(c1),A,tptp0) | min_precedes(f15(c1),A,tptp0).  [resolve(22,a,15,a)].
25 min_precedes(f15(c1),f17(c1),tptp0).  [resolve(24,a,23,a)].
26 -occurrence_of(f15(c1),tptp3) | -root_occ(f15(c1),c1) | -occurrence_of(f17(c1),tptp1) | -leaf_occ(f17(c1),c1).  [resolve(25,a,10,d)].
27 -root_occ(f15(c1),c1) | -occurrence_of(f17(c1),tptp1) | -leaf_occ(f17(c1),c1).  [resolve(18,a,26,a)].
28 -occurrence_of(f17(c1),tptp1) | -leaf_occ(f17(c1),c1).  [resolve(19,a,27,a)].
29 -occurrence_of(f17(c1),tptp1).  [resolve(20,a,28,b)].
30 -occurrence_of(f15(c1),tptp3) | -root_occ(f15(c1),c1) | -occurrence_of(f17(c1),tptp2) | -leaf_occ(f17(c1),c1).  [resolve(25,a,9,d)].
31 -root_occ(f15(c1),c1) | -occurrence_of(f17(c1),tptp2) | -leaf_occ(f17(c1),c1).  [resolve(18,a,30,a)].
32 -occurrence_of(f17(c1),tptp2) | -leaf_occ(f17(c1),c1).  [resolve(19,a,31,a)].
33 -occurrence_of(f17(c1),tptp2).  [resolve(20,a,32,b)].
34 occurrence_of(f17(c1),tptp1).  [resolve(33,a,21,a)].
35 $F.  [resolve(29,a,34,a)].

============================== end of proof ==========================
