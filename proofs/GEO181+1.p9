============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n142.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 04:39:43 CDT 2014
% CPUTime    : 0.14 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 49530 was started by sandbox on n142.star.cs.uiowa.edu,
Fri Jun  6 04:39:43 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_49498_n142.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.02 (+ 0.00) seconds.
% Length of proof is 37.
% Level of proof is 9.
% Maximum clause weight is 18.000.
% Given clauses 94.


1 (all A -distinct_points(A,A)).  [assumption].
2 (all A all B all C (distinct_points(A,B) -> distinct_points(A,C) | distinct_points(B,C))).  [assumption].
3 (all A all B (distinct_points(A,B) -> -apart_point_and_line(A,line_connecting(A,B)))).  [assumption].
4 (all A all B (distinct_points(A,B) -> -apart_point_and_line(B,line_connecting(A,B)))).  [assumption].
5 (all A all B all C all D (distinct_points(A,B) & distinct_lines(C,D) -> apart_point_and_line(A,C) | apart_point_and_line(A,D) | apart_point_and_line(B,C) | apart_point_and_line(B,D))).  [assumption].
6 (all A all B all C (apart_point_and_line(A,B) -> distinct_points(A,C) | apart_point_and_line(C,B))).  [assumption].
7 (all A all B all C (apart_point_and_line(A,B) -> distinct_lines(B,C) | apart_point_and_line(A,C))).  [assumption].
8 -(all A all B all C (distinct_points(A,B) -> (apart_point_and_line(C,line_connecting(A,B)) -> apart_point_and_line(B,line_connecting(A,C))))).  [assumption].
9 distinct_points(c1,c2).  [clausify(8)].
10 apart_point_and_line(c3,line_connecting(c1,c2)).  [clausify(8)].
11 -distinct_points(A,A).  [clausify(1)].
12 -apart_point_and_line(c2,line_connecting(c1,c3)).  [clausify(8)].
13 -distinct_points(A,B) | -apart_point_and_line(A,line_connecting(A,B)).  [clausify(3)].
14 -distinct_points(A,B) | -apart_point_and_line(B,line_connecting(A,B)).  [clausify(4)].
15 -distinct_points(A,B) | distinct_points(A,C) | distinct_points(B,C).  [clausify(2)].
16 -apart_point_and_line(A,B) | distinct_points(A,C) | apart_point_and_line(C,B).  [clausify(6)].
17 -apart_point_and_line(A,B) | distinct_lines(B,C) | apart_point_and_line(A,C).  [clausify(7)].
18 -distinct_points(A,B) | -distinct_lines(C,D) | apart_point_and_line(A,C) | apart_point_and_line(A,D) | apart_point_and_line(B,C) | apart_point_and_line(B,D).  [clausify(5)].
19 -apart_point_and_line(c1,line_connecting(c1,c2)).  [resolve(13,a,9,a)].
20 -apart_point_and_line(c2,line_connecting(c1,c2)).  [resolve(14,a,9,a)].
21 distinct_points(c3,A) | apart_point_and_line(A,line_connecting(c1,c2)).  [resolve(16,a,10,a)].
22 distinct_lines(line_connecting(c1,c2),A) | apart_point_and_line(c3,A).  [resolve(17,a,10,a)].
23 -distinct_lines(A,B) | apart_point_and_line(c1,A) | apart_point_and_line(c1,B) | apart_point_and_line(c2,A) | apart_point_and_line(c2,B).  [resolve(18,a,9,a)].
24 apart_point_and_line(A,line_connecting(c1,c2)) | distinct_points(c3,B) | distinct_points(A,B).  [resolve(21,a,15,a)].
25 apart_point_and_line(A,line_connecting(c1,c2)) | -apart_point_and_line(A,line_connecting(c3,A)).  [resolve(21,a,14,a)].
26 apart_point_and_line(A,line_connecting(c1,c2)) | -apart_point_and_line(c3,line_connecting(c3,A)).  [resolve(21,a,13,a)].
27 apart_point_and_line(c1,line_connecting(c1,c2)) | apart_point_and_line(c1,A) | apart_point_and_line(c2,line_connecting(c1,c2)) | apart_point_and_line(c2,A) | apart_point_and_line(c3,A).  [resolve(23,a,22,a)].
28 apart_point_and_line(c1,A) | apart_point_and_line(c2,line_connecting(c1,c2)) | apart_point_and_line(c2,A) | apart_point_and_line(c3,A).  [resolve(19,a,27,a)].
29 apart_point_and_line(c1,A) | apart_point_and_line(c2,A) | apart_point_and_line(c3,A).  [resolve(20,a,28,b)].
30 apart_point_and_line(A,line_connecting(c1,c2)) | distinct_points(A,c3).  [resolve(24,b,11,a)].
31 -apart_point_and_line(c2,line_connecting(c3,c2)).  [resolve(25,a,20,a)].
32 apart_point_and_line(A,line_connecting(c1,c2)) | -apart_point_and_line(c3,line_connecting(A,c3)).  [resolve(30,b,14,a)].
33 -apart_point_and_line(c3,line_connecting(c3,c2)).  [resolve(26,a,20,a)].
34 apart_point_and_line(c1,line_connecting(c3,c2)) | apart_point_and_line(c2,line_connecting(c3,c2)).  [resolve(33,a,29,c)].
35 apart_point_and_line(c1,line_connecting(c3,c2)).  [resolve(31,a,34,b)].
36 distinct_points(c1,A) | apart_point_and_line(A,line_connecting(c3,c2)).  [resolve(35,a,16,a)].
37 -apart_point_and_line(c3,line_connecting(c1,c3)).  [resolve(32,a,19,a)].
38 apart_point_and_line(c1,line_connecting(c1,c3)) | apart_point_and_line(c2,line_connecting(c1,c3)).  [resolve(37,a,29,c)].
39 apart_point_and_line(c1,line_connecting(c1,c3)).  [resolve(12,a,38,b)].
40 -distinct_points(c1,c3).  [resolve(13,b,39,a)].
41 apart_point_and_line(c3,line_connecting(c3,c2)).  [resolve(40,a,36,a)].
42 $F.  [resolve(33,a,41,a)].

============================== end of proof ==========================
