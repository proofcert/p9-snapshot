============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n045.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Sat Jun  7 00:58:23 CDT 2014
% CPUTime    : 12.19 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 23633 was started by sandbox on n045.star.cs.uiowa.edu,
Sat Jun  7 00:58:23 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_23601_n045.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 12.06 (+ 0.01) seconds.
% Length of proof is 26.
% Level of proof is 8.
% Maximum clause weight is 28.000.
% Given clauses 495.


1 (all A all B unordered_pair(A,B) = unordered_pair(B,A)).  [assumption].
2 (all A all B all C (C = cartesian_product2(A,B) <-> (all D (in(D,C) <-> (exists E exists F (in(E,A) & in(F,B) & D = ordered_pair(E,F))))))).  [assumption].
3 (all A all B (subset(A,B) <-> (all C (in(C,A) -> in(C,B))))).  [assumption].
4 (all A all B ordered_pair(A,B) = unordered_pair(unordered_pair(A,B),singleton(A))).  [assumption].
5 -(all A all B all C all D -(subset(A,cartesian_product2(B,C)) & in(D,A) & (all E all F -(in(E,B) & in(F,C) & D = ordered_pair(E,F))))).  [assumption].
6 -subset(A,B) | -in(C,A) | in(C,B).  [clausify(3)].
7 subset(c3,cartesian_product2(c4,c5)).  [clausify(5)].
8 in(c6,c3).  [clausify(5)].
9 unordered_pair(A,B) = unordered_pair(B,A).  [clausify(1)].
10 ordered_pair(A,B) = unordered_pair(unordered_pair(A,B),singleton(A)).  [clausify(4)].
11 ordered_pair(A,B) = unordered_pair(singleton(A),unordered_pair(A,B)).  [para(9(a,1),10(a,2))].
12 -in(A,c4) | -in(B,c5) | ordered_pair(A,B) != c6.  [clausify(5)].
13 -in(A,c4) | -in(B,c5) | unordered_pair(singleton(A),unordered_pair(A,B)) != c6.  [para(11(a,1),12(c,1))].
14 cartesian_product2(A,B) != C | -in(D,C) | in(f1(A,B,C,D),A).  [clausify(2)].
15 cartesian_product2(A,B) != C | -in(D,C) | in(f2(A,B,C,D),B).  [clausify(2)].
16 cartesian_product2(A,B) != C | -in(D,C) | ordered_pair(f1(A,B,C,D),f2(A,B,C,D)) = D.  [clausify(2)].
17 cartesian_product2(A,B) != C | -in(D,C) | unordered_pair(singleton(f1(A,B,C,D)),unordered_pair(f1(A,B,C,D),f2(A,B,C,D))) = D.  [para(11(a,1),16(c,1))].
18 -in(A,c3) | in(A,cartesian_product2(c4,c5)).  [resolve(6,a,7,a)].
19 in(c6,cartesian_product2(c4,c5)).  [resolve(18,a,8,a)].
20 cartesian_product2(A,B) != cartesian_product2(c4,c5) | in(f2(A,B,cartesian_product2(c4,c5),c6),B).  [resolve(19,a,15,b)].
21 cartesian_product2(c4,c5) != cartesian_product2(A,B) | in(f2(A,B,cartesian_product2(c4,c5),c6),B).  [copy(20),flip(a)].
22 cartesian_product2(A,B) != cartesian_product2(c4,c5) | in(f1(A,B,cartesian_product2(c4,c5),c6),A).  [resolve(19,a,14,b)].
23 cartesian_product2(c4,c5) != cartesian_product2(A,B) | in(f1(A,B,cartesian_product2(c4,c5),c6),A).  [copy(22),flip(a)].
24 in(f2(c4,c5,cartesian_product2(c4,c5),c6),c5).  [xx_res(21,a)].
25 -in(A,c4) | unordered_pair(singleton(A),unordered_pair(A,f2(c4,c5,cartesian_product2(c4,c5),c6))) != c6.  [resolve(24,a,13,b)].
26 in(f1(c4,c5,cartesian_product2(c4,c5),c6),c4).  [xx_res(23,a)].
27 unordered_pair(singleton(f1(c4,c5,cartesian_product2(c4,c5),c6)),unordered_pair(f1(c4,c5,cartesian_product2(c4,c5),c6),f2(c4,c5,cartesian_product2(c4,c5),c6))) != c6.  [resolve(26,a,25,a)].
28 cartesian_product2(A,B) != cartesian_product2(c4,c5) | unordered_pair(singleton(f1(A,B,cartesian_product2(c4,c5),c6)),unordered_pair(f1(A,B,cartesian_product2(c4,c5),c6),f2(A,B,cartesian_product2(c4,c5),c6))) = c6.  [resolve(17,b,19,a)].
29 cartesian_product2(c4,c5) != cartesian_product2(c4,c5).  [resolve(28,b,27,a)].
30 $F.  [copy(29),xx(a)].

============================== end of proof ==========================
