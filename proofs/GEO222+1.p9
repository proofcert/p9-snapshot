============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n073.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 07:17:13 CDT 2014
% CPUTime    : 0.14 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 10877 was started by sandbox on n073.star.cs.uiowa.edu,
Fri Jun  6 07:17:13 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_10845_n073.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 31.
% Level of proof is 7.
% Maximum clause weight is 15.000.
% Given clauses 47.


1 (all A -convergent_lines(A,A)).  [assumption].
2 (all A all B all C (convergent_lines(A,B) -> convergent_lines(A,C) | convergent_lines(B,C))).  [assumption].
3 (all A all B (convergent_lines(A,B) -> -apart_point_and_line(intersection_point(A,B),A))).  [assumption].
4 (all A all B (convergent_lines(A,B) -> -apart_point_and_line(intersection_point(A,B),B))).  [assumption].
5 (all A all B all C (convergent_lines(A,B) -> distinct_lines(B,C) | convergent_lines(A,C))).  [assumption].
6 (all A all B (convergent_lines(A,B) | unorthogonal_lines(A,B))).  [assumption].
7 (all A all B all C (convergent_lines(A,B) & unorthogonal_lines(A,B) -> convergent_lines(A,C) & unorthogonal_lines(A,C) | convergent_lines(B,C) & unorthogonal_lines(B,C))).  [assumption].
8 (all A all B -unorthogonal_lines(orthogonal_through_point(B,A),B)).  [assumption].
9 (all A all B all C all D (distinct_lines(B,C) -> apart_point_and_line(A,B) | apart_point_and_line(A,C) | unorthogonal_lines(B,D) | unorthogonal_lines(C,D))).  [assumption].
10 -(all A all B -convergent_lines(B,orthogonal_through_point(orthogonal_through_point(B,A),A))).  [assumption].
11 convergent_lines(A,B) | unorthogonal_lines(A,B).  [clausify(6)].
12 convergent_lines(c2,orthogonal_through_point(orthogonal_through_point(c2,c1),c1)).  [clausify(10)].
13 -convergent_lines(A,A).  [clausify(1)].
14 -unorthogonal_lines(orthogonal_through_point(A,B),A).  [clausify(8)].
15 -convergent_lines(A,B) | -apart_point_and_line(intersection_point(A,B),A).  [clausify(3)].
16 -convergent_lines(A,B) | -apart_point_and_line(intersection_point(A,B),B).  [clausify(4)].
17 -convergent_lines(A,B) | convergent_lines(A,C) | convergent_lines(B,C).  [clausify(2)].
18 -convergent_lines(A,B) | distinct_lines(B,C) | convergent_lines(A,C).  [clausify(5)].
19 -convergent_lines(A,B) | -unorthogonal_lines(A,B) | convergent_lines(A,C) | unorthogonal_lines(B,C).  [clausify(7)].
20 -distinct_lines(A,B) | apart_point_and_line(C,A) | apart_point_and_line(C,B) | unorthogonal_lines(A,D) | unorthogonal_lines(B,D).  [clausify(9)].
21 convergent_lines(orthogonal_through_point(A,B),A).  [resolve(14,a,11,b)].
22 -apart_point_and_line(intersection_point(c2,orthogonal_through_point(orthogonal_through_point(c2,c1),c1)),c2).  [resolve(15,a,12,a)].
23 -apart_point_and_line(intersection_point(c2,orthogonal_through_point(orthogonal_through_point(c2,c1),c1)),orthogonal_through_point(orthogonal_through_point(c2,c1),c1)).  [resolve(16,a,12,a)].
24 convergent_lines(c2,A) | convergent_lines(orthogonal_through_point(orthogonal_through_point(c2,c1),c1),A).  [resolve(17,a,12,a)].
25 convergent_lines(orthogonal_through_point(A,B),C) | convergent_lines(A,C).  [resolve(21,a,17,a)].
26 convergent_lines(A,orthogonal_through_point(A,B)).  [resolve(25,a,13,a)].
27 -unorthogonal_lines(A,orthogonal_through_point(A,B)) | convergent_lines(A,C) | unorthogonal_lines(orthogonal_through_point(A,B),C).  [resolve(19,a,26,a)].
28 -unorthogonal_lines(A,orthogonal_through_point(A,B)) | unorthogonal_lines(orthogonal_through_point(A,B),A).  [resolve(27,b,13,a)].
29 -unorthogonal_lines(A,orthogonal_through_point(A,B)).  [resolve(28,b,14,a)].
30 convergent_lines(c2,A) | convergent_lines(orthogonal_through_point(orthogonal_through_point(c2,c1),c1),B) | convergent_lines(A,B).  [resolve(24,b,17,a)].
31 convergent_lines(c2,c2) | convergent_lines(orthogonal_through_point(orthogonal_through_point(c2,c1),c1),c2).  [factor(30,a,c)].
32 convergent_lines(orthogonal_through_point(orthogonal_through_point(c2,c1),c1),c2).  [resolve(13,a,31,a)].
33 -distinct_lines(c2,A) | apart_point_and_line(intersection_point(c2,orthogonal_through_point(orthogonal_through_point(c2,c1),c1)),A) | unorthogonal_lines(c2,B) | unorthogonal_lines(A,B).  [resolve(20,b,22,a)].
34 -distinct_lines(c2,orthogonal_through_point(orthogonal_through_point(c2,c1),c1)) | unorthogonal_lines(c2,A) | unorthogonal_lines(orthogonal_through_point(orthogonal_through_point(c2,c1),c1),A).  [resolve(33,b,23,a)].
35 -distinct_lines(c2,orthogonal_through_point(orthogonal_through_point(c2,c1),c1)) | unorthogonal_lines(orthogonal_through_point(orthogonal_through_point(c2,c1),c1),orthogonal_through_point(c2,A)).  [resolve(34,b,29,a)].
36 -distinct_lines(c2,orthogonal_through_point(orthogonal_through_point(c2,c1),c1)).  [resolve(35,b,14,a)].
37 -convergent_lines(A,c2) | convergent_lines(A,orthogonal_through_point(orthogonal_through_point(c2,c1),c1)).  [resolve(18,b,36,a)].
38 -convergent_lines(orthogonal_through_point(orthogonal_through_point(c2,c1),c1),c2).  [resolve(37,b,13,a)].
39 $F.  [resolve(32,a,38,a)].

============================== end of proof ==========================
