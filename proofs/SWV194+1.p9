============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n051.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 00:44:58 CDT 2014
% CPUTime    : 0.80 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 1418 was started by sandbox on n051.star.cs.uiowa.edu,
Fri Jun  6 00:44:58 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_1386_n051.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.62 (+ 0.00) seconds.
% Length of proof is 10.
% Level of proof is 3.
% Maximum clause weight is 9.000.
% Given clauses 318.


1 (all A -gt(A,A)).  [assumption].
2 (all A (leq(n0,A) & leq(A,n0) -> A = n0)).  [assumption].
3 -(a_select2(rho_defuse,n0) = use & a_select2(rho_defuse,n1) = use & a_select2(rho_defuse,n2) = use & a_select2(sigma_defuse,n0) = use & a_select2(sigma_defuse,n1) = use & a_select2(sigma_defuse,n2) = use & a_select2(sigma_defuse,n3) = use & a_select2(sigma_defuse,n4) = use & a_select2(sigma_defuse,n5) = use & a_select3(u_defuse,n0,n0) = use & a_select3(u_defuse,n1,n0) = use & a_select3(u_defuse,n2,n0) = use & a_select2(xinit_defuse,n3) = use & a_select2(xinit_defuse,n4) = use & a_select2(xinit_defuse,n5) = use & a_select2(xinit_mean_defuse,n0) = use & a_select2(xinit_mean_defuse,n1) = use & a_select2(xinit_mean_defuse,n2) = use & a_select2(xinit_mean_defuse,n3) = use & a_select2(xinit_mean_defuse,n4) = use & a_select2(xinit_mean_defuse,n5) = use & a_select2(xinit_noise_defuse,n0) = use & a_select2(xinit_noise_defuse,n1) = use & a_select2(xinit_noise_defuse,n2) = use & a_select2(xinit_noise_defuse,n3) = use & a_select2(xinit_noise_defuse,n4) = use & a_select2(xinit_noise_defuse,n5) = use & leq(n0,pv5) & leq(pv5,n0) & leq(pv5,n998) & gt(pv5,n0) & (all A all B (leq(n0,A) & leq(n0,B) & leq(A,n2) & leq(B,pred(pv5)) -> a_select3(u_defuse,A,B) = use)) & (all C all D (leq(n0,C) & leq(n0,D) & leq(C,n2) & leq(D,pred(pv5)) -> a_select3(z_defuse,C,D) = use)) -> (all E all F (leq(n0,E) & leq(n0,F) & leq(E,n2) & leq(F,pv5) -> a_select3(u_defuse,E,F) = use))).  [assumption].
4 -gt(A,A).  [clausify(1)].
5 -leq(n0,A) | -leq(A,n0) | n0 = A.  [clausify(2)].
6 leq(n0,pv5).  [clausify(3)].
7 leq(pv5,n0).  [clausify(3)].
8 gt(pv5,n0).  [clausify(3)].
9 -leq(pv5,n0) | n0 = pv5.  [resolve(6,a,5,a)].
10 -leq(pv5,n0) | pv5 = n0.  [copy(9),flip(b)].
11 pv5 = n0.  [resolve(7,a,10,a)].
12 gt(n0,n0).  [para(11(a,1),8(a,1))].
13 $F.  [resolve(4,a,12,a)].

============================== end of proof ==========================
