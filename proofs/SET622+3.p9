============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n119.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 16:04:28 CDT 2014
% CPUTime    : 0.13 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 24024 was started by sandbox on n119.star.cs.uiowa.edu,
Fri Jun  6 16:04:28 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_23992_n119.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 16.
% Level of proof is 4.
% Maximum clause weight is 21.000.
% Given clauses 8.


1 (all A all B all C intersection(intersection(A,B),C) = intersection(A,intersection(B,C))).  [assumption].
2 (all A all B all C difference(A,difference(B,C)) = union(difference(A,B),intersection(A,C))).  [assumption].
3 (all A all B symmetric_difference(A,B) = difference(union(A,B),intersection(A,B))).  [assumption].
4 (all A all B union(A,B) = union(B,A)).  [assumption].
5 (all A all B intersection(A,B) = intersection(B,A)).  [assumption].
6 -(all A all B all C difference(A,symmetric_difference(B,C)) = union(difference(A,union(B,C)),intersection(intersection(A,B),C))).  [assumption].
7 union(A,B) = union(B,A).  [clausify(4)].
8 intersection(A,B) = intersection(B,A).  [clausify(5)].
9 intersection(intersection(A,B),C) = intersection(A,intersection(B,C)).  [clausify(1)].
10 intersection(C,intersection(A,B)) = intersection(A,intersection(B,C)).  [para(8(a,1),9(a,1))].
11 intersection(A,intersection(B,C)) = intersection(C,intersection(A,B)).  [copy(10),flip(a)].
12 symmetric_difference(A,B) = difference(union(A,B),intersection(A,B)).  [clausify(3)].
13 union(difference(A,B),intersection(A,C)) = difference(A,difference(B,C)).  [clausify(2)].
14 union(difference(c1,union(c2,c3)),intersection(intersection(c1,c2),c3)) != difference(c1,symmetric_difference(c2,c3)).  [clausify(6)].
15 union(difference(c1,union(c2,c3)),intersection(c3,intersection(c1,c2))) != difference(c1,symmetric_difference(c2,c3)).  [para(8(a,1),14(a,1,2))].
16 union(difference(c1,union(c2,c3)),intersection(c2,intersection(c3,c1))) != difference(c1,symmetric_difference(c2,c3)).  [para(11(a,1),15(a,1,2))].
17 union(difference(c1,union(c2,c3)),intersection(c2,intersection(c1,c3))) != difference(c1,symmetric_difference(c2,c3)).  [para(8(a,1),16(a,1,2,2))].
18 union(difference(c1,union(c2,c3)),intersection(c1,intersection(c3,c2))) != difference(c1,symmetric_difference(c2,c3)).  [para(11(a,2),17(a,1,2))].
19 union(difference(c1,union(c2,c3)),intersection(c1,intersection(c2,c3))) != difference(c1,symmetric_difference(c2,c3)).  [para(8(a,1),18(a,1,2,2))].
20 union(intersection(c1,intersection(c2,c3)),difference(c1,union(c2,c3))) != difference(c1,symmetric_difference(c2,c3)).  [para(7(a,1),19(a,1))].
21 union(intersection(c1,intersection(c2,c3)),difference(c1,union(c2,c3))) != difference(c1,difference(union(c2,c3),intersection(c2,c3))).  [para(12(a,1),20(a,2,2))].
22 difference(A,difference(B,C)) = union(intersection(A,C),difference(A,B)).  [para(13(a,1),7(a,1))].
23 union(intersection(A,B),difference(A,C)) = difference(A,difference(C,B)).  [copy(22),flip(a)].
24 $F.  [resolve(23,a,21,a)].

============================== end of proof ==========================
