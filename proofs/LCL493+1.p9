============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n096.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 09:54:23 CDT 2014
% CPUTime    : 2.01 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 5748 was started by sandbox on n096.star.cs.uiowa.edu,
Fri Jun  6 09:54:23 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_5716_n096.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 1.84 (+ 0.04) seconds.
% Length of proof is 92.
% Level of proof is 17.
% Maximum clause weight is 16.000.
% Given clauses 788.


1 modus_ponens <-> (all A all B (is_a_theorem(A) & is_a_theorem(implies(A,B)) -> is_a_theorem(B))).  [assumption].
2 substitution_of_equivalents <-> (all A all B (is_a_theorem(equiv(A,B)) -> A = B)).  [assumption].
3 equivalence_1 <-> (all A all B is_a_theorem(implies(equiv(A,B),implies(A,B)))).  [assumption].
4 r1 <-> (all A is_a_theorem(implies(or(A,A),A))).  [assumption].
5 r2 <-> (all A all B is_a_theorem(implies(B,or(A,B)))).  [assumption].
6 r3 <-> (all A all B is_a_theorem(implies(or(A,B),or(B,A)))).  [assumption].
7 r4 <-> (all A all B all C is_a_theorem(implies(or(A,or(B,C)),or(B,or(A,C))))).  [assumption].
8 r5 <-> (all A all B all C is_a_theorem(implies(implies(B,C),implies(or(A,B),or(A,C))))).  [assumption].
9 op_or -> (all A all B or(A,B) = not(and(not(A),not(B)))).  [assumption].
10 op_and -> (all A all B and(A,B) = not(or(not(A),not(B)))).  [assumption].
11 op_implies_and -> (all A all B implies(A,B) = not(and(A,not(B)))).  [assumption].
12 op_implies_or -> (all A all B implies(A,B) = or(not(A),B)).  [assumption].
13 op_equiv -> (all A all B equiv(A,B) = and(implies(A,B),implies(B,A))).  [assumption].
14 op_implies_or.  [assumption].
15 op_and.  [assumption].
16 op_equiv.  [assumption].
17 modus_ponens.  [assumption].
18 r1.  [assumption].
19 r2.  [assumption].
20 r3.  [assumption].
21 r4.  [assumption].
22 r5.  [assumption].
23 substitution_of_equivalents.  [assumption].
24 op_or.  [assumption].
25 op_implies_and.  [assumption].
26 -equivalence_1.  [assumption].
27 -r1 | is_a_theorem(implies(or(A,A),A)).  [clausify(4)].
28 is_a_theorem(implies(or(A,A),A)).  [resolve(18,a,27,a)].
29 -r2 | is_a_theorem(implies(A,or(B,A))).  [clausify(5)].
30 is_a_theorem(implies(A,or(B,A))).  [resolve(19,a,29,a)].
31 -substitution_of_equivalents | -is_a_theorem(equiv(A,B)) | B = A.  [clausify(2)].
32 -is_a_theorem(equiv(A,B)) | B = A.  [resolve(23,a,31,a)].
33 -modus_ponens | -is_a_theorem(A) | -is_a_theorem(implies(A,B)) | is_a_theorem(B).  [clausify(1)].
34 -is_a_theorem(A) | -is_a_theorem(implies(A,B)) | is_a_theorem(B).  [resolve(17,a,33,a)].
35 equivalence_1 | -is_a_theorem(implies(equiv(c27,c28),implies(c27,c28))).  [clausify(3)].
36 -is_a_theorem(implies(equiv(c27,c28),implies(c27,c28))).  [resolve(26,a,35,a)].
37 -r3 | is_a_theorem(implies(or(A,B),or(B,A))).  [clausify(6)].
38 is_a_theorem(implies(or(A,B),or(B,A))).  [resolve(20,a,37,a)].
39 -op_implies_or | or(not(A),B) = implies(A,B).  [clausify(12)].
40 or(not(A),B) = implies(A,B).  [resolve(14,a,39,a)].
41 -op_implies_and | not(and(A,not(B))) = implies(A,B).  [clausify(11)].
42 not(and(A,not(B))) = implies(A,B).  [resolve(25,a,41,a)].
43 -op_or | or(A,B) = not(and(not(A),not(B))).  [clausify(9)].
44 -op_or | or(A,B) = implies(not(A),B).  [para(42(a,1),43(b,2))].
45 or(A,B) = implies(not(A),B).  [resolve(24,a,44,a)].
46 -op_and | and(A,B) = not(or(not(A),not(B))).  [clausify(10)].
47 -op_and | and(A,B) = not(implies(not(not(A)),not(B))).  [para(45(a,1),46(b,2,1))].
48 -op_and | not(implies(not(not(A)),not(B))) = and(A,B).  [copy(47),flip(b)].
49 not(implies(not(not(A)),not(B))) = and(A,B).  [resolve(15,a,48,a)].
50 -op_equiv | and(implies(A,B),implies(B,A)) = equiv(A,B).  [clausify(13)].
51 and(implies(A,B),implies(B,A)) = equiv(A,B).  [resolve(16,a,50,a)].
52 -r4 | is_a_theorem(implies(or(A,or(B,C)),or(B,or(A,C)))).  [clausify(7)].
53 -r4 | is_a_theorem(implies(or(A,implies(not(B),C)),or(B,or(A,C)))).  [para(45(a,1),52(b,1,1,2))].
54 -r4 | is_a_theorem(implies(implies(not(A),implies(not(B),C)),or(B,or(A,C)))).  [para(45(a,1),53(b,1,1))].
55 -r4 | is_a_theorem(implies(implies(not(A),implies(not(B),C)),or(B,implies(not(A),C)))).  [para(45(a,1),54(b,1,2,2))].
56 -r4 | is_a_theorem(implies(implies(not(A),implies(not(B),C)),implies(not(B),implies(not(A),C)))).  [para(45(a,1),55(b,1,2))].
57 is_a_theorem(implies(implies(not(A),implies(not(B),C)),implies(not(B),implies(not(A),C)))).  [resolve(21,a,56,a)].
58 -r5 | is_a_theorem(implies(implies(A,B),implies(or(C,A),or(C,B)))).  [clausify(8)].
59 -r5 | is_a_theorem(implies(implies(A,B),implies(implies(not(C),A),or(C,B)))).  [para(45(a,1),58(b,1,2,1))].
60 -r5 | is_a_theorem(implies(implies(A,B),implies(implies(not(C),A),implies(not(C),B)))).  [para(45(a,1),59(b,1,2,2))].
61 is_a_theorem(implies(implies(A,B),implies(implies(not(C),A),implies(not(C),B)))).  [resolve(22,a,60,a)].
62 implies(not(not(A)),B) = implies(A,B).  [para(45(a,1),40(a,1))].
63 is_a_theorem(implies(implies(not(A),B),or(B,A))).  [para(45(a,1),38(a,1,1))].
64 is_a_theorem(implies(implies(not(A),B),implies(not(B),A))).  [para(45(a,1),63(a,1,2))].
65 is_a_theorem(implies(A,implies(not(B),A))).  [para(45(a,1),30(a,1,2))].
66 is_a_theorem(implies(implies(not(A),A),A)).  [para(45(a,1),28(a,1,1))].
67 not(implies(A,not(B))) = and(A,B).  [para(62(a,1),49(a,1,1))].
68 -is_a_theorem(implies(not(A),implies(not(B),C))) | is_a_theorem(implies(not(B),implies(not(A),C))).  [resolve(57,a,34,b)].
69 -is_a_theorem(implies(A,B)) | is_a_theorem(implies(implies(not(C),A),implies(not(C),B))).  [resolve(61,a,34,b)].
70 implies(not(implies(A,B)),C) = implies(and(A,not(B)),C).  [para(42(a,1),62(a,1,1,1))].
71 and(implies(A,not(not(B))),implies(B,A)) = equiv(A,not(not(B))).  [para(62(a,1),51(a,1,2))].
72 -is_a_theorem(implies(not(A),B)) | is_a_theorem(implies(not(B),A)).  [resolve(64,a,34,b)].
73 is_a_theorem(implies(implies(A,B),implies(not(B),not(A)))).  [para(62(a,1),64(a,1,1))].
74 is_a_theorem(implies(A,implies(B,A))).  [para(62(a,1),65(a,1,2))].
75 -is_a_theorem(implies(not(A),A)) | is_a_theorem(A).  [resolve(66,a,34,b)].
76 is_a_theorem(implies(implies(A,not(A)),not(A))).  [para(62(a,1),66(a,1,1))].
77 not(implies(A,not(B))) = and(not(not(A)),B).  [para(62(a,1),67(a,1,1))].
78 and(A,B) = and(not(not(A)),B).  [para(67(a,1),77(a,1))].
79 and(not(not(A)),B) = and(A,B).  [copy(78),flip(a)].
80 is_a_theorem(implies(A,implies(B,not(not(A))))).  [para(62(a,1),74(a,1))].
81 is_a_theorem(implies(not(A),implies(not(B),not(B)))).  [resolve(68,a,74,a)].
82 -is_a_theorem(A) | is_a_theorem(implies(B,not(not(A)))).  [resolve(80,a,34,b)].
83 is_a_theorem(implies(not(A),not(A))).  [resolve(81,a,75,a)].
84 is_a_theorem(implies(A,not(not(A)))).  [para(62(a,1),83(a,1))].
85 is_a_theorem(implies(A,not(not(implies(B,not(not(B))))))).  [resolve(84,a,82,a)].
86 is_a_theorem(implies(A,not(and(B,not(B))))).  [para(67(a,1),85(a,1,2,1))].
87 is_a_theorem(implies(A,implies(B,B))).  [para(42(a,1),86(a,1,2))].
88 is_a_theorem(implies(A,A)).  [resolve(87,a,75,a)].
89 implies(and(A,B),C) = implies(and(A,not(not(B))),C).  [para(67(a,1),70(a,1,1))].
90 implies(and(A,not(not(B))),C) = implies(and(A,B),C).  [copy(89),flip(a)].
91 and(not(not(implies(A,not(not(B))))),implies(B,A)) = equiv(A,not(not(B))).  [para(71(a,1),79(a,2))].
92 and(not(and(A,not(B))),implies(B,A)) = equiv(A,not(not(B))).  [para(67(a,1),91(a,1,1,1))].
93 and(implies(A,B),implies(B,A)) = equiv(A,not(not(B))).  [para(42(a,1),92(a,1,1))].
94 equiv(A,B) = equiv(A,not(not(B))).  [para(51(a,1),93(a,1))].
95 equiv(A,not(not(B))) = equiv(A,B).  [copy(94),flip(a)].
96 -is_a_theorem(equiv(A,B)) | not(not(B)) = A.  [para(95(a,1),32(a,1))].
97 is_a_theorem(implies(not(implies(A,not(not(not(B))))),B)).  [resolve(72,a,80,a)].
98 is_a_theorem(implies(and(A,not(not(B))),B)).  [para(67(a,1),97(a,1,1))].
99 is_a_theorem(implies(and(A,B),B)).  [para(90(a,1),98(a,1))].
100 -is_a_theorem(implies(A,B)) | is_a_theorem(implies(not(B),not(A))).  [para(62(a,1),72(a,1))].
101 is_a_theorem(implies(implies(not(A),and(B,C)),implies(not(A),C))).  [resolve(99,a,69,a)].
102 is_a_theorem(implies(implies(A,not(B)),implies(B,not(A)))).  [para(62(a,1),73(a,1,2))].
103 is_a_theorem(implies(not(not(A)),not(implies(A,not(A))))).  [resolve(100,a,76,a)].
104 is_a_theorem(implies(not(not(A)),and(A,A))).  [para(67(a,1),103(a,1,2))].
105 is_a_theorem(implies(A,and(A,A))).  [para(62(a,1),104(a,1))].
106 -is_a_theorem(A) | is_a_theorem(and(A,A)).  [resolve(105,a,34,b)].
107 is_a_theorem(and(implies(A,A),implies(A,A))).  [resolve(106,a,88,a)].
108 is_a_theorem(equiv(A,A)).  [para(51(a,1),107(a,1))].
109 not(not(A)) = A.  [resolve(108,a,96,a)].
110 not(implies(A,B)) = and(A,not(B)).  [para(42(a,1),109(a,1,1))].
111 is_a_theorem(implies(not(implies(A,not(B))),not(implies(B,not(A))))).  [resolve(102,a,100,a)].
112 is_a_theorem(implies(and(A,not(not(B))),not(implies(B,not(A))))).  [para(110(a,1),111(a,1,1))].
113 is_a_theorem(implies(and(A,B),not(implies(B,not(A))))).  [para(109(a,1),112(a,1,1,2))].
114 is_a_theorem(implies(and(A,B),and(B,not(not(A))))).  [para(110(a,1),113(a,1,2))].
115 is_a_theorem(implies(and(A,B),and(B,A))).  [para(109(a,1),114(a,1,2,2))].
116 is_a_theorem(implies(equiv(A,B),and(implies(B,A),implies(A,B)))).  [para(51(a,1),115(a,1,1))].
117 is_a_theorem(implies(equiv(A,B),equiv(B,A))).  [para(51(a,1),116(a,1,2))].
118 -is_a_theorem(implies(implies(equiv(A,B),equiv(B,A)),C)) | is_a_theorem(C).  [resolve(34,a,117,a)].
119 -is_a_theorem(implies(implies(equiv(A,B),equiv(B,A)),implies(equiv(c27,c28),implies(c27,c28)))).  [resolve(118,b,36,a)].
120 is_a_theorem(implies(implies(A,and(B,C)),implies(not(not(A)),C))).  [para(109(a,1),101(a,1,1,1))].
121 is_a_theorem(implies(implies(A,and(B,C)),implies(A,C))).  [para(109(a,1),120(a,1,2,1))].
122 is_a_theorem(implies(implies(A,equiv(B,C)),implies(A,implies(C,B)))).  [para(51(a,1),121(a,1,1,2))].
123 $F.  [resolve(122,a,119,a)].

============================== end of proof ==========================
