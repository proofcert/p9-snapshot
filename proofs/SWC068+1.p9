============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n124.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 18:36:43 CDT 2014
% CPUTime    : 7.18 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 45635 was started by sandbox on n124.star.cs.uiowa.edu,
Thu Jun  5 18:36:43 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_45603_n124.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 6.91 (+ 0.07) seconds.
% Length of proof is 51.
% Level of proof is 8.
% Maximum clause weight is 18.000.
% Given clauses 2632.


1 (all A (ssList(A) -> (all B (ssList(B) -> (frontsegP(A,B) <-> (exists C (ssList(C) & app(B,C) = A))))))).  [assumption].
2 (all A (ssList(A) -> (all B (ssList(B) -> (neq(A,B) <-> A != B))))).  [assumption].
3 (all A (ssList(A) -> frontsegP(A,A))).  [assumption].
4 (all A (ssList(A) -> segmentP(A,A))).  [assumption].
5 (all A (ssList(A) -> (all B (ssList(B) -> (all C (ssList(C) -> (all D (ssList(D) -> (segmentP(A,B) -> segmentP(app(app(C,A),D),B)))))))))).  [assumption].
6 (all A (ssList(A) -> (all B (ssList(B) -> (all C (ssList(C) -> (app(B,C) = app(B,A) -> C = A))))))).  [assumption].
7 (all A (ssList(A) -> (all B (ssList(B) -> (all C (ssList(C) -> app(app(A,B),C) = app(A,app(B,C)))))))).  [assumption].
8 (all A (ssList(A) -> app(A,nil) = A)).  [assumption].
9 -(all A (ssList(A) -> (all B (ssList(B) -> (all C (ssList(C) -> (all D (ssList(D) -> app(D,D) != C | B != D | A != C | (exists E (ssList(E) & neq(E,nil) & segmentP(B,E) & segmentP(A,E))) | nil = B & nil = A)))))))).  [assumption].
10 -ssList(A) | -ssList(B) | -frontsegP(A,B) | ssList(f4(A,B)).  [clausify(1)].
11 -ssList(A) | -ssList(B) | -frontsegP(A,B) | app(B,f4(A,B)) = A.  [clausify(1)].
12 -ssList(A) | -ssList(B) | neq(A,B) | B = A.  [clausify(2)].
13 ssList(nil).  [assumption].
14 -ssList(A) | frontsegP(A,A).  [clausify(3)].
15 -ssList(A) | segmentP(A,A).  [clausify(4)].
16 -ssList(A) | -ssList(B) | -ssList(C) | -ssList(D) | -segmentP(A,B) | segmentP(app(app(C,A),D),B).  [clausify(5)].
17 -ssList(A) | -ssList(B) | -ssList(C) | app(B,C) != app(B,A) | C = A.  [clausify(6)].
18 -ssList(A) | -ssList(B) | -ssList(C) | app(app(A,B),C) = app(A,app(B,C)).  [clausify(7)].
19 -ssList(A) | app(A,nil) = A.  [clausify(8)].
20 ssList(c3).  [clausify(9)].
21 ssList(c4).  [clausify(9)].
22 app(c6,c6) = c5.  [clausify(9)].
23 c6 = c4.  [clausify(9)].
24 c5 = c3.  [clausify(9)].
25 -ssList(A) | -neq(A,nil) | -segmentP(c4,A) | -segmentP(c3,A).  [clausify(9)].
26 nil != c4 | nil != c3.  [clausify(9)].
27 c4 != nil | nil != c3.  [copy(26),flip(a)].
28 c4 != nil | c3 != nil.  [copy(27),flip(b)].
29 -ssList(A) | -frontsegP(A,A) | ssList(f4(A,A)).  [factor(10,a,b)].
30 -ssList(A) | -frontsegP(A,A) | app(A,f4(A,A)) = A.  [factor(11,a,b)].
31 -ssList(A) | -ssList(B) | -ssList(C) | -segmentP(A,A) | segmentP(app(app(B,A),C),A).  [factor(16,a,b)].
32 -ssList(A) | -ssList(B) | app(app(A,A),B) = app(A,app(A,B)).  [factor(18,a,b)].
33 app(c4,c6) = c5.  [para(23(a,1),22(a,1,1))].
34 app(c4,c4) = c5.  [para(23(a,1),33(a,1,2))].
35 app(c4,c4) = c3.  [para(24(a,1),34(a,2))].
36 -ssList(A) | -ssList(B) | -segmentP(A,A) | segmentP(app(app(A,A),B),A).  [factor(31,a,b)].
37 -ssList(A) | app(app(A,A),A) = app(A,app(A,A)).  [factor(32,a,b)].
38 -ssList(A) | neq(A,nil) | nil = A.  [resolve(13,a,12,b)].
39 app(c3,nil) = c3.  [resolve(20,a,19,a)].
40 -ssList(A) | -ssList(B) | app(B,c3) != app(B,A) | c3 = A.  [resolve(20,a,17,c)].
41 frontsegP(c3,c3).  [resolve(20,a,14,a)].
42 -ssList(A) | app(A,c3) != app(A,A) | c3 = A.  [factor(40,a,b)].
43 segmentP(c4,c4).  [resolve(21,a,15,a)].
44 app(app(c4,c4),c4) = app(c4,app(c4,c4)).  [resolve(37,a,21,a)].
45 app(c3,c4) = app(c4,app(c4,c4)).  [para(35(a,1),44(a,1,1))].
46 app(c3,c4) = app(c4,c3).  [para(35(a,1),45(a,2,2))].
47 app(c4,c3) = app(c3,c4).  [copy(46),flip(a)].
48 -ssList(c3) | app(c3,f4(c3,c3)) = c3.  [resolve(41,a,30,b)].
49 app(c3,f4(c3,c3)) = c3.  [resolve(20,a,48,a)].
50 -ssList(c3) | ssList(f4(c3,c3)).  [resolve(41,a,29,b)].
51 ssList(f4(c3,c3)).  [resolve(20,a,50,a)].
52 -ssList(c4) | -ssList(A) | segmentP(app(app(c4,c4),A),c4).  [resolve(43,a,36,c)].
53 -ssList(c4) | -ssList(A) | segmentP(app(c3,A),c4).  [para(35(a,1),52(c,1,1))].
54 -ssList(A) | segmentP(app(c3,A),c4).  [resolve(21,a,53,a)].
55 neq(c4,nil) | nil = c4.  [resolve(38,a,21,a)].
56 neq(c4,nil) | c4 = nil.  [copy(55),flip(b)].
57 c4 = nil | -ssList(c4) | -segmentP(c4,c4) | -segmentP(c3,c4).  [resolve(56,a,25,b)].
58 c4 = nil | -segmentP(c4,c4) | -segmentP(c3,c4).  [resolve(21,a,57,b)].
59 c4 = nil | -segmentP(c3,c4).  [resolve(43,a,58,b)].
60 app(c4,c3) != app(c4,c4) | c3 = c4.  [resolve(42,a,21,a)].
61 app(c3,c4) != app(c4,c4) | c3 = c4.  [para(47(a,1),60(a,1))].
62 app(c3,c4) != c3 | c3 = c4.  [para(35(a,1),61(a,2))].
63 app(c3,c4) != c3 | c4 = c3.  [copy(62),flip(b)].
64 segmentP(app(c3,f4(c3,c3)),c4).  [resolve(54,a,51,a)].
65 segmentP(c3,c4).  [para(49(a,1),64(a,1))].
66 c4 = nil.  [resolve(65,a,59,b)].
67 app(c3,nil) != c3 | c4 = c3.  [para(66(a,1),63(a,1,2))].
68 c3 != c3 | c4 = c3.  [para(39(a,1),67(a,1))].
69 c3 != c3 | nil = c3.  [para(66(a,1),68(b,1))].
70 c3 != c3 | c3 = nil.  [copy(69),flip(b)].
71 c3 = nil.  [copy(70),xx(a)].
72 nil != nil | c3 != nil.  [para(66(a,1),28(a,1))].
73 nil != nil | nil != nil.  [para(71(a,1),72(b,1))].
74 nil != nil.  [copy(73),xx(a)].
75 $F.  [copy(74),xx(a)].

============================== end of proof ==========================
