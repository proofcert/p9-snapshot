============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n119.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Sat Jun  7 00:39:48 CDT 2014
% CPUTime    : 0.15 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 29705 was started by sandbox on n119.star.cs.uiowa.edu,
Sat Jun  7 00:39:48 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_29673_n119.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.03 (+ 0.00) seconds.
% Length of proof is 20.
% Level of proof is 5.
% Maximum clause weight is 11.000.
% Given clauses 52.


1 (all A all B unordered_pair(A,B) = unordered_pair(B,A)).  [assumption].
2 (all A all B set_union2(A,B) = set_union2(B,A)).  [assumption].
3 (all A (A = empty_set <-> (all B -in(B,A)))).  [assumption].
4 (all A all B all C (C = unordered_pair(A,B) <-> (all D (in(D,C) <-> D = A | D = B)))).  [assumption].
5 (all A all B all C (C = set_union2(A,B) <-> (all D (in(D,C) <-> in(D,A) | in(D,B))))).  [assumption].
6 (all A all B set_union2(A,A) = A).  [assumption].
7 -(all A all B all C set_union2(unordered_pair(A,B),C) != empty_set).  [assumption].
8 set_union2(A,A) = A.  [clausify(6)].
9 unordered_pair(A,B) = unordered_pair(B,A).  [clausify(1)].
10 set_union2(A,B) = set_union2(B,A).  [clausify(2)].
11 set_union2(unordered_pair(c3,c4),c5) = empty_set.  [clausify(7)].
12 set_union2(c5,unordered_pair(c3,c4)) = empty_set.  [para(10(a,1),11(a,1))].
13 empty_set = set_union2(c5,unordered_pair(c3,c4)).  [copy(12),flip(a)].
14 empty_set != A | -in(B,A).  [clausify(3)].
15 set_union2(c5,unordered_pair(c3,c4)) != A | -in(B,A).  [para(13(a,1),14(a,1))].
16 unordered_pair(A,B) != C | in(D,C) | D != A.  [clausify(4)].
17 set_union2(A,B) != C | in(D,C) | -in(D,B).  [clausify(5)].
18 -in(A,set_union2(unordered_pair(c3,c4),c5)).  [resolve(15,a,10,a)].
19 -in(A,set_union2(c5,unordered_pair(c3,c4))).  [para(10(a,1),18(a,2))].
20 in(A,unordered_pair(B,C)) | A != C.  [resolve(16,a,9,a)].
21 in(set_union2(A,A),unordered_pair(B,A)).  [resolve(20,b,8,a)].
22 in(A,unordered_pair(B,A)).  [para(8(a,1),21(a,1))].
23 in(A,unordered_pair(A,B)).  [para(9(a,1),22(a,2))].
24 set_union2(A,B) != set_union2(c5,unordered_pair(c3,c4)) | -in(C,B).  [resolve(17,b,19,a)].
25 set_union2(A,unordered_pair(B,C)) != set_union2(c5,unordered_pair(c3,c4)).  [resolve(24,b,23,a)].
26 set_union2(c5,unordered_pair(c3,c4)) != set_union2(A,unordered_pair(B,C)).  [copy(25),flip(a)].
27 $F.  [copy(26),xx(a)].

============================== end of proof ==========================
