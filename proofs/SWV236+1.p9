============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n058.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 02:00:23 CDT 2014
% CPUTime    : 0.18 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 12719 was started by sandbox on n058.star.cs.uiowa.edu,
Fri Jun  6 02:00:23 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_12687_n058.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.06 (+ 0.00) seconds: find_known_exporter.
% Length of proof is 23.
% Level of proof is 4.
% Maximum clause weight is 12.000.
% Given clauses 53.


1 (all A all B xor(A,B) = xor(B,A)).  [assumption].
2 (all A all B all C xor(A,xor(B,C)) = xor(xor(A,B),C)).  [assumption].
3 (all A xor(A,id) = A).  [assumption].
4 (all A xor(A,A) = id).  [assumption].
5 (all A all B (p(A) & p(B) -> p(crypt(xor(km,xor(kp,B)),A)))).  [assumption].
6 (all A all B (p(A) & p(B) -> p(xor(A,B)))).  [assumption].
7 -(exists A (p(crypt(xor(km,exp),A)) & p(A))).  [assumption].
8 p(kp).  [assumption].
9 p(imp).  [assumption].
10 p(exp).  [assumption].
11 xor(A,id) = A.  [clausify(3)].
12 xor(A,A) = id.  [clausify(4)].
13 xor(A,B) = xor(B,A).  [clausify(1)].
14 xor(xor(A,B),C) = xor(A,xor(B,C)).  [clausify(2)].
15 xor(C,xor(A,B)) = xor(A,xor(B,C)).  [para(13(a,1),14(a,1))].
16 xor(A,xor(B,C)) = xor(C,xor(A,B)).  [copy(15),flip(a)].
17 -p(crypt(xor(km,exp),A)) | -p(A).  [clausify(7)].
18 -p(A) | -p(B) | p(xor(A,B)).  [clausify(6)].
19 -p(A) | -p(B) | p(crypt(xor(km,xor(kp,B)),A)).  [clausify(5)].
20 -p(A) | -p(B) | p(crypt(xor(km,xor(B,kp)),A)).  [para(13(a,1),19(c,1,1,2))].
21 -p(A) | -p(B) | p(crypt(xor(B,xor(kp,km)),A)).  [para(16(a,2),20(c,1,1))].
22 -p(A) | -p(B) | p(crypt(xor(B,xor(km,kp)),A)).  [para(13(a,1),21(c,1,1,2))].
23 -p(A) | p(xor(exp,A)).  [resolve(18,a,10,a)].
24 p(xor(exp,imp)).  [resolve(23,a,9,a)].
25 -p(A) | p(xor(exp,A)).  [resolve(18,a,10,a)].
26 p(xor(exp,kp)).  [resolve(25,a,8,a)].
27 p(xor(kp,exp)).  [para(13(a,1),26(a,1))].
28 -p(crypt(xor(km,exp),xor(exp,imp))).  [resolve(17,b,24,a)].
29 -p(A) | p(crypt(xor(A,xor(km,kp)),xor(exp,imp))).  [resolve(22,a,24,a)].
30 p(crypt(xor(xor(kp,exp),xor(km,kp)),xor(exp,imp))).  [resolve(29,a,27,a)].
31 p(crypt(xor(xor(km,kp),xor(kp,exp)),xor(exp,imp))).  [para(13(a,1),30(a,1,1))].
32 p(crypt(xor(exp,xor(xor(km,kp),kp)),xor(exp,imp))).  [para(16(a,1),31(a,1,1))].
33 p(crypt(xor(exp,xor(kp,xor(km,kp))),xor(exp,imp))).  [para(13(a,1),32(a,1,1,2))].
34 p(crypt(xor(exp,xor(km,xor(kp,kp))),xor(exp,imp))).  [para(16(a,2),33(a,1,1,2))].
35 p(crypt(xor(exp,xor(km,id)),xor(exp,imp))).  [para(12(a,1),34(a,1,1,2,2))].
36 p(crypt(xor(exp,km),xor(exp,imp))).  [para(11(a,1),35(a,1,1,2))].
37 p(crypt(xor(km,exp),xor(exp,imp))).  [para(13(a,1),36(a,1,1))].
38 $F.  [resolve(28,a,37,a)].

============================== end of proof ==========================
