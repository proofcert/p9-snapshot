============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n133.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 06:51:18 CDT 2014
% CPUTime    : 0.14 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 42459 was started by sandbox on n133.star.cs.uiowa.edu,
Fri Jun  6 06:51:18 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_42427_n133.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 17.
% Level of proof is 3.
% Maximum clause weight is 15.000.
% Given clauses 32.


1 (all A -distinct_points(A,A)).  [assumption].
2 (all A all B all C (convergent_lines(A,B) -> (apart_point_and_line(C,A) | apart_point_and_line(C,B) -> distinct_points(C,intersection_point(A,B))))).  [assumption].
3 (all A all B (convergent_lines(A,B) -> distinct_lines(A,B))).  [assumption].
4 (all A all B all C all D (distinct_lines(B,C) -> apart_point_and_line(A,B) | apart_point_and_line(A,C) | unorthogonal_lines(B,D) | unorthogonal_lines(C,D))).  [assumption].
5 -(all A all B all C (convergent_lines(A,B) -> unorthogonal_lines(A,C) | unorthogonal_lines(B,C))).  [assumption].
6 convergent_lines(c1,c2).  [clausify(5)].
7 -distinct_points(A,A).  [clausify(1)].
8 -unorthogonal_lines(c1,c3).  [clausify(5)].
9 -unorthogonal_lines(c2,c3).  [clausify(5)].
10 -convergent_lines(A,B) | distinct_lines(A,B).  [clausify(3)].
11 -convergent_lines(A,B) | -apart_point_and_line(C,A) | distinct_points(C,intersection_point(A,B)).  [clausify(2)].
12 -convergent_lines(A,B) | -apart_point_and_line(C,B) | distinct_points(C,intersection_point(A,B)).  [clausify(2)].
13 -distinct_lines(A,B) | apart_point_and_line(C,A) | apart_point_and_line(C,B) | unorthogonal_lines(A,D) | unorthogonal_lines(B,D).  [clausify(4)].
14 distinct_lines(c1,c2).  [resolve(10,a,6,a)].
15 -apart_point_and_line(A,c1) | distinct_points(A,intersection_point(c1,c2)).  [resolve(11,a,6,a)].
16 -apart_point_and_line(intersection_point(c1,c2),c1).  [resolve(15,b,7,a)].
17 -apart_point_and_line(A,c2) | distinct_points(A,intersection_point(c1,c2)).  [resolve(12,a,6,a)].
18 -apart_point_and_line(intersection_point(c1,c2),c2).  [resolve(17,b,7,a)].
19 -distinct_lines(c1,A) | apart_point_and_line(intersection_point(c1,c2),A) | unorthogonal_lines(c1,B) | unorthogonal_lines(A,B).  [resolve(13,b,16,a)].
20 -distinct_lines(c1,c2) | unorthogonal_lines(c1,A) | unorthogonal_lines(c2,A).  [resolve(19,b,18,a)].
21 -distinct_lines(c1,c2) | unorthogonal_lines(c2,c3).  [resolve(20,b,8,a)].
22 -distinct_lines(c1,c2).  [resolve(21,b,9,a)].
23 $F.  [resolve(14,a,22,a)].

============================== end of proof ==========================
