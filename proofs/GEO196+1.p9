============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n096.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 05:39:03 CDT 2014
% CPUTime    : 0.12 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 54381 was started by sandbox on n096.star.cs.uiowa.edu,
Fri Jun  6 05:39:03 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_54349_n096.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 39.
% Level of proof is 10.
% Maximum clause weight is 18.000.
% Given clauses 57.


1 (all A -convergent_lines(A,A)).  [assumption].
2 (all A all B all C (convergent_lines(A,B) -> convergent_lines(A,C) | convergent_lines(B,C))).  [assumption].
3 (all A all B (convergent_lines(A,B) -> -apart_point_and_line(intersection_point(A,B),A))).  [assumption].
4 (all A all B (convergent_lines(A,B) -> -apart_point_and_line(intersection_point(A,B),B))).  [assumption].
5 (all A all B all C all D (distinct_points(A,B) & distinct_lines(C,D) -> apart_point_and_line(A,C) | apart_point_and_line(A,D) | apart_point_and_line(B,C) | apart_point_and_line(B,D))).  [assumption].
6 (all A all B all C (apart_point_and_line(A,B) -> distinct_points(A,C) | apart_point_and_line(C,B))).  [assumption].
7 (all A all B all C (convergent_lines(A,B) -> distinct_lines(B,C) | convergent_lines(A,C))).  [assumption].
8 -(all A all B all C all D (convergent_lines(A,B) & convergent_lines(C,D) & -apart_point_and_line(intersection_point(A,B),C) & -apart_point_and_line(intersection_point(A,B),D) -> -apart_point_and_line(intersection_point(C,D),A) & -apart_point_and_line(intersection_point(C,D),B))).  [assumption].
9 convergent_lines(c1,c2).  [clausify(8)].
10 convergent_lines(c3,c4).  [clausify(8)].
11 apart_point_and_line(intersection_point(c3,c4),c1) | apart_point_and_line(intersection_point(c3,c4),c2).  [clausify(8)].
12 -convergent_lines(A,A).  [clausify(1)].
13 -apart_point_and_line(intersection_point(c1,c2),c3).  [clausify(8)].
14 -apart_point_and_line(intersection_point(c1,c2),c4).  [clausify(8)].
15 -convergent_lines(A,B) | -apart_point_and_line(intersection_point(A,B),A).  [clausify(3)].
16 -convergent_lines(A,B) | -apart_point_and_line(intersection_point(A,B),B).  [clausify(4)].
17 -convergent_lines(A,B) | convergent_lines(A,C) | convergent_lines(B,C).  [clausify(2)].
18 -apart_point_and_line(A,B) | distinct_points(A,C) | apart_point_and_line(C,B).  [clausify(6)].
19 -convergent_lines(A,B) | distinct_lines(B,C) | convergent_lines(A,C).  [clausify(7)].
20 -distinct_points(A,B) | -distinct_lines(C,D) | apart_point_and_line(A,C) | apart_point_and_line(A,D) | apart_point_and_line(B,C) | apart_point_and_line(B,D).  [clausify(5)].
21 -apart_point_and_line(intersection_point(c3,c4),c3).  [resolve(15,a,10,a)].
22 -apart_point_and_line(intersection_point(c1,c2),c1).  [resolve(15,a,9,a)].
23 -apart_point_and_line(intersection_point(c3,c4),c4).  [resolve(16,a,10,a)].
24 -apart_point_and_line(intersection_point(c1,c2),c2).  [resolve(16,a,9,a)].
25 convergent_lines(c3,A) | convergent_lines(c4,A).  [resolve(17,a,10,a)].
26 distinct_points(intersection_point(c3,c4),A) | apart_point_and_line(A,c2) | apart_point_and_line(intersection_point(c3,c4),c1).  [resolve(18,a,11,b)].
27 convergent_lines(c3,A) | convergent_lines(c4,B) | convergent_lines(A,B).  [resolve(25,b,17,a)].
28 convergent_lines(c3,c3) | convergent_lines(c4,c3).  [factor(27,a,c)].
29 convergent_lines(c4,c3).  [resolve(12,a,28,a)].
30 -apart_point_and_line(intersection_point(c4,c3),c3).  [resolve(29,a,16,a)].
31 -apart_point_and_line(intersection_point(c4,c3),c4).  [resolve(29,a,15,a)].
32 convergent_lines(c3,A) | convergent_lines(A,c4).  [resolve(27,b,12,a)].
33 convergent_lines(c3,A) | distinct_lines(c4,B) | convergent_lines(A,B).  [resolve(32,b,19,a)].
34 convergent_lines(c3,c3) | distinct_lines(c4,c3).  [factor(33,a,c)].
35 distinct_lines(c4,c3).  [resolve(12,a,34,a)].
36 -distinct_points(A,B) | apart_point_and_line(A,c4) | apart_point_and_line(A,c3) | apart_point_and_line(B,c4) | apart_point_and_line(B,c3).  [resolve(20,b,35,a)].
37 -distinct_points(intersection_point(c4,c3),A) | apart_point_and_line(intersection_point(c4,c3),c3) | apart_point_and_line(A,c4) | apart_point_and_line(A,c3).  [resolve(36,b,31,a)].
38 -distinct_points(intersection_point(c4,c3),A) | apart_point_and_line(A,c4) | apart_point_and_line(A,c3).  [resolve(37,b,30,a)].
39 -distinct_points(intersection_point(c4,c3),intersection_point(c1,c2)) | apart_point_and_line(intersection_point(c1,c2),c3).  [resolve(38,b,14,a)].
40 -distinct_points(intersection_point(c4,c3),intersection_point(c1,c2)).  [resolve(39,b,13,a)].
41 -distinct_points(A,B) | apart_point_and_line(A,c4) | apart_point_and_line(A,c3) | apart_point_and_line(B,c4) | apart_point_and_line(B,c3).  [resolve(20,b,35,a)].
42 -distinct_points(intersection_point(c3,c4),A) | apart_point_and_line(intersection_point(c3,c4),c3) | apart_point_and_line(A,c4) | apart_point_and_line(A,c3).  [resolve(41,b,23,a)].
43 -distinct_points(intersection_point(c3,c4),A) | apart_point_and_line(A,c4) | apart_point_and_line(A,c3).  [resolve(42,b,21,a)].
44 -distinct_points(intersection_point(c3,c4),intersection_point(c4,c3)) | apart_point_and_line(intersection_point(c4,c3),c3).  [resolve(43,b,31,a)].
45 -distinct_points(intersection_point(c3,c4),intersection_point(c4,c3)).  [resolve(44,b,30,a)].
46 -apart_point_and_line(intersection_point(c4,c3),A) | apart_point_and_line(intersection_point(c1,c2),A).  [resolve(18,b,40,a)].
47 -apart_point_and_line(intersection_point(c4,c3),c2).  [resolve(46,b,24,a)].
48 -apart_point_and_line(intersection_point(c4,c3),A) | apart_point_and_line(intersection_point(c1,c2),A).  [resolve(18,b,40,a)].
49 -apart_point_and_line(intersection_point(c4,c3),c1).  [resolve(48,b,22,a)].
50 apart_point_and_line(intersection_point(c4,c3),c2) | apart_point_and_line(intersection_point(c3,c4),c1).  [resolve(45,a,26,a)].
51 apart_point_and_line(intersection_point(c3,c4),c1).  [resolve(47,a,50,a)].
52 -apart_point_and_line(intersection_point(c3,c4),A) | apart_point_and_line(intersection_point(c4,c3),A).  [resolve(18,b,45,a)].
53 -apart_point_and_line(intersection_point(c3,c4),c1).  [resolve(52,b,49,a)].
54 $F.  [resolve(51,a,53,a)].

============================== end of proof ==========================
