============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n081.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 20:55:38 CDT 2014
% CPUTime    : 7.02 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 34669 was started by sandbox on n081.star.cs.uiowa.edu,
Thu Jun  5 20:55:38 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_34637_n081.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 6.76 (+ 0.07) seconds.
% Length of proof is 38.
% Level of proof is 6.
% Maximum clause weight is 9.000.
% Given clauses 1092.


1 (all A all B all C (gt(A,B) & gt(B,C) -> gt(A,C))).  [assumption].
2 (all A -gt(A,A)).  [assumption].
3 (all A all B (leq(A,B) & A != B -> gt(B,A))).  [assumption].
4 (all A all B (leq(A,B) <-> gt(succ(B),A))).  [assumption].
5 (all A plus(A,n2) = succ(succ(A))).  [assumption].
6 (all A plus(n2,A) = succ(succ(A))).  [assumption].
7 (all A all B (leq(succ(A),succ(B)) <-> leq(A,B))).  [assumption].
8 -(leq(tptp_float_0_001,pv1341) & leq(n1,loopcounter) & (-leq(tptp_float_0_001,pv1341) -> leq(n0,s_best7)) & (-leq(tptp_float_0_001,pv1341) -> leq(n0,s_sworst7)) & (-leq(tptp_float_0_001,pv1341) -> leq(n0,s_worst7)) & (-leq(tptp_float_0_001,pv1341) -> leq(s_best7,n3)) & (-leq(tptp_float_0_001,pv1341) -> leq(s_sworst7,n3)) & (-leq(tptp_float_0_001,pv1341) -> leq(s_worst7,n3)) & (gt(loopcounter,n0) -> leq(n0,s_best7)) & (gt(loopcounter,n0) -> leq(n0,s_sworst7)) & (gt(loopcounter,n0) -> leq(n0,s_worst7)) & (gt(loopcounter,n0) -> leq(s_best7,n3)) & (gt(loopcounter,n0) -> leq(s_sworst7,n3)) & (gt(loopcounter,n0) -> leq(s_worst7,n3)) -> leq(n0,s_sworst7)).  [assumption].
9 -gt(A,B) | -gt(B,C) | gt(A,C).  [clausify(1)].
10 -gt(A,A).  [clausify(2)].
11 -leq(A,B) | B = A | gt(B,A).  [clausify(3)].
12 -leq(A,B) | gt(succ(B),A).  [clausify(4)].
13 leq(A,B) | -gt(succ(B),A).  [clausify(4)].
14 plus(A,n2) = succ(succ(A)).  [clausify(5)].
15 succ(succ(A)) = plus(A,n2).  [copy(14),flip(a)].
16 plus(n2,A) = succ(succ(A)).  [clausify(6)].
17 plus(n2,A) = plus(A,n2).  [para(15(a,1),16(a,2))].
18 leq(succ(A),succ(B)) | -leq(A,B).  [clausify(7)].
19 gt(n1,n0).  [assumption].
20 succ(n0) = n1.  [assumption].
21 succ(succ(n0)) = n2.  [assumption].
22 succ(n1) = n2.  [para(20(a,1),21(a,1,1))].
23 succ(succ(succ(n0))) = n3.  [assumption].
24 succ(succ(n1)) = n3.  [para(20(a,1),23(a,1,1,1))].
25 succ(n2) = n3.  [para(22(a,1),24(a,1,1))].
26 leq(n1,loopcounter).  [clausify(8)].
27 -gt(loopcounter,n0) | leq(n0,s_sworst7).  [clausify(8)].
28 -leq(n0,s_sworst7).  [clausify(8)].
29 -gt(loopcounter,n0).  [resolve(28,a,27,b)].
30 -gt(A,n1) | gt(A,n0).  [resolve(19,a,9,b)].
31 succ(n1) = plus(n0,n2).  [para(20(a,1),15(a,1,1))].
32 n2 = plus(n0,n2).  [para(22(a,1),31(a,1))].
33 plus(n0,n2) = n2.  [copy(32),flip(a)].
34 leq(succ(n1),succ(loopcounter)).  [resolve(26,a,18,b)].
35 leq(n2,succ(loopcounter)).  [para(22(a,1),34(a,1))].
36 gt(succ(loopcounter),n1).  [resolve(26,a,12,a)].
37 leq(succ(n2),succ(succ(loopcounter))).  [resolve(35,a,18,b)].
38 leq(n3,succ(succ(loopcounter))).  [para(25(a,1),37(a,1))].
39 leq(n3,plus(loopcounter,n2)).  [para(15(a,1),38(a,2))].
40 leq(n3,plus(n2,loopcounter)).  [para(17(a,2),39(a,2))].
41 gt(succ(plus(n2,loopcounter)),n3).  [resolve(40,a,12,a)].
42 gt(succ(loopcounter),n0).  [resolve(30,a,36,a)].
43 leq(n0,loopcounter).  [resolve(42,a,13,b)].
44 loopcounter = n0 | gt(loopcounter,n0).  [resolve(43,a,11,a)].
45 loopcounter = n0.  [resolve(29,a,44,b)].
46 gt(succ(plus(n2,n0)),n3).  [para(45(a,1),41(a,1,1,2))].
47 gt(succ(plus(n0,n2)),n3).  [para(17(a,1),46(a,1,1))].
48 gt(succ(n2),n3).  [para(33(a,1),47(a,1,1))].
49 gt(n3,n3).  [para(25(a,1),48(a,1))].
50 $F.  [resolve(10,a,49,a)].

============================== end of proof ==========================
