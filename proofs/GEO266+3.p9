============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n101.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 09:04:08 CDT 2014
% CPUTime    : 0.15 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 26498 was started by sandbox on n101.star.cs.uiowa.edu,
Fri Jun  6 09:04:08 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_26466_n101.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 31.
% Level of proof is 10.
% Maximum clause weight is 9.000.
% Given clauses 50.


1 (all A all B (unequally_directed_opposite_lines(A,B) <-> unequally_directed_lines(A,reverse_line(B)))).  [assumption].
2 (all A all B (equally_directed_lines(A,B) <-> -unequally_directed_lines(A,B))).  [assumption].
3 (all A equally_directed_lines(A,A)).  [assumption].
4 (all A all B all C (unequally_directed_lines(A,B) -> unequally_directed_lines(A,C) | unequally_directed_lines(B,C))).  [assumption].
5 (all A all B (unequally_directed_lines(A,B) | unequally_directed_lines(A,reverse_line(B)))).  [assumption].
6 (all A all B (unequally_directed_lines(A,B) & unequally_directed_lines(A,reverse_line(B)) -> left_convergent_lines(A,B) | left_convergent_lines(A,reverse_line(B)))).  [assumption].
7 (all A all B -(left_convergent_lines(A,B) | left_convergent_lines(A,reverse_line(B)))).  [assumption].
8 -(all A all B (unequally_directed_opposite_lines(A,B) <-> unequally_directed_opposite_lines(B,A))).  [assumption].
9 -equally_directed_lines(A,B) | -unequally_directed_lines(A,B).  [clausify(2)].
10 equally_directed_lines(A,A).  [clausify(3)].
11 unequally_directed_opposite_lines(c1,c2) | unequally_directed_opposite_lines(c2,c1).  [clausify(8)].
12 unequally_directed_lines(A,B) | unequally_directed_lines(A,reverse_line(B)).  [clausify(5)].
13 -left_convergent_lines(A,B).  [clausify(7)].
14 -unequally_directed_opposite_lines(c1,c2) | -unequally_directed_opposite_lines(c2,c1).  [clausify(8)].
15 -unequally_directed_opposite_lines(A,B) | unequally_directed_lines(A,reverse_line(B)).  [clausify(1)].
16 unequally_directed_opposite_lines(A,B) | -unequally_directed_lines(A,reverse_line(B)).  [clausify(1)].
17 -unequally_directed_lines(A,B) | unequally_directed_lines(A,C) | unequally_directed_lines(B,C).  [clausify(4)].
18 -unequally_directed_lines(A,B) | -unequally_directed_lines(A,reverse_line(B)) | left_convergent_lines(A,B) | left_convergent_lines(A,reverse_line(B)).  [clausify(6)].
19 -unequally_directed_lines(A,B) | -unequally_directed_lines(A,reverse_line(B)) | left_convergent_lines(A,reverse_line(B)).  [resolve(13,a,18,c)].
20 -unequally_directed_lines(A,B) | -unequally_directed_lines(A,reverse_line(B)).  [resolve(13,a,19,c)].
21 -unequally_directed_lines(A,A).  [resolve(9,a,10,a)].
22 unequally_directed_lines(c2,reverse_line(c1)) | unequally_directed_opposite_lines(c1,c2).  [resolve(15,a,11,b)].
23 unequally_directed_opposite_lines(A,B) | unequally_directed_lines(A,B).  [resolve(16,b,12,b)].
24 unequally_directed_lines(c2,reverse_line(c1)) | unequally_directed_lines(c1,reverse_line(c2)).  [resolve(22,b,15,a)].
25 unequally_directed_lines(c2,c1) | -unequally_directed_opposite_lines(c1,c2).  [resolve(23,a,14,b)].
26 unequally_directed_lines(c2,c1) | unequally_directed_lines(c1,c2).  [resolve(25,b,23,a)].
27 unequally_directed_lines(c1,c2) | unequally_directed_lines(c2,A) | unequally_directed_lines(c1,A).  [resolve(26,a,17,a)].
28 unequally_directed_lines(c1,c2) | unequally_directed_lines(c2,c2).  [factor(27,a,c)].
29 unequally_directed_lines(c1,c2).  [resolve(21,a,28,b)].
30 -unequally_directed_lines(c1,reverse_line(c2)).  [resolve(20,a,29,a)].
31 unequally_directed_lines(c2,reverse_line(c1)).  [resolve(30,a,24,b)].
32 -unequally_directed_lines(c2,c1).  [resolve(31,a,20,b)].
33 -unequally_directed_lines(A,B) | unequally_directed_lines(B,A).  [resolve(17,b,21,a)].
34 -unequally_directed_lines(c1,c2).  [resolve(33,b,32,a)].
35 $F.  [resolve(29,a,34,a)].

============================== end of proof ==========================
