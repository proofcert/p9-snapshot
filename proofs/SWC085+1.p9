============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n170.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 21:54:38 CDT 2014
% CPUTime    : 197.12 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 33726 was started by sandbox on n170.star.cs.uiowa.edu,
Thu Jun  5 21:54:38 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_33694_n170.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 194.26 (+ 2.66) seconds.
% Length of proof is 51.
% Level of proof is 6.
% Maximum clause weight is 18.000.
% Given clauses 16741.


1 (all A (ssList(A) -> (all B (ssList(B) -> (frontsegP(A,B) <-> (exists C (ssList(C) & app(B,C) = A))))))).  [assumption].
2 (all A (ssList(A) -> (all B (ssList(B) -> (rearsegP(A,B) <-> (exists C (ssList(C) & app(C,B) = A))))))).  [assumption].
3 (all A (ssList(A) -> (all B (ssList(B) -> (neq(A,B) <-> A != B))))).  [assumption].
4 (all A (ssList(A) -> (all B (ssList(B) -> ssList(app(A,B)))))).  [assumption].
5 (all A (ssList(A) -> rearsegP(A,A))).  [assumption].
6 (all A (ssList(A) -> segmentP(A,A))).  [assumption].
7 (all A (ssList(A) -> (all B (ssList(B) -> (all C (ssList(C) -> (all D (ssList(D) -> (segmentP(A,B) -> segmentP(app(app(C,A),D),B)))))))))).  [assumption].
8 (all A (ssList(A) -> (all B (ssList(B) -> (all C (ssList(C) -> app(app(A,B),C) = app(A,app(B,C)))))))).  [assumption].
9 -(all A (ssList(A) -> (all B (ssList(B) -> (all C (ssList(C) -> (all D (ssList(D) -> B != D | A != C | -neq(B,nil) | (exists E (ssList(E) & neq(E,nil) & segmentP(B,E) & segmentP(A,E))) | (nil != D | nil != C) & (-neq(C,nil) | -frontsegP(D,C)))))))))).  [assumption].
10 -ssList(A) | -ssList(B) | -frontsegP(A,B) | ssList(f4(A,B)).  [clausify(1)].
11 -ssList(A) | -ssList(B) | -frontsegP(A,B) | app(B,f4(A,B)) = A.  [clausify(1)].
12 -ssList(A) | -ssList(B) | -rearsegP(A,B) | ssList(f5(A,B)).  [clausify(2)].
13 -ssList(A) | -ssList(B) | -rearsegP(A,B) | app(f5(A,B),B) = A.  [clausify(2)].
14 -ssList(A) | -ssList(B) | -neq(A,B) | B != A.  [clausify(3)].
15 ssList(nil).  [assumption].
16 -ssList(A) | -ssList(B) | ssList(app(A,B)).  [clausify(4)].
17 -ssList(A) | rearsegP(A,A).  [clausify(5)].
18 -ssList(A) | segmentP(A,A).  [clausify(6)].
19 -ssList(A) | -ssList(B) | -ssList(C) | -ssList(D) | -segmentP(A,B) | segmentP(app(app(C,A),D),B).  [clausify(7)].
20 -ssList(A) | -ssList(B) | -ssList(C) | app(app(A,B),C) = app(A,app(B,C)).  [clausify(8)].
21 ssList(c3).  [clausify(9)].
22 ssList(c4).  [clausify(9)].
23 c6 = c4.  [clausify(9)].
24 c5 = c3.  [clausify(9)].
25 neq(c4,nil).  [clausify(9)].
26 -ssList(A) | -neq(A,nil) | -segmentP(c4,A) | -segmentP(c3,A).  [clausify(9)].
27 nil = c6 | neq(c5,nil).  [clausify(9)].
28 nil = c4 | neq(c5,nil).  [para(23(a,1),27(a,2))].
29 nil = c4 | neq(c3,nil).  [para(24(a,1),28(b,1))].
30 c4 = nil | neq(c3,nil).  [copy(29),flip(a)].
31 nil = c6 | frontsegP(c6,c5).  [clausify(9)].
32 nil = c4 | frontsegP(c6,c5).  [para(23(a,1),31(a,2))].
33 nil = c4 | frontsegP(c4,c5).  [para(23(a,1),32(b,1))].
34 nil = c4 | frontsegP(c4,c3).  [para(24(a,1),33(b,2))].
35 c4 = nil | frontsegP(c4,c3).  [copy(34),flip(a)].
36 -ssList(A) | -rearsegP(A,A) | ssList(f5(A,A)).  [factor(12,a,b)].
37 -ssList(A) | -rearsegP(A,A) | app(f5(A,A),A) = A.  [factor(13,a,b)].
38 -ssList(A) | ssList(app(A,A)).  [factor(16,a,b)].
39 -ssList(A) | -ssList(B) | -ssList(C) | -segmentP(A,A) | segmentP(app(app(B,A),C),A).  [factor(19,a,b)].
40 -ssList(A) | -ssList(B) | app(app(A,B),c3) = app(A,app(B,c3)).  [resolve(21,a,20,c)].
41 segmentP(c3,c3).  [resolve(21,a,18,a)].
42 rearsegP(c3,c3).  [resolve(21,a,17,a)].
43 -ssList(A) | app(app(A,A),c3) = app(A,app(A,c3)).  [factor(40,a,b)].
44 -ssList(c4) | -ssList(nil) | nil != c4.  [resolve(25,a,14,c)].
45 -ssList(c4) | -ssList(nil) | c4 != nil.  [copy(44),flip(c)].
46 -ssList(nil) | c4 != nil.  [resolve(22,a,45,a)].
47 c4 != nil.  [resolve(15,a,46,a)].
48 frontsegP(c4,c3).  [resolve(47,a,35,a)].
49 neq(c3,nil).  [resolve(47,a,30,a)].
50 -ssList(c3) | -ssList(A) | -ssList(B) | segmentP(app(app(A,c3),B),c3).  [resolve(41,a,39,d)].
51 -ssList(A) | -ssList(B) | segmentP(app(app(A,c3),B),c3).  [resolve(21,a,50,a)].
52 -ssList(c3) | app(f5(c3,c3),c3) = c3.  [resolve(42,a,37,b)].
53 app(f5(c3,c3),c3) = c3.  [resolve(21,a,52,a)].
54 -ssList(c3) | ssList(f5(c3,c3)).  [resolve(42,a,36,b)].
55 ssList(f5(c3,c3)).  [resolve(21,a,54,a)].
56 -ssList(c4) | -ssList(c3) | app(c3,f4(c4,c3)) = c4.  [resolve(48,a,11,c)].
57 -ssList(c3) | app(c3,f4(c4,c3)) = c4.  [resolve(22,a,56,a)].
58 app(c3,f4(c4,c3)) = c4.  [resolve(21,a,57,a)].
59 -ssList(c4) | -ssList(c3) | ssList(f4(c4,c3)).  [resolve(48,a,10,c)].
60 -ssList(c3) | ssList(f4(c4,c3)).  [resolve(22,a,59,a)].
61 ssList(f4(c4,c3)).  [resolve(21,a,60,a)].
62 -ssList(c3) | -segmentP(c4,c3) | -segmentP(c3,c3).  [resolve(49,a,26,b)].
63 -segmentP(c4,c3) | -segmentP(c3,c3).  [resolve(21,a,62,a)].
64 -segmentP(c4,c3).  [resolve(41,a,63,b)].
65 ssList(app(f5(c3,c3),f5(c3,c3))).  [resolve(55,a,38,a)].
66 app(app(f5(c3,c3),f5(c3,c3)),c3) = app(f5(c3,c3),app(f5(c3,c3),c3)).  [resolve(43,a,55,a)].
67 app(app(f5(c3,c3),f5(c3,c3)),c3) = app(f5(c3,c3),c3).  [para(53(a,1),66(a,2,2))].
68 app(app(f5(c3,c3),f5(c3,c3)),c3) = c3.  [para(53(a,1),67(a,2))].
69 -ssList(A) | segmentP(app(app(app(f5(c3,c3),f5(c3,c3)),c3),A),c3).  [resolve(51,a,65,a)].
70 -ssList(A) | segmentP(app(c3,A),c3).  [para(68(a,1),69(b,1,1))].
71 segmentP(app(c3,f4(c4,c3)),c3).  [resolve(70,a,61,a)].
72 segmentP(c4,c3).  [para(58(a,1),71(a,1))].
73 $F.  [resolve(64,a,72,a)].

============================== end of proof ==========================
