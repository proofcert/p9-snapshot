============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n088.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 05:05:28 CDT 2014
% CPUTime    : 0.13 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 48293 was started by sandbox on n088.star.cs.uiowa.edu,
Fri Jun  6 05:05:28 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_48261_n088.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 23.
% Level of proof is 5.
% Maximum clause weight is 18.000.
% Given clauses 40.


1 (all A -distinct_points(A,A)).  [assumption].
2 (all A all B all C (distinct_points(A,B) -> (apart_point_and_line(C,line_connecting(A,B)) -> distinct_points(C,A) & distinct_points(C,B)))).  [assumption].
3 (all A all B all C all D (distinct_points(A,B) & distinct_lines(C,D) -> apart_point_and_line(A,C) | apart_point_and_line(A,D) | apart_point_and_line(B,C) | apart_point_and_line(B,D))).  [assumption].
4 (all A all B all C (apart_point_and_line(A,B) -> distinct_lines(B,C) | apart_point_and_line(A,C))).  [assumption].
5 -(all A all B all C all D (distinct_points(A,B) & distinct_points(C,D) & -apart_point_and_line(A,line_connecting(C,D)) & -apart_point_and_line(B,line_connecting(C,D)) -> -apart_point_and_line(C,line_connecting(A,B)) & -apart_point_and_line(D,line_connecting(A,B)))).  [assumption].
6 distinct_points(c1,c2).  [clausify(5)].
7 distinct_points(c3,c4).  [clausify(5)].
8 apart_point_and_line(c3,line_connecting(c1,c2)) | apart_point_and_line(c4,line_connecting(c1,c2)).  [clausify(5)].
9 -distinct_points(A,A).  [clausify(1)].
10 -apart_point_and_line(c1,line_connecting(c3,c4)).  [clausify(5)].
11 -apart_point_and_line(c2,line_connecting(c3,c4)).  [clausify(5)].
12 -apart_point_and_line(A,B) | distinct_lines(B,C) | apart_point_and_line(A,C).  [clausify(4)].
13 -distinct_points(A,B) | -apart_point_and_line(C,line_connecting(A,B)) | distinct_points(C,A).  [clausify(2)].
14 -distinct_points(A,B) | -apart_point_and_line(C,line_connecting(A,B)) | distinct_points(C,B).  [clausify(2)].
15 -distinct_points(A,B) | -distinct_lines(C,D) | apart_point_and_line(A,C) | apart_point_and_line(A,D) | apart_point_and_line(B,C) | apart_point_and_line(B,D).  [clausify(3)].
16 distinct_lines(line_connecting(c1,c2),A) | apart_point_and_line(c4,A) | apart_point_and_line(c3,line_connecting(c1,c2)).  [resolve(12,a,8,b)].
17 -apart_point_and_line(A,line_connecting(c3,c4)) | distinct_points(A,c3).  [resolve(13,a,7,a)].
18 -apart_point_and_line(c3,line_connecting(c3,c4)).  [resolve(17,b,9,a)].
19 -apart_point_and_line(A,line_connecting(c1,c2)) | distinct_points(A,c1).  [resolve(13,a,6,a)].
20 -apart_point_and_line(c1,line_connecting(c1,c2)).  [resolve(19,b,9,a)].
21 -apart_point_and_line(A,line_connecting(c3,c4)) | distinct_points(A,c4).  [resolve(14,a,7,a)].
22 -apart_point_and_line(c4,line_connecting(c3,c4)).  [resolve(21,b,9,a)].
23 -apart_point_and_line(A,line_connecting(c1,c2)) | distinct_points(A,c2).  [resolve(14,a,6,a)].
24 -apart_point_and_line(c2,line_connecting(c1,c2)).  [resolve(23,b,9,a)].
25 -distinct_lines(A,B) | apart_point_and_line(c1,A) | apart_point_and_line(c1,B) | apart_point_and_line(c2,A) | apart_point_and_line(c2,B).  [resolve(15,a,6,a)].
26 -distinct_lines(line_connecting(c1,c2),A) | apart_point_and_line(c1,A) | apart_point_and_line(c2,line_connecting(c1,c2)) | apart_point_and_line(c2,A).  [resolve(25,b,20,a)].
27 -distinct_lines(line_connecting(c1,c2),line_connecting(c3,c4)) | apart_point_and_line(c2,line_connecting(c1,c2)) | apart_point_and_line(c2,line_connecting(c3,c4)).  [resolve(26,b,10,a)].
28 -distinct_lines(line_connecting(c1,c2),line_connecting(c3,c4)) | apart_point_and_line(c2,line_connecting(c3,c4)).  [resolve(27,b,24,a)].
29 -distinct_lines(line_connecting(c1,c2),line_connecting(c3,c4)).  [resolve(28,b,11,a)].
30 apart_point_and_line(c4,line_connecting(c3,c4)) | apart_point_and_line(c3,line_connecting(c1,c2)).  [resolve(29,a,16,a)].
31 apart_point_and_line(c3,line_connecting(c1,c2)).  [resolve(22,a,30,a)].
32 -apart_point_and_line(A,line_connecting(c1,c2)) | apart_point_and_line(A,line_connecting(c3,c4)).  [resolve(12,b,29,a)].
33 -apart_point_and_line(c3,line_connecting(c1,c2)).  [resolve(32,b,18,a)].
34 $F.  [resolve(31,a,33,a)].

============================== end of proof ==========================
