============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n061.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 08:03:18 CDT 2014
% CPUTime    : 0.15 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 41301 was started by sandbox on n061.star.cs.uiowa.edu,
Fri Jun  6 08:03:18 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_41269_n061.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 11.
% Level of proof is 4.
% Maximum clause weight is 17.000.
% Given clauses 48.


1 (all A all B all C (-ok(triple(A,B,C)) -> -ok(im_succ_cpq(triple(A,B,C))))).  [assumption].
2 (all A all B all C (-check_cpq(triple(A,B,C)) -> -check_cpq(im_succ_cpq(triple(A,B,C))) | -ok(im_succ_cpq(triple(A,B,C))))).  [assumption].
3 -(all A all B all C (-check_cpq(triple(A,B,C)) | -ok(triple(A,B,C)) -> -check_cpq(im_succ_cpq(triple(A,B,C))) | -ok(im_succ_cpq(triple(A,B,C))))).  [assumption].
4 check_cpq(im_succ_cpq(triple(c1,c2,c3))).  [clausify(3)].
5 ok(im_succ_cpq(triple(c1,c2,c3))).  [clausify(3)].
6 -check_cpq(triple(c1,c2,c3)) | -ok(triple(c1,c2,c3)).  [clausify(3)].
7 ok(triple(A,B,C)) | -ok(im_succ_cpq(triple(A,B,C))).  [clausify(1)].
8 check_cpq(triple(A,B,C)) | -check_cpq(im_succ_cpq(triple(A,B,C))) | -ok(im_succ_cpq(triple(A,B,C))).  [clausify(2)].
9 ok(triple(c1,c2,c3)).  [resolve(7,b,5,a)].
10 -check_cpq(triple(c1,c2,c3)).  [resolve(9,a,6,b)].
11 check_cpq(triple(c1,c2,c3)) | -check_cpq(im_succ_cpq(triple(c1,c2,c3))).  [resolve(8,c,5,a)].
12 -check_cpq(im_succ_cpq(triple(c1,c2,c3))).  [resolve(10,a,11,a)].
13 $F.  [resolve(4,a,12,a)].

============================== end of proof ==========================
