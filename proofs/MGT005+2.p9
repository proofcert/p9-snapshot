============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n050.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Thu Jun  5 13:27:38 CDT 2014
% CPUTime    : 1.14 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 57328 was started by sandbox on n050.star.cs.uiowa.edu,
Thu Jun  5 13:27:38 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_57296_n050.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 1.00 (+ 0.00) seconds.
% Length of proof is 47.
% Level of proof is 10.
% Maximum clause weight is 69.000.
% Given clauses 1392.


1 (all A all B all C all D (organization(A,C) & organization(A,D) & greater(B,C) & greater(D,B) -> organization(A,B))).  [assumption].
2 (all A all B all C (reorganization(A,B,C) -> greater(C,B))).  [assumption].
3 (all A all B all C all D all E all F all V6 all V7 all V8 (organization(A,V6) & organization(B,V6) & organization(B,V8) & class(A,D,V6) & class(B,D,V6) & reorganization(A,V6,V7) & reorganization(B,V6,V8) & reorganization_type(A,C,V6) & reorganization_type(B,C,V6) & complexity(A,E,V6) & complexity(B,F,V6) & greater(F,E) -> greater(V8,V7))).  [assumption].
4 (all A all B all C all D all E all F all V6 all V7 all V8 all V9 all V10 all V11 (organization(A,V9) & organization(B,V9) & organization(A,V10) & organization(B,V10) & class(A,D,V9) & class(B,D,V9) & survival_chance(A,E,V9) & survival_chance(B,E,V9) & reorganization(A,V9,V10) & reorganization(B,V9,V11) & reorganization_type(A,C,V9) & reorganization_type(B,C,V9) & survival_chance(A,F,V10) & survival_chance(B,V6,V10) & complexity(A,V7,V9) & complexity(B,V8,V9) & greater(V8,V7) -> greater(F,V6) | F = V6)).  [assumption].
5 -(all A all B all C all D all E all F all V6 all V7 all V8 all V9 all V10 all V11 all V12 (organization(A,V10) & organization(B,V10) & organization(A,V12) & organization(B,V12) & class(A,D,V10) & class(B,D,V10) & survival_chance(A,E,V10) & survival_chance(B,E,V10) & reorganization(A,V10,V11) & reorganization(B,V10,V12) & reorganization_type(A,C,V10) & reorganization_type(B,C,V10) & reorganization_free(A,V11,V12) & survival_chance(A,F,V9) & survival_chance(B,V6,V9) & complexity(A,V7,V10) & complexity(B,V8,V10) & greater(V8,V7) & (V9 = V12 -> greater(F,V6)) -> (V9 = V11 -> greater(F,V6) | F = V6))).  [assumption].
6 organization(c1,c11).  [clausify(5)].
7 organization(c2,c11).  [clausify(5)].
8 organization(c1,c13).  [clausify(5)].
9 organization(c2,c13).  [clausify(5)].
10 greater(c9,c8).  [clausify(5)].
11 c12 = c10.  [clausify(5)].
12 class(c1,c4,c11).  [clausify(5)].
13 class(c2,c4,c11).  [clausify(5)].
14 survival_chance(c1,c5,c11).  [clausify(5)].
15 survival_chance(c2,c5,c11).  [clausify(5)].
16 reorganization(c1,c11,c12).  [clausify(5)].
17 reorganization(c1,c11,c10).  [para(11(a,1),16(a,3))].
18 reorganization(c2,c11,c13).  [clausify(5)].
19 reorganization_type(c1,c3,c11).  [clausify(5)].
20 reorganization_type(c2,c3,c11).  [clausify(5)].
21 survival_chance(c1,c6,c10).  [clausify(5)].
22 survival_chance(c2,c7,c10).  [clausify(5)].
23 complexity(c1,c8,c11).  [clausify(5)].
24 complexity(c2,c9,c11).  [clausify(5)].
25 -greater(c6,c7).  [clausify(5)].
26 c7 != c6.  [clausify(5)].
27 -reorganization(A,B,C) | greater(C,B).  [clausify(2)].
28 -organization(A,B) | -organization(A,C) | -greater(D,B) | -greater(C,D) | organization(A,D).  [clausify(1)].
29 -organization(A,B) | -organization(C,B) | -organization(C,D) | -class(A,E,B) | -class(C,E,B) | -reorganization(A,B,F) | -reorganization(C,B,D) | -reorganization_type(A,V6,B) | -reorganization_type(C,V6,B) | -complexity(A,V7,B) | -complexity(C,V8,B) | -greater(V8,V7) | greater(D,F).  [clausify(3)].
30 -organization(A,B) | -organization(C,B) | -organization(A,D) | -organization(C,D) | -class(A,E,B) | -class(C,E,B) | -survival_chance(A,F,B) | -survival_chance(C,F,B) | -reorganization(A,B,D) | -reorganization(C,B,V6) | -reorganization_type(A,V7,B) | -reorganization_type(C,V7,B) | -survival_chance(A,V8,D) | -survival_chance(C,V9,D) | -complexity(A,V10,B) | -complexity(C,V11,B) | -greater(V11,V10) | greater(V8,V9) | V9 = V8.  [clausify(4)].
31 greater(c10,c11).  [resolve(27,a,17,a)].
32 -organization(c2,A) | -greater(B,c11) | -greater(A,B) | organization(c2,B).  [resolve(28,a,7,a)].
33 -organization(c1,A) | -greater(B,c11) | -greater(A,B) | organization(c1,B).  [resolve(28,a,6,a)].
34 -organization(c1,c11) | -organization(A,c11) | -organization(A,B) | -class(c1,C,c11) | -class(A,C,c11) | -reorganization(c1,c11,D) | -reorganization(A,c11,B) | -reorganization_type(A,c3,c11) | -complexity(c1,E,c11) | -complexity(A,F,c11) | -greater(F,E) | greater(B,D).  [resolve(29,h,19,a)].
35 -organization(A,c11) | -organization(A,B) | -class(c1,C,c11) | -class(A,C,c11) | -reorganization(c1,c11,D) | -reorganization(A,c11,B) | -reorganization_type(A,c3,c11) | -complexity(c1,E,c11) | -complexity(A,F,c11) | -greater(F,E) | greater(B,D).  [resolve(6,a,34,a)].
36 -greater(A,c11) | -greater(c13,A) | organization(c2,A).  [resolve(32,a,9,a)].
37 -greater(c13,c10) | organization(c2,c10).  [resolve(36,a,31,a)].
38 -greater(A,c11) | -greater(c13,A) | organization(c1,A).  [resolve(33,a,8,a)].
39 -greater(c13,c10) | organization(c1,c10).  [resolve(38,a,31,a)].
40 -organization(c2,c11) | -organization(c2,A) | -class(c1,B,c11) | -class(c2,B,c11) | -reorganization(c1,c11,C) | -reorganization(c2,c11,A) | -complexity(c1,D,c11) | -complexity(c2,E,c11) | -greater(E,D) | greater(A,C).  [resolve(35,g,20,a)].
41 -organization(c2,A) | -class(c1,B,c11) | -class(c2,B,c11) | -reorganization(c1,c11,C) | -reorganization(c2,c11,A) | -complexity(c1,D,c11) | -complexity(c2,E,c11) | -greater(E,D) | greater(A,C).  [resolve(7,a,40,a)].
42 -organization(c2,A) | -class(c1,B,c11) | -class(c2,B,c11) | -reorganization(c1,c11,C) | -reorganization(c2,c11,A) | -complexity(c2,D,c11) | -greater(D,c8) | greater(A,C).  [resolve(41,f,23,a)].
43 -organization(c2,A) | -class(c1,B,c11) | -class(c2,B,c11) | -reorganization(c1,c11,C) | -reorganization(c2,c11,A) | -greater(c9,c8) | greater(A,C).  [resolve(42,f,24,a)].
44 -organization(c2,A) | -class(c1,B,c11) | -class(c2,B,c11) | -reorganization(c1,c11,C) | -reorganization(c2,c11,A) | greater(A,C).  [resolve(10,a,43,f)].
45 -organization(c2,A) | -class(c1,c4,c11) | -reorganization(c1,c11,B) | -reorganization(c2,c11,A) | greater(A,B).  [resolve(44,c,13,a)].
46 -organization(c2,A) | -reorganization(c1,c11,B) | -reorganization(c2,c11,A) | greater(A,B).  [resolve(12,a,45,b)].
47 -organization(c2,c13) | -reorganization(c1,c11,A) | greater(c13,A).  [resolve(46,c,18,a)].
48 -reorganization(c1,c11,A) | greater(c13,A).  [resolve(9,a,47,a)].
49 greater(c13,c10).  [resolve(48,a,17,a)].
50 organization(c1,c10).  [resolve(49,a,39,a)].
51 organization(c2,c10).  [resolve(49,a,37,a)].
52 -organization(A,c11) | -organization(c1,B) | -organization(A,B) | -class(c1,C,c11) | -class(A,C,c11) | -survival_chance(c1,D,c11) | -survival_chance(A,D,c11) | -reorganization(c1,c11,B) | -reorganization(A,c11,E) | -reorganization_type(c1,F,c11) | -reorganization_type(A,F,c11) | -survival_chance(c1,V6,B) | -survival_chance(A,V7,B) | -complexity(c1,V8,c11) | -complexity(A,V9,c11) | -greater(V9,V8) | greater(V6,V7) | V7 = V6.  [resolve(30,a,6,a)].
53 -organization(c1,A) | -organization(c2,A) | -class(c1,B,c11) | -class(c2,B,c11) | -survival_chance(c1,C,c11) | -survival_chance(c2,C,c11) | -reorganization(c1,c11,A) | -reorganization(c2,c11,D) | -reorganization_type(c1,E,c11) | -reorganization_type(c2,E,c11) | -survival_chance(c1,F,A) | -survival_chance(c2,V6,A) | -complexity(c1,V7,c11) | -complexity(c2,V8,c11) | -greater(V8,V7) | greater(F,V6) | V6 = F.  [resolve(52,a,7,a)].
54 -organization(c2,c10) | -class(c1,A,c11) | -class(c2,A,c11) | -survival_chance(c1,B,c11) | -survival_chance(c2,B,c11) | -reorganization(c1,c11,c10) | -reorganization(c2,c11,C) | -reorganization_type(c1,D,c11) | -reorganization_type(c2,D,c11) | -survival_chance(c1,E,c10) | -survival_chance(c2,F,c10) | -complexity(c1,V6,c11) | -complexity(c2,V7,c11) | -greater(V7,V6) | greater(E,F) | F = E.  [resolve(53,a,50,a)].
55 -organization(c2,c10) | -class(c2,c4,c11) | -survival_chance(c1,A,c11) | -survival_chance(c2,A,c11) | -reorganization(c1,c11,c10) | -reorganization(c2,c11,B) | -reorganization_type(c1,C,c11) | -reorganization_type(c2,C,c11) | -survival_chance(c1,D,c10) | -survival_chance(c2,E,c10) | -complexity(c1,F,c11) | -complexity(c2,V6,c11) | -greater(V6,F) | greater(D,E) | E = D.  [resolve(54,b,12,a)].
56 -organization(c2,c10) | -survival_chance(c1,A,c11) | -survival_chance(c2,A,c11) | -reorganization(c1,c11,c10) | -reorganization(c2,c11,B) | -reorganization_type(c1,C,c11) | -reorganization_type(c2,C,c11) | -survival_chance(c1,D,c10) | -survival_chance(c2,E,c10) | -complexity(c1,F,c11) | -complexity(c2,V6,c11) | -greater(V6,F) | greater(D,E) | E = D.  [resolve(55,b,13,a)].
57 -organization(c2,c10) | -survival_chance(c2,c5,c11) | -reorganization(c1,c11,c10) | -reorganization(c2,c11,A) | -reorganization_type(c1,B,c11) | -reorganization_type(c2,B,c11) | -survival_chance(c1,C,c10) | -survival_chance(c2,D,c10) | -complexity(c1,E,c11) | -complexity(c2,F,c11) | -greater(F,E) | greater(C,D) | D = C.  [resolve(56,b,14,a)].
58 -organization(c2,c10) | -reorganization(c1,c11,c10) | -reorganization(c2,c11,A) | -reorganization_type(c1,B,c11) | -reorganization_type(c2,B,c11) | -survival_chance(c1,C,c10) | -survival_chance(c2,D,c10) | -complexity(c1,E,c11) | -complexity(c2,F,c11) | -greater(F,E) | greater(C,D) | D = C.  [resolve(57,b,15,a)].
59 -organization(c2,c10) | -reorganization(c2,c11,A) | -reorganization_type(c1,B,c11) | -reorganization_type(c2,B,c11) | -survival_chance(c1,C,c10) | -survival_chance(c2,D,c10) | -complexity(c1,E,c11) | -complexity(c2,F,c11) | -greater(F,E) | greater(C,D) | D = C.  [resolve(58,b,17,a)].
60 -organization(c2,c10) | -reorganization_type(c1,A,c11) | -reorganization_type(c2,A,c11) | -survival_chance(c1,B,c10) | -survival_chance(c2,C,c10) | -complexity(c1,D,c11) | -complexity(c2,E,c11) | -greater(E,D) | greater(B,C) | C = B.  [resolve(59,b,18,a)].
61 -organization(c2,c10) | -reorganization_type(c2,c3,c11) | -survival_chance(c1,A,c10) | -survival_chance(c2,B,c10) | -complexity(c1,C,c11) | -complexity(c2,D,c11) | -greater(D,C) | greater(A,B) | B = A.  [resolve(60,b,19,a)].
62 -organization(c2,c10) | -survival_chance(c1,A,c10) | -survival_chance(c2,B,c10) | -complexity(c1,C,c11) | -complexity(c2,D,c11) | -greater(D,C) | greater(A,B) | B = A.  [resolve(61,b,20,a)].
63 -organization(c2,c10) | -survival_chance(c2,A,c10) | -complexity(c1,B,c11) | -complexity(c2,C,c11) | -greater(C,B) | greater(c6,A) | A = c6.  [resolve(62,b,21,a)].
64 -organization(c2,c10) | -complexity(c1,A,c11) | -complexity(c2,B,c11) | -greater(B,A) | greater(c6,c7) | c7 = c6.  [resolve(63,b,22,a)].
65 -organization(c2,c10) | -complexity(c2,A,c11) | -greater(A,c8) | greater(c6,c7) | c7 = c6.  [resolve(64,b,23,a)].
66 -organization(c2,c10) | -greater(c9,c8) | greater(c6,c7) | c7 = c6.  [resolve(65,b,24,a)].
67 -organization(c2,c10) | greater(c6,c7) | c7 = c6.  [resolve(66,b,10,a)].
68 -organization(c2,c10) | c7 = c6.  [resolve(67,b,25,a)].
69 -organization(c2,c10).  [resolve(68,b,26,a)].
70 $F.  [resolve(51,a,69,a)].

============================== end of proof ==========================
