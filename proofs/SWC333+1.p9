============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n062.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 10:34:03 CDT 2014
% CPUTime    : 0.65 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 19423 was started by sandbox on n062.star.cs.uiowa.edu,
Fri Jun  6 10:34:03 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_19391_n062.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.43 (+ 0.00) seconds.
% Length of proof is 20.
% Level of proof is 4.
% Maximum clause weight is 13.000.
% Given clauses 144.


1 -(all A (ssList(A) -> (all B (ssList(B) -> (all C (ssList(C) -> (all D (ssList(D) -> B != D | A != C | -segmentP(D,C) | -totalorderedP(C) | (exists E (ssList(E) & neq(C,E) & segmentP(D,E) & segmentP(E,C) & totalorderedP(E))) | (all F (ssList(F) -> -neq(A,F) | -segmentP(B,F) | -segmentP(F,A) | -totalorderedP(F))) & segmentP(B,A) & totalorderedP(A))))))))).  [assumption].
2 c6 = c4.  [clausify(1)].
3 c5 = c3.  [clausify(1)].
4 segmentP(c6,c5).  [clausify(1)].
5 segmentP(c4,c5).  [para(2(a,1),4(a,1))].
6 segmentP(c4,c3).  [para(3(a,1),5(a,2))].
7 totalorderedP(c5).  [clausify(1)].
8 totalorderedP(c3).  [para(3(a,1),7(a,1))].
9 -ssList(A) | -neq(c5,A) | -segmentP(c6,A) | -segmentP(A,c5) | -totalorderedP(A).  [clausify(1)].
10 -ssList(A) | -neq(c3,A) | -segmentP(c6,A) | -segmentP(A,c5) | -totalorderedP(A).  [para(3(a,1),9(b,1))].
11 -ssList(A) | -neq(c3,A) | -segmentP(c4,A) | -segmentP(A,c5) | -totalorderedP(A).  [para(2(a,1),10(c,1))].
12 -ssList(A) | -neq(c3,A) | -segmentP(c4,A) | -segmentP(A,c3) | -totalorderedP(A).  [para(3(a,1),11(d,2))].
13 ssList(c7) | -segmentP(c4,c3) | -totalorderedP(c3).  [clausify(1)].
14 ssList(c7) | -totalorderedP(c3).  [resolve(6,a,13,b)].
15 ssList(c7).  [resolve(8,a,14,b)].
16 neq(c3,c7) | -segmentP(c4,c3) | -totalorderedP(c3).  [clausify(1)].
17 neq(c3,c7) | -totalorderedP(c3).  [resolve(6,a,16,b)].
18 neq(c3,c7).  [resolve(8,a,17,b)].
19 segmentP(c4,c7) | -segmentP(c4,c3) | -totalorderedP(c3).  [clausify(1)].
20 segmentP(c4,c7) | -totalorderedP(c3).  [resolve(6,a,19,b)].
21 segmentP(c4,c7).  [resolve(8,a,20,b)].
22 segmentP(c7,c3) | -segmentP(c4,c3) | -totalorderedP(c3).  [clausify(1)].
23 segmentP(c7,c3) | -totalorderedP(c3).  [resolve(6,a,22,b)].
24 segmentP(c7,c3).  [resolve(8,a,23,b)].
25 totalorderedP(c7) | -segmentP(c4,c3) | -totalorderedP(c3).  [clausify(1)].
26 totalorderedP(c7) | -totalorderedP(c3).  [resolve(6,a,25,b)].
27 totalorderedP(c7).  [resolve(8,a,26,b)].
28 -ssList(c7) | -segmentP(c4,c7) | -segmentP(c7,c3) | -totalorderedP(c7).  [resolve(18,a,12,b)].
29 -segmentP(c4,c7) | -segmentP(c7,c3) | -totalorderedP(c7).  [resolve(15,a,28,a)].
30 -segmentP(c7,c3) | -totalorderedP(c7).  [resolve(21,a,29,a)].
31 -totalorderedP(c7).  [resolve(24,a,30,a)].
32 $F.  [resolve(27,a,31,a)].

============================== end of proof ==========================
