============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n114.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 07:21:08 CDT 2014
% CPUTime    : 0.17 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 56568 was started by sandbox on n114.star.cs.uiowa.edu,
Fri Jun  6 07:21:08 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_56536_n114.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 0.04 (+ 0.00) seconds.
% Length of proof is 36.
% Level of proof is 9.
% Maximum clause weight is 15.000.
% Given clauses 90.


1 (all A -distinct_lines(A,A)).  [assumption].
2 (all A -convergent_lines(A,A)).  [assumption].
3 (all A all B all C (distinct_lines(A,B) -> distinct_lines(A,C) | distinct_lines(B,C))).  [assumption].
4 (all A all B all C (convergent_lines(A,B) -> convergent_lines(A,C) | convergent_lines(B,C))).  [assumption].
5 (all A all B -convergent_lines(parallel_through_point(B,A),B)).  [assumption].
6 (all A all B -apart_point_and_line(A,parallel_through_point(B,A))).  [assumption].
7 (all A all B (convergent_lines(A,B) | unorthogonal_lines(A,B))).  [assumption].
8 (all A all B all C (convergent_lines(A,B) & unorthogonal_lines(A,B) -> convergent_lines(A,C) & unorthogonal_lines(A,C) | convergent_lines(B,C) & unorthogonal_lines(B,C))).  [assumption].
9 (all A all B -unorthogonal_lines(orthogonal_through_point(B,A),B)).  [assumption].
10 (all A all B -apart_point_and_line(A,orthogonal_through_point(B,A))).  [assumption].
11 (all A all B all C all D (distinct_lines(B,C) -> apart_point_and_line(A,B) | apart_point_and_line(A,C) | unorthogonal_lines(B,D) | unorthogonal_lines(C,D))).  [assumption].
12 -(all A all B -distinct_lines(parallel_through_point(B,A),orthogonal_through_point(orthogonal_through_point(B,A),A))).  [assumption].
13 convergent_lines(A,B) | unorthogonal_lines(A,B).  [clausify(7)].
14 distinct_lines(parallel_through_point(c2,c1),orthogonal_through_point(orthogonal_through_point(c2,c1),c1)).  [clausify(12)].
15 -distinct_lines(A,A).  [clausify(1)].
16 -convergent_lines(A,A).  [clausify(2)].
17 -convergent_lines(parallel_through_point(A,B),A).  [clausify(5)].
18 -apart_point_and_line(A,parallel_through_point(B,A)).  [clausify(6)].
19 -unorthogonal_lines(orthogonal_through_point(A,B),A).  [clausify(9)].
20 -apart_point_and_line(A,orthogonal_through_point(B,A)).  [clausify(10)].
21 -distinct_lines(A,B) | distinct_lines(A,C) | distinct_lines(B,C).  [clausify(3)].
22 -convergent_lines(A,B) | convergent_lines(A,C) | convergent_lines(B,C).  [clausify(4)].
23 -convergent_lines(A,B) | -unorthogonal_lines(A,B) | convergent_lines(A,C) | unorthogonal_lines(B,C).  [clausify(8)].
24 -distinct_lines(A,B) | apart_point_and_line(C,A) | apart_point_and_line(C,B) | unorthogonal_lines(A,D) | unorthogonal_lines(B,D).  [clausify(11)].
25 convergent_lines(orthogonal_through_point(A,B),A).  [resolve(19,a,13,b)].
26 distinct_lines(parallel_through_point(c2,c1),A) | distinct_lines(orthogonal_through_point(orthogonal_through_point(c2,c1),c1),A).  [resolve(21,a,14,a)].
27 -convergent_lines(A,B) | convergent_lines(B,A).  [resolve(22,b,16,a)].
28 -convergent_lines(A,parallel_through_point(A,B)).  [resolve(27,b,17,a)].
29 convergent_lines(orthogonal_through_point(A,B),C) | convergent_lines(A,C).  [resolve(25,a,22,a)].
30 convergent_lines(A,B) | convergent_lines(orthogonal_through_point(A,C),D) | convergent_lines(B,D).  [resolve(29,a,22,a)].
31 distinct_lines(parallel_through_point(c2,c1),A) | distinct_lines(orthogonal_through_point(orthogonal_through_point(c2,c1),c1),B) | distinct_lines(A,B).  [resolve(26,b,21,a)].
32 distinct_lines(parallel_through_point(c2,c1),parallel_through_point(c2,c1)) | distinct_lines(orthogonal_through_point(orthogonal_through_point(c2,c1),c1),parallel_through_point(c2,c1)).  [factor(31,a,c)].
33 distinct_lines(orthogonal_through_point(orthogonal_through_point(c2,c1),c1),parallel_through_point(c2,c1)).  [resolve(15,a,32,a)].
34 convergent_lines(orthogonal_through_point(A,B),C) | convergent_lines(parallel_through_point(A,D),C).  [resolve(30,a,28,a)].
35 convergent_lines(parallel_through_point(A,B),orthogonal_through_point(A,C)).  [resolve(34,a,16,a)].
36 -unorthogonal_lines(parallel_through_point(A,B),orthogonal_through_point(A,C)) | convergent_lines(parallel_through_point(A,B),D) | unorthogonal_lines(orthogonal_through_point(A,C),D).  [resolve(23,a,35,a)].
37 -unorthogonal_lines(parallel_through_point(A,B),orthogonal_through_point(A,C)) | unorthogonal_lines(orthogonal_through_point(A,C),A).  [resolve(36,b,17,a)].
38 -unorthogonal_lines(parallel_through_point(A,B),orthogonal_through_point(A,C)).  [resolve(37,b,19,a)].
39 -distinct_lines(orthogonal_through_point(A,B),C) | apart_point_and_line(B,C) | unorthogonal_lines(orthogonal_through_point(A,B),D) | unorthogonal_lines(C,D).  [resolve(24,b,20,a)].
40 -distinct_lines(orthogonal_through_point(A,B),parallel_through_point(C,B)) | unorthogonal_lines(orthogonal_through_point(A,B),D) | unorthogonal_lines(parallel_through_point(C,B),D).  [resolve(39,b,18,a)].
41 -distinct_lines(orthogonal_through_point(A,B),parallel_through_point(C,B)) | unorthogonal_lines(parallel_through_point(C,B),A).  [resolve(40,b,19,a)].
42 -distinct_lines(orthogonal_through_point(orthogonal_through_point(A,B),C),parallel_through_point(A,C)).  [resolve(41,b,38,a)].
43 $F.  [resolve(42,a,33,a)].

============================== end of proof ==========================
