============================== prooftrans ============================
% Command    : vampire_rel --proof tptp --output_axiom_names on --mode casc -t %d %s
% Computer   : n125.star.cs.uiowa.edu
% Model      : x86_64 x86_64
% CPU        : Intel(R) Xeon(R) CPU E5-2609 0 @ 2.40GHz
% Memory     : 32286.75MB
% OS         : Linux 2.6.32-431.11.2.el6.x86_64
% CPULimit   : 300
% DateTime   : Fri Jun  6 07:35:58 CDT 2014
% CPUTime    : 6.77 
============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 48442 was started by sandbox on n125.star.cs.uiowa.edu,
Fri Jun  6 07:35:58 2014
The command was "./prover9 -t 300 -f /tmp/Prover9_48410_n125.star.cs.uiowa.edu".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% SZS status Theorem
% SZS output start Refutation
% Proof 1 at 6.30 (+ 0.17) seconds.
% Length of proof is 24.
% Level of proof is 6.
% Maximum clause weight is 23.000.
% Given clauses 2869.


1 (all A all B all C (aInteger0(A) & aInteger0(B) & aInteger0(C) & C != sz00 -> (sdteqdtlpzmzozddtrp0(A,B,C) -> sdteqdtlpzmzozddtrp0(B,A,C)))).  [assumption].
2 (all A all B all C all D (aInteger0(A) & aInteger0(B) & aInteger0(C) & C != sz00 & aInteger0(D) -> (sdteqdtlpzmzozddtrp0(A,B,C) & sdteqdtlpzmzozddtrp0(B,D,C) -> sdteqdtlpzmzozddtrp0(A,D,C)))).  [assumption].
3 -(aSet0(szAzrzSzezqlpdtcmdtrp0(xa,xq)) & (all A ((aElementOf0(A,szAzrzSzezqlpdtcmdtrp0(xa,xq)) -> aInteger0(A) & (exists B (aInteger0(B) & sdtasdt0(xq,B) = sdtpldt0(A,smndt0(xa)))) & aDivisorOf0(xq,sdtpldt0(A,smndt0(xa))) & sdteqdtlpzmzozddtrp0(A,xa,xq)) & (aInteger0(A) & ((exists B (aInteger0(B) & sdtasdt0(xq,B) = sdtpldt0(A,smndt0(xa)))) | aDivisorOf0(xq,sdtpldt0(A,smndt0(xa))) | sdteqdtlpzmzozddtrp0(A,xa,xq)) -> aElementOf0(A,szAzrzSzezqlpdtcmdtrp0(xa,xq))))) & -aElementOf0(xb,szAzrzSzezqlpdtcmdtrp0(xa,xq)) & aElementOf0(xb,stldt0(szAzrzSzezqlpdtcmdtrp0(xa,xq))) & (exists A (aInteger0(A) & sdtasdt0(xq,A) = sdtpldt0(xc,smndt0(xb)))) & aDivisorOf0(xq,sdtpldt0(xc,smndt0(xb))) & sdteqdtlpzmzozddtrp0(xc,xb,xq) -> (aSet0(szAzrzSzezqlpdtcmdtrp0(xa,xq)) & (all A ((aElementOf0(A,szAzrzSzezqlpdtcmdtrp0(xa,xq)) -> aInteger0(A) & (exists B (aInteger0(B) & sdtasdt0(xq,B) = sdtpldt0(A,smndt0(xa)))) & aDivisorOf0(xq,sdtpldt0(A,smndt0(xa))) & sdteqdtlpzmzozddtrp0(A,xa,xq)) & (aInteger0(A) & ((exists B (aInteger0(B) & sdtasdt0(xq,B) = sdtpldt0(A,smndt0(xa)))) | aDivisorOf0(xq,sdtpldt0(A,smndt0(xa))) | sdteqdtlpzmzozddtrp0(A,xa,xq)) -> aElementOf0(A,szAzrzSzezqlpdtcmdtrp0(xa,xq))))) -> -aElementOf0(xc,szAzrzSzezqlpdtcmdtrp0(xa,xq)) | aElementOf0(xc,stldt0(szAzrzSzezqlpdtcmdtrp0(xa,xq))))).  [assumption].
4 -aInteger0(A) | -aInteger0(B) | -aInteger0(C) | C = sz00 | -sdteqdtlpzmzozddtrp0(A,B,C) | sdteqdtlpzmzozddtrp0(B,A,C).  [clausify(1)].
5 -aInteger0(A) | -aInteger0(B) | -aInteger0(C) | sz00 = C | -sdteqdtlpzmzozddtrp0(A,B,C) | sdteqdtlpzmzozddtrp0(B,A,C).  [copy(4),flip(d)].
6 -aInteger0(A) | -aInteger0(B) | -aInteger0(C) | C = sz00 | -aInteger0(D) | -sdteqdtlpzmzozddtrp0(A,B,C) | -sdteqdtlpzmzozddtrp0(B,D,C) | sdteqdtlpzmzozddtrp0(A,D,C).  [clausify(2)].
7 -aInteger0(A) | -aInteger0(B) | -aInteger0(C) | sz00 = C | -aInteger0(D) | -sdteqdtlpzmzozddtrp0(A,B,C) | -sdteqdtlpzmzozddtrp0(B,D,C) | sdteqdtlpzmzozddtrp0(A,D,C).  [copy(6),flip(d)].
8 aInteger0(xa).  [assumption].
9 aInteger0(xq).  [assumption].
10 xq != sz00.  [assumption].
11 sz00 != xq.  [copy(10),flip(a)].
12 aInteger0(xb).  [assumption].
13 aInteger0(xc).  [assumption].
14 -aElementOf0(A,szAzrzSzezqlpdtcmdtrp0(xa,xq)) | sdteqdtlpzmzozddtrp0(A,xa,xq).  [clausify(3)].
15 -aInteger0(A) | -sdteqdtlpzmzozddtrp0(A,xa,xq) | aElementOf0(A,szAzrzSzezqlpdtcmdtrp0(xa,xq)).  [clausify(3)].
16 -aElementOf0(xb,szAzrzSzezqlpdtcmdtrp0(xa,xq)).  [clausify(3)].
17 sdteqdtlpzmzozddtrp0(xc,xb,xq).  [clausify(3)].
18 aElementOf0(xc,szAzrzSzezqlpdtcmdtrp0(xa,xq)).  [clausify(3)].
19 -aInteger0(A) | -aInteger0(xc) | -aInteger0(xq) | sz00 = xq | -aInteger0(xb) | -sdteqdtlpzmzozddtrp0(A,xc,xq) | sdteqdtlpzmzozddtrp0(A,xb,xq).  [resolve(17,a,7,g)].
20 -aInteger0(A) | -aInteger0(xq) | sz00 = xq | -aInteger0(xb) | -sdteqdtlpzmzozddtrp0(A,xc,xq) | sdteqdtlpzmzozddtrp0(A,xb,xq).  [resolve(13,a,19,b)].
21 -aInteger0(A) | sz00 = xq | -aInteger0(xb) | -sdteqdtlpzmzozddtrp0(A,xc,xq) | sdteqdtlpzmzozddtrp0(A,xb,xq).  [resolve(9,a,20,b)].
22 -aInteger0(A) | -aInteger0(xb) | -sdteqdtlpzmzozddtrp0(A,xc,xq) | sdteqdtlpzmzozddtrp0(A,xb,xq).  [resolve(11,a,21,b)].
23 -aInteger0(A) | -sdteqdtlpzmzozddtrp0(A,xc,xq) | sdteqdtlpzmzozddtrp0(A,xb,xq).  [resolve(12,a,22,b)].
24 sdteqdtlpzmzozddtrp0(xc,xa,xq).  [resolve(18,a,14,a)].
25 -aInteger0(xc) | -aInteger0(xa) | -aInteger0(xq) | sz00 = xq | sdteqdtlpzmzozddtrp0(xa,xc,xq).  [resolve(24,a,5,e)].
26 -aInteger0(xa) | -aInteger0(xq) | sz00 = xq | sdteqdtlpzmzozddtrp0(xa,xc,xq).  [resolve(13,a,25,a)].
27 -aInteger0(xq) | sz00 = xq | sdteqdtlpzmzozddtrp0(xa,xc,xq).  [resolve(8,a,26,a)].
28 sz00 = xq | sdteqdtlpzmzozddtrp0(xa,xc,xq).  [resolve(9,a,27,a)].
29 sdteqdtlpzmzozddtrp0(xa,xc,xq).  [resolve(11,a,28,a)].
30 -aInteger0(xa) | sdteqdtlpzmzozddtrp0(xa,xb,xq).  [resolve(23,b,29,a)].
31 sdteqdtlpzmzozddtrp0(xa,xb,xq).  [resolve(8,a,30,a)].
32 -aInteger0(xa) | -aInteger0(xb) | -aInteger0(xq) | sz00 = xq | sdteqdtlpzmzozddtrp0(xb,xa,xq).  [resolve(31,a,5,e)].
33 -aInteger0(xb) | -aInteger0(xq) | sz00 = xq | sdteqdtlpzmzozddtrp0(xb,xa,xq).  [resolve(8,a,32,a)].
34 -aInteger0(xq) | sz00 = xq | sdteqdtlpzmzozddtrp0(xb,xa,xq).  [resolve(12,a,33,a)].
35 sz00 = xq | sdteqdtlpzmzozddtrp0(xb,xa,xq).  [resolve(9,a,34,a)].
36 sdteqdtlpzmzozddtrp0(xb,xa,xq).  [resolve(11,a,35,a)].
37 -aInteger0(xb) | aElementOf0(xb,szAzrzSzezqlpdtcmdtrp0(xa,xq)).  [resolve(36,a,15,b)].
38 aElementOf0(xb,szAzrzSzezqlpdtcmdtrp0(xa,xq)).  [resolve(12,a,37,a)].
39 $F.  [resolve(16,a,38,a)].

============================== end of proof ==========================
