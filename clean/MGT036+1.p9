





7 -environment(A) | -subpopulations(first_movers,efficient_producers,A,B) | in_environment(A,B).  [clausify(2)].
8 environment(c1).  [clausify(6)].
9 environment(A) | -greater(zero,growth_rate(B,C)).  [clausify(3)].
10 -environment(A) | -subpopulations(first_movers,efficient_producers,A,B) | subpopulations(efficient_producers,first_movers,A,B).  [clausify(1)].
11 -environment(A) | -subpopulations(B,C,A,D) | greater_or_equal(growth_rate(C,D),zero) | -outcompetes(C,B,D).  [clausify(4)].
12 -environment(A) | -subpopulations(B,C,A,D) | greater(zero,growth_rate(B,D)) | -outcompetes(C,B,D).  [clausify(4)].
13 -environment(A) | -in_environment(A,B) | greater(zero,growth_rate(C,B)) | -greater(resilience(D),resilience(C)) | -greater(zero,growth_rate(D,B)).  [clausify(5)].
14 -subpopulations(A,B,c1,C) | greater_or_equal(growth_rate(B,C),zero) | -outcompetes(B,A,C).  [resolve(11,a,8,a)].
15 outcompetes(first_movers,efficient_producers,c2).  [clausify(6)].
16 -subpopulations(A,B,c1,C) | greater(zero,growth_rate(A,C)) | -outcompetes(B,A,C).  [resolve(12,a,8,a)].
17 -greater_or_equal(growth_rate(A,B),zero) | -greater(zero,growth_rate(A,B)).  [clausify(3)].
18 -subpopulations(efficient_producers,first_movers,c1,c2) | greater_or_equal(growth_rate(first_movers,c2),zero).  [resolve(14,c,15,a)].
19 -subpopulations(first_movers,efficient_producers,A,B) | in_environment(A,B) | -greater(zero,growth_rate(C,D)).  [resolve(7,a,9,a)].
20 -in_environment(A,B) | greater(zero,growth_rate(C,B)) | -greater(resilience(D),resilience(C)) | -greater(zero,growth_rate(D,B)) | -greater(zero,growth_rate(E,F)).  [resolve(13,a,9,a)].
21 greater(resilience(efficient_producers),resilience(first_movers)).  [assumption].
22 subpopulations(first_movers,efficient_producers,c1,c2).  [clausify(6)].
23 -subpopulations(first_movers,efficient_producers,c1,A) | subpopulations(efficient_producers,first_movers,c1,A).  [resolve(10,a,8,a)].
24 -subpopulations(efficient_producers,first_movers,c1,c2) | greater(zero,growth_rate(efficient_producers,c2)).  [resolve(16,c,15,a)].
25 -subpopulations(efficient_producers,first_movers,c1,c2) | -greater(zero,growth_rate(first_movers,c2)).  [resolve(18,b,17,a)].
26 greater(zero,growth_rate(A,B)) | -greater(resilience(C),resilience(A)) | -greater(zero,growth_rate(C,B)) | -greater(zero,growth_rate(D,E)) | -subpopulations(first_movers,efficient_producers,F,B) | -greater(zero,growth_rate(V6,V7)).  [resolve(20,a,19,b)].
27 subpopulations(efficient_producers,first_movers,c1,c2).  [resolve(23,a,22,a)].
28 -greater(zero,growth_rate(first_movers,c2)).  [resolve(27,a,25,a)].
29 greater(zero,growth_rate(efficient_producers,c2)).  [resolve(27,a,24,a)].
30 greater(zero,growth_rate(first_movers,A)) | -greater(zero,growth_rate(efficient_producers,A)) | -greater(zero,growth_rate(B,C)) | -subpopulations(first_movers,efficient_producers,D,A) | -greater(zero,growth_rate(E,F)).  [resolve(26,b,21,a)].
31 greater(zero,growth_rate(first_movers,c2)) | -greater(zero,growth_rate(A,B)) | -subpopulations(first_movers,efficient_producers,C,c2) | -greater(zero,growth_rate(D,E)).  [resolve(30,b,29,a)].
32 greater(zero,growth_rate(first_movers,c2)) | -subpopulations(first_movers,efficient_producers,A,c2) | -greater(zero,growth_rate(B,C)).  [resolve(31,b,29,a)].
33 greater(zero,growth_rate(first_movers,c2)) | -greater(zero,growth_rate(A,B)).  [resolve(32,b,22,a)].
34 greater(zero,growth_rate(first_movers,c2)).  [resolve(33,b,29,a)].
35 $F.  [resolve(28,a,34,a)].