











13 ilf_type(A,set_type).  [clausify(11)].
14 ilf_type(c3,binary_relation_type).  [clausify(12)].
15 subset(domain_of(c3),c2).  [clausify(12)].
16 -ilf_type(A,set_type) | -empty(power_set(A)).  [clausify(8)].
17 -empty(power_set(A)).  [resolve(13,a,16,a)].
18 -ilf_type(c3,relation_type(c2,range_of(c3))).  [clausify(12)].
19 -ilf_type(A,set_type) | -empty(A) | -ilf_type(B,set_type) | -member(B,A).  [clausify(10)].
20 -empty(A) | -ilf_type(B,set_type) | -member(B,A).  [resolve(13,a,19,a)].
21 -empty(A) | -member(B,A).  [resolve(13,a,20,b)].
22 -ilf_type(A,binary_relation_type) | subset(A,cross_product(domain_of(A),range_of(A))).  [clausify(2)].
23 -ilf_type(A,set_type) | -ilf_type(B,set_type) | ilf_type(B,subset_type(A)) | -ilf_type(B,member_type(power_set(A))).  [clausify(6)].
24 -ilf_type(A,set_type) | ilf_type(A,subset_type(B)) | -ilf_type(A,member_type(power_set(B))).  [resolve(13,a,23,a)].
25 ilf_type(A,subset_type(B)) | -ilf_type(A,member_type(power_set(B))).  [resolve(13,a,24,a)].
26 -ilf_type(A,set_type) | -ilf_type(B,set_type) | member(A,power_set(B)) | member(f9(A,B),A).  [clausify(7)].
27 -ilf_type(A,set_type) | member(B,power_set(A)) | member(f9(B,A),B).  [resolve(13,a,26,a)].
28 member(A,power_set(B)) | member(f9(A,B),A).  [resolve(13,a,27,a)].
29 -ilf_type(A,set_type) | -ilf_type(B,set_type) | member(A,power_set(B)) | -member(f9(A,B),B).  [clausify(7)].
30 -ilf_type(A,set_type) | member(B,power_set(A)) | -member(f9(B,A),A).  [resolve(13,a,29,a)].
31 member(A,power_set(B)) | -member(f9(A,B),B).  [resolve(13,a,30,a)].
32 -ilf_type(A,set_type) | empty(B) | -ilf_type(B,set_type) | -ilf_type(A,member_type(B)) | member(A,B).  [clausify(9)].
33 empty(A) | -ilf_type(A,set_type) | -ilf_type(B,member_type(A)) | member(B,A).  [resolve(13,a,32,a)].
34 empty(A) | -ilf_type(B,member_type(A)) | member(B,A).  [resolve(13,a,33,b)].
35 -ilf_type(A,set_type) | empty(B) | -ilf_type(B,set_type) | ilf_type(A,member_type(B)) | -member(A,B).  [clausify(9)].
36 empty(A) | -ilf_type(A,set_type) | ilf_type(B,member_type(A)) | -member(B,A).  [resolve(13,a,35,a)].
37 empty(A) | ilf_type(B,member_type(A)) | -member(B,A).  [resolve(13,a,36,b)].
38 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -ilf_type(C,subset_type(cross_product(A,B))) | ilf_type(C,relation_type(A,B)).  [clausify(4)].
39 -ilf_type(A,set_type) | -ilf_type(B,subset_type(cross_product(C,A))) | ilf_type(B,relation_type(C,A)).  [resolve(13,a,38,a)].
40 -ilf_type(A,subset_type(cross_product(B,C))) | ilf_type(A,relation_type(B,C)).  [resolve(13,a,39,a)].
41 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -ilf_type(C,set_type) | -subset(A,B) | -subset(B,C) | subset(A,C).  [clausify(1)].
42 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -subset(C,A) | -subset(A,B) | subset(C,B).  [resolve(13,a,41,a)].
43 -ilf_type(A,set_type) | -subset(B,C) | -subset(C,A) | subset(B,A).  [resolve(13,a,42,a)].
44 -subset(A,B) | -subset(B,C) | subset(A,C).  [resolve(13,a,43,a)].
45 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -subset(A,B) | -ilf_type(C,set_type) | -member(C,A) | member(C,B).  [clausify(5)].
46 -ilf_type(A,set_type) | -subset(B,A) | -ilf_type(C,set_type) | -member(C,B) | member(C,A).  [resolve(13,a,45,a)].
47 -subset(A,B) | -ilf_type(C,set_type) | -member(C,A) | member(C,B).  [resolve(13,a,46,a)].
48 -subset(A,B) | -member(C,A) | member(C,B).  [resolve(13,a,47,b)].
49 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -ilf_type(C,set_type) | -subset(A,B) | subset(cross_product(A,C),cross_product(B,C)).  [clausify(3)].
50 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -subset(C,A) | subset(cross_product(C,B),cross_product(A,B)).  [resolve(13,a,49,a)].
51 -ilf_type(A,set_type) | -subset(B,C) | subset(cross_product(B,A),cross_product(C,A)).  [resolve(13,a,50,a)].
52 -subset(A,B) | subset(cross_product(A,C),cross_product(B,C)).  [resolve(13,a,51,a)].
53 subset(c3,cross_product(domain_of(c3),range_of(c3))).  [resolve(22,a,14,a)].
54 member(A,power_set(B)) | -empty(A).  [resolve(28,b,21,b)].
55 empty(A) | ilf_type(f9(A,B),member_type(A)) | member(A,power_set(B)).  [resolve(37,c,28,b)].
56 -ilf_type(c3,subset_type(cross_product(c2,range_of(c3)))).  [resolve(40,b,18,a)].
57 subset(cross_product(domain_of(c3),A),cross_product(c2,A)).  [resolve(52,a,15,a)].
58 -ilf_type(c3,member_type(power_set(cross_product(c2,range_of(c3))))).  [resolve(25,a,56,a)].
59 ilf_type(A,member_type(power_set(B))) | -member(A,power_set(B)).  [resolve(37,a,17,a)].
60 -member(c3,power_set(cross_product(c2,range_of(c3)))).  [resolve(59,a,58,a)].
61 -member(f9(c3,cross_product(c2,range_of(c3))),cross_product(c2,range_of(c3))).  [resolve(31,a,60,a)].
62 -empty(c3).  [resolve(54,a,60,a)].
63 empty(c3) | ilf_type(f9(c3,cross_product(c2,range_of(c3))),member_type(c3)).  [resolve(55,c,60,a)].
64 ilf_type(f9(c3,cross_product(c2,range_of(c3))),member_type(c3)).  [resolve(62,a,63,a)].
65 empty(c3) | member(f9(c3,cross_product(c2,range_of(c3))),c3).  [resolve(64,a,34,b)].
66 member(f9(c3,cross_product(c2,range_of(c3))),c3).  [resolve(62,a,65,a)].
67 -subset(c3,A) | member(f9(c3,cross_product(c2,range_of(c3))),A).  [resolve(48,b,66,a)].
68 -subset(c3,cross_product(c2,range_of(c3))).  [resolve(67,b,61,a)].
69 -subset(A,cross_product(domain_of(c3),B)) | subset(A,cross_product(c2,B)).  [resolve(44,b,57,a)].
70 -subset(c3,cross_product(domain_of(c3),range_of(c3))).  [resolve(69,b,68,a)].
71 $F.  [resolve(53,a,70,a)].