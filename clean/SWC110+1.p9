






8 -ssList(A) | -ssList(B) | -rearsegP(A,B) | ssList(f5(A,B)).  [clausify(1)].
9 -ssList(A) | -ssList(B) | -rearsegP(A,B) | app(f5(A,B),B) = A.  [clausify(1)].
10 -ssList(A) | -ssList(B) | neq(A,B) | B = A.  [clausify(2)].
11 ssList(nil).  [assumption].
12 -ssList(A) | rearsegP(A,A).  [clausify(3)].
13 -ssList(A) | segmentP(A,A).  [clausify(4)].
14 -ssList(A) | -ssList(B) | -ssList(C) | -ssList(D) | -segmentP(A,B) | segmentP(app(app(C,A),D),B).  [clausify(5)].
15 -ssList(A) | -ssList(B) | app(A,B) != nil | nil = A.  [clausify(6)].
16 ssList(c3).  [clausify(7)].
17 c6 = c4.  [clausify(7)].
18 c5 = c3.  [clausify(7)].
19 ssList(c7).  [clausify(7)].
20 app(c5,c7) = c6.  [clausify(7)].
21 app(c3,c7) = c6.  [para(18(a,1),20(a,1,1))].
22 app(c3,c7) = c4.  [para(17(a,1),21(a,2))].
23 nil = c6 | nil != c5.  [clausify(7)].
24 nil = c4 | nil != c5.  [para(17(a,1),23(a,2))].
25 nil = c4 | nil != c3.  [para(18(a,1),24(b,2))].
26 c4 = nil | nil != c3.  [copy(25),flip(a)].
27 c4 = nil | c3 != nil.  [copy(26),flip(b)].
28 nil = c4 | -neq(c3,nil) | -segmentP(c4,c3).  [clausify(7)].
29 c4 = nil | -neq(c3,nil) | -segmentP(c4,c3).  [copy(28),flip(a)].
30 nil != c3 | neq(c4,nil).  [clausify(7)].
31 c3 != nil | neq(c4,nil).  [copy(30),flip(a)].
32 nil != c3 | -neq(c3,nil) | -segmentP(c4,c3).  [clausify(7)].
33 c3 != nil | -neq(c3,nil) | -segmentP(c4,c3).  [copy(32),flip(a)].
34 -ssList(A) | -rearsegP(A,A) | ssList(f5(A,A)).  [factor(8,a,b)].
35 -ssList(A) | -rearsegP(A,A) | app(f5(A,A),A) = A.  [factor(9,a,b)].
36 -ssList(A) | -ssList(B) | -ssList(C) | -segmentP(A,A) | segmentP(app(app(B,A),C),A).  [factor(14,a,b)].
37 -ssList(A) | neq(A,nil) | nil = A.  [resolve(11,a,10,b)].
38 -ssList(A) | app(c3,A) != nil | nil = c3.  [resolve(16,a,15,a)].
39 -ssList(A) | app(c3,A) != nil | c3 = nil.  [copy(38),flip(c)].
40 segmentP(c3,c3).  [resolve(16,a,13,a)].
41 rearsegP(c3,c3).  [resolve(16,a,12,a)].
42 -ssList(c3) | -ssList(A) | -ssList(B) | segmentP(app(app(A,c3),B),c3).  [resolve(40,a,36,d)].
43 -ssList(A) | -ssList(B) | segmentP(app(app(A,c3),B),c3).  [resolve(16,a,42,a)].
44 -ssList(c3) | app(f5(c3,c3),c3) = c3.  [resolve(41,a,35,b)].
45 app(f5(c3,c3),c3) = c3.  [resolve(16,a,44,a)].
46 -ssList(c3) | ssList(f5(c3,c3)).  [resolve(41,a,34,b)].
47 ssList(f5(c3,c3)).  [resolve(16,a,46,a)].
48 neq(c3,nil) | nil = c3.  [resolve(37,a,16,a)].
49 neq(c3,nil) | c3 = nil.  [copy(48),flip(b)].
50 c3 = nil | c4 = nil | -segmentP(c4,c3).  [resolve(49,a,29,b)].
51 app(c3,c7) != nil | c3 = nil.  [resolve(39,a,19,a)].
52 c4 != nil | c3 = nil.  [para(22(a,1),51(a,1))].
53 -ssList(A) | segmentP(app(app(f5(c3,c3),c3),A),c3).  [resolve(43,a,47,a)].
54 -ssList(A) | segmentP(app(c3,A),c3).  [para(45(a,1),53(b,1,1))].
55 segmentP(app(c3,c7),c3).  [resolve(54,a,19,a)].
56 segmentP(c4,c3).  [para(22(a,1),55(a,1))].
57 c3 = nil | c4 = nil.  [resolve(56,a,50,c)].
58 c3 != nil | -neq(c3,nil).  [resolve(56,a,33,c)].
59 c3 = nil | c3 = nil.  [resolve(57,b,52,a)].
60 c3 = nil.  [copy(59),merge(b)].
61 nil != nil | -neq(c3,nil).  [para(60(a,1),58(a,1))].
62 nil != nil | -neq(nil,nil).  [para(60(a,1),61(b,1))].
63 -neq(nil,nil).  [copy(62),xx(a)].
64 nil != nil | neq(c4,nil).  [para(60(a,1),31(a,1))].
65 neq(c4,nil).  [copy(64),xx(a)].
66 c4 = nil | nil != nil.  [para(60(a,1),27(b,1))].
67 c4 = nil.  [copy(66),xx(b)].
68 neq(nil,nil).  [para(67(a,1),65(a,1))].
69 $F.  [resolve(63,a,68,a)].