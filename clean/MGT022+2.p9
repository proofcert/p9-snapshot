


4 -environment(A) | -subpopulations(B,C,A,D) | -greater(resilience(C),resilience(B)) | -decreases(resources(A,D)) | increases(difference(disbanding_rate(B,D),disbanding_rate(C,D))).  [clausify(2)].
5 environment(c1).  [clausify(3)].
6 -environment(A) | -subpopulations(B,C,A,D) | -greater(resilience(C),resilience(B)) | -constant(resources(A,D)) | constant(difference(disbanding_rate(B,D),disbanding_rate(C,D))).  [clausify(2)].
7 -subpopulations(A,B,c1,C) | -greater(resilience(B),resilience(A)) | -decreases(resources(c1,C)) | increases(difference(disbanding_rate(A,C),disbanding_rate(B,C))).  [resolve(4,a,5,a)].
8 greater(resilience(efficient_producers),resilience(first_movers)).  [assumption].
9 -subpopulations(A,B,c1,C) | -greater(resilience(B),resilience(A)) | -constant(resources(c1,C)) | constant(difference(disbanding_rate(A,C),disbanding_rate(B,C))).  [resolve(6,a,5,a)].
10 -subpopulations(first_movers,efficient_producers,c1,A) | -decreases(resources(c1,A)) | increases(difference(disbanding_rate(first_movers,A),disbanding_rate(efficient_producers,A))).  [resolve(7,b,8,a)].
11 subpopulations(first_movers,efficient_producers,c1,c2).  [clausify(3)].
12 -subpopulations(first_movers,efficient_producers,c1,A) | -constant(resources(c1,A)) | constant(difference(disbanding_rate(first_movers,A),disbanding_rate(efficient_producers,A))).  [resolve(9,b,8,a)].
13 -decreases(resources(c1,c2)) | increases(difference(disbanding_rate(first_movers,c2),disbanding_rate(efficient_producers,c2))).  [resolve(10,a,11,a)].
14 -increases(difference(disbanding_rate(first_movers,c2),disbanding_rate(efficient_producers,c2))) | constant(resources(c1,c2)).  [clausify(3)].
15 decreases(resources(c1,c2)) | constant(resources(c1,c2)).  [clausify(3)].
16 decreases(resources(c1,c2)) | decreases(difference(disbanding_rate(first_movers,c2),disbanding_rate(efficient_producers,c2))).  [clausify(3)].
17 -constant(A) | -decreases(A).  [clausify(1)].
18 -constant(resources(c1,c2)) | constant(difference(disbanding_rate(first_movers,c2),disbanding_rate(efficient_producers,c2))).  [resolve(12,a,11,a)].
19 -decreases(resources(c1,c2)) | constant(resources(c1,c2)).  [resolve(13,b,14,a)].
20 constant(difference(disbanding_rate(first_movers,c2),disbanding_rate(efficient_producers,c2))) | decreases(resources(c1,c2)).  [resolve(18,a,15,b)].
21 decreases(resources(c1,c2)) | -decreases(difference(disbanding_rate(first_movers,c2),disbanding_rate(efficient_producers,c2))).  [resolve(20,a,17,a)].
22 decreases(resources(c1,c2)) | decreases(resources(c1,c2)).  [resolve(21,b,16,b)].
23 decreases(resources(c1,c2)).  [copy(22),merge(b)].
24 constant(resources(c1,c2)).  [resolve(23,a,19,a)].
25 -constant(resources(c1,c2)).  [resolve(17,b,23,a)].
26 $F.  [resolve(24,a,25,a)].