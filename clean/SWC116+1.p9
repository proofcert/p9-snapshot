

3 -ssList(A) | -ssList(B) | neq(A,B) | B = A.  [clausify(1)].
4 ssList(nil).  [assumption].
5 ssList(c4).  [clausify(2)].
6 c6 = c4.  [clausify(2)].
7 c5 = c3.  [clausify(2)].
8 nil = c5 | nil != c6.  [clausify(2)].
9 nil = c3 | nil != c6.  [para(7(a,1),8(a,2))].
10 nil = c3 | nil != c4.  [para(6(a,1),9(b,2))].
11 c3 = nil | nil != c4.  [copy(10),flip(a)].
12 c3 = nil | c4 != nil.  [copy(11),flip(b)].
13 nil != c4 | nil != c3.  [clausify(2)].
14 c4 != nil | nil != c3.  [copy(13),flip(a)].
15 c4 != nil | c3 != nil.  [copy(14),flip(b)].
16 -neq(c3,nil) | -segmentP(c4,c3).  [clausify(2)].
17 -neq(c6,nil) | neq(c5,nil).  [clausify(2)].
18 -neq(c4,nil) | neq(c5,nil).  [para(6(a,1),17(a,1))].
19 -neq(c4,nil) | neq(c3,nil).  [para(7(a,1),18(b,1))].
20 -neq(c6,nil) | segmentP(c6,c5).  [clausify(2)].
21 -neq(c4,nil) | segmentP(c6,c5).  [para(6(a,1),20(a,1))].
22 -neq(c4,nil) | segmentP(c4,c5).  [para(6(a,1),21(b,1))].
23 -neq(c4,nil) | segmentP(c4,c3).  [para(7(a,1),22(b,2))].
24 -ssList(A) | neq(A,nil) | nil = A.  [resolve(4,a,3,b)].
25 neq(c4,nil) | nil = c4.  [resolve(24,a,5,a)].
26 neq(c4,nil) | c4 = nil.  [copy(25),flip(b)].
27 c4 = nil | segmentP(c4,c3).  [resolve(26,a,23,a)].
28 c4 = nil | neq(c3,nil).  [resolve(26,a,19,a)].
29 c4 = nil | -segmentP(c4,c3).  [resolve(28,b,16,a)].
30 c4 = nil | c4 = nil.  [resolve(29,b,27,b)].
31 c4 = nil.  [copy(30),merge(b)].
32 nil != nil | c3 != nil.  [para(31(a,1),15(a,1))].
33 c3 != nil.  [copy(32),xx(a)].
34 c3 = nil | nil != nil.  [para(31(a,1),12(b,1))].
35 c3 = nil.  [copy(34),xx(b)].
36 $F.  [resolve(33,a,35,a)].