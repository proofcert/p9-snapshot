





7 hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_int,zero_zero_int),hAPP_int_int(plus_plus_int(one_one_int),hAPP_nat_int(semiri1621563631at_int,n)))).  [assumption].
8 one_one_int = number_number_of_int(bit1(pls)).  [assumption].
9 number_number_of_int(bit1(pls)) = one_one_int.  [copy(8),flip(a)].
10 pls = zero_zero_int.  [assumption].
11 zero_zero_int = pls.  [copy(10),flip(a)].
12 bit0(A) = hAPP_int_int(plus_plus_int(A),A).  [clausify(1)].
13 number_number_of_int(A) = A.  [clausify(2)].
14 A = zero_zero_int | hAPP_nat_int(power_power_int(A),B) != zero_zero_int.  [clausify(3)].
15 A = pls | hAPP_nat_int(power_power_int(A),B) != zero_zero_int.  [para(11(a,1),14(a,2))].
16 A = pls | hAPP_nat_int(power_power_int(A),B) != pls.  [para(11(a,1),15(b,2))].
17 pls = A | hAPP_nat_int(power_power_int(A),B) != pls.  [copy(16),flip(a)].
18 -hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_int,A),B)) | A != B.  [clausify(4)].
19 succ(A) = hAPP_int_int(plus_plus_int(A),one_one_int).  [clausify(5)].
20 hAPP_int_int(plus_plus_int(A),one_one_int) = succ(A).  [copy(19),flip(a)].
21 hAPP_nat_int(power_power_int(hAPP_int_int(plus_plus_int(one_one_int),hAPP_nat_int(semiri1621563631at_int,n))),number_number_of_nat(bit0(bit1(pls)))) = zero_zero_int.  [clausify(6)].
22 hAPP_nat_int(power_power_int(hAPP_int_int(plus_plus_int(one_one_int),hAPP_nat_int(semiri1621563631at_int,n))),number_number_of_nat(hAPP_int_int(plus_plus_int(bit1(pls)),bit1(pls)))) = zero_zero_int.  [para(12(a,1),21(a,1,2,1))].
23 hAPP_nat_int(power_power_int(hAPP_int_int(plus_plus_int(one_one_int),hAPP_nat_int(semiri1621563631at_int,n))),number_number_of_nat(hAPP_int_int(plus_plus_int(bit1(pls)),bit1(pls)))) = pls.  [para(11(a,1),22(a,2))].
24 hBOOL(hAPP_int_bool(hAPP_i1948725293t_bool(ord_less_int,pls),hAPP_int_int(plus_plus_int(one_one_int),hAPP_nat_int(semiri1621563631at_int,n)))).  [para(11(a,1),7(a,1,1,2))].
25 bit1(pls) = one_one_int.  [para(13(a,1),9(a,1))].
26 hAPP_nat_int(power_power_int(hAPP_int_int(plus_plus_int(one_one_int),hAPP_nat_int(semiri1621563631at_int,n))),number_number_of_nat(hAPP_int_int(plus_plus_int(one_one_int),bit1(pls)))) = pls.  [para(25(a,1),23(a,1,2,1,1,1))].
27 hAPP_nat_int(power_power_int(hAPP_int_int(plus_plus_int(one_one_int),hAPP_nat_int(semiri1621563631at_int,n))),number_number_of_nat(hAPP_int_int(plus_plus_int(one_one_int),one_one_int))) = pls.  [para(25(a,1),26(a,1,2,1,2))].
28 hAPP_nat_int(power_power_int(hAPP_int_int(plus_plus_int(one_one_int),hAPP_nat_int(semiri1621563631at_int,n))),number_number_of_nat(succ(one_one_int))) = pls.  [para(20(a,1),27(a,1,2,1))].
29 pls != hAPP_int_int(plus_plus_int(one_one_int),hAPP_nat_int(semiri1621563631at_int,n)).  [resolve(24,a,18,a)].
30 hAPP_int_int(plus_plus_int(one_one_int),hAPP_nat_int(semiri1621563631at_int,n)) != pls.  [copy(29),flip(a)].
31 pls = hAPP_int_int(plus_plus_int(one_one_int),hAPP_nat_int(semiri1621563631at_int,n)).  [resolve(28,a,17,b)].
32 hAPP_int_int(plus_plus_int(one_one_int),hAPP_nat_int(semiri1621563631at_int,n)) = pls.  [copy(31),flip(a)].
33 $F.  [resolve(30,a,32,a)].