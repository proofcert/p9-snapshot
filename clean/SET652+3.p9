














16 -ilf_type(A,set_type) | ilf_type(A,binary_relation_type) | -relation_like(A).  [clausify(7)].
17 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -ilf_type(C,subset_type(cross_product(A,B))) | relation_like(C).  [clausify(12)].
18 ilf_type(A,set_type).  [clausify(14)].
19 subset(range_of(c5),c3).  [clausify(15)].
20 ilf_type(c5,relation_type(c4,c2)).  [clausify(15)].
21 -ilf_type(c5,relation_type(c4,c3)).  [clausify(15)].
22 -ilf_type(A,set_type) | -empty(power_set(A)).  [clausify(10)].
23 -empty(power_set(A)).  [resolve(18,a,22,a)].
24 -ilf_type(A,set_type) | -empty(A) | -ilf_type(B,set_type) | -member(B,A).  [clausify(13)].
25 -empty(A) | -ilf_type(B,set_type) | -member(B,A).  [resolve(18,a,24,a)].
26 -empty(A) | -member(B,A).  [resolve(18,a,25,b)].
27 -ilf_type(A,binary_relation_type) | subset(A,cross_product(domain_of(A),range_of(A))).  [clausify(2)].
28 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -ilf_type(C,relation_type(A,B)) | subset(domain_of(C),A).  [clausify(5)].
29 -ilf_type(A,set_type) | -ilf_type(B,relation_type(C,A)) | subset(domain_of(B),C).  [resolve(18,a,28,a)].
30 -ilf_type(A,relation_type(B,C)) | subset(domain_of(A),B).  [resolve(18,a,29,a)].
31 -ilf_type(A,set_type) | -ilf_type(B,set_type) | ilf_type(B,subset_type(A)) | -ilf_type(B,member_type(power_set(A))).  [clausify(8)].
32 -ilf_type(A,set_type) | ilf_type(A,subset_type(B)) | -ilf_type(A,member_type(power_set(B))).  [resolve(18,a,31,a)].
33 ilf_type(A,subset_type(B)) | -ilf_type(A,member_type(power_set(B))).  [resolve(18,a,32,a)].
34 -ilf_type(A,set_type) | -ilf_type(B,set_type) | member(A,power_set(B)) | member(f5(A,B),A).  [clausify(9)].
35 -ilf_type(A,set_type) | member(B,power_set(A)) | member(f5(B,A),B).  [resolve(18,a,34,a)].
36 member(A,power_set(B)) | member(f5(A,B),A).  [resolve(18,a,35,a)].
37 -ilf_type(A,set_type) | -ilf_type(B,set_type) | member(A,power_set(B)) | -member(f5(A,B),B).  [clausify(9)].
38 -ilf_type(A,set_type) | member(B,power_set(A)) | -member(f5(B,A),A).  [resolve(18,a,37,a)].
39 member(A,power_set(B)) | -member(f5(A,B),B).  [resolve(18,a,38,a)].
40 -ilf_type(A,set_type) | empty(B) | -ilf_type(B,set_type) | -ilf_type(A,member_type(B)) | member(A,B).  [clausify(11)].
41 empty(A) | -ilf_type(A,set_type) | -ilf_type(B,member_type(A)) | member(B,A).  [resolve(18,a,40,a)].
42 empty(A) | -ilf_type(B,member_type(A)) | member(B,A).  [resolve(18,a,41,b)].
43 -ilf_type(A,set_type) | empty(B) | -ilf_type(B,set_type) | ilf_type(A,member_type(B)) | -member(A,B).  [clausify(11)].
44 empty(A) | -ilf_type(A,set_type) | ilf_type(B,member_type(A)) | -member(B,A).  [resolve(18,a,43,a)].
45 empty(A) | ilf_type(B,member_type(A)) | -member(B,A).  [resolve(18,a,44,b)].
46 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -ilf_type(C,subset_type(cross_product(A,B))) | ilf_type(C,relation_type(A,B)).  [clausify(4)].
47 -ilf_type(A,set_type) | -ilf_type(B,subset_type(cross_product(C,A))) | ilf_type(B,relation_type(C,A)).  [resolve(18,a,46,a)].
48 -ilf_type(A,subset_type(cross_product(B,C))) | ilf_type(A,relation_type(B,C)).  [resolve(18,a,47,a)].
49 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -ilf_type(C,relation_type(A,B)) | ilf_type(C,subset_type(cross_product(A,B))).  [clausify(4)].
50 -ilf_type(A,set_type) | -ilf_type(B,relation_type(C,A)) | ilf_type(B,subset_type(cross_product(C,A))).  [resolve(18,a,49,a)].
51 -ilf_type(A,relation_type(B,C)) | ilf_type(A,subset_type(cross_product(B,C))).  [resolve(18,a,50,a)].
52 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -ilf_type(C,set_type) | -subset(A,B) | -subset(B,C) | subset(A,C).  [clausify(1)].
53 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -subset(C,A) | -subset(A,B) | subset(C,B).  [resolve(18,a,52,a)].
54 -ilf_type(A,set_type) | -subset(B,C) | -subset(C,A) | subset(B,A).  [resolve(18,a,53,a)].
55 -subset(A,B) | -subset(B,C) | subset(A,C).  [resolve(18,a,54,a)].
56 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -subset(A,B) | -ilf_type(C,set_type) | -member(C,A) | member(C,B).  [clausify(6)].
57 -ilf_type(A,set_type) | -subset(B,A) | -ilf_type(C,set_type) | -member(C,B) | member(C,A).  [resolve(18,a,56,a)].
58 -subset(A,B) | -ilf_type(C,set_type) | -member(C,A) | member(C,B).  [resolve(18,a,57,a)].
59 -subset(A,B) | -member(C,A) | member(C,B).  [resolve(18,a,58,b)].
60 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -ilf_type(C,set_type) | -ilf_type(D,set_type) | -subset(A,B) | -subset(C,D) | subset(cross_product(A,C),cross_product(B,D)).  [clausify(3)].
61 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -ilf_type(C,set_type) | -subset(D,A) | -subset(B,C) | subset(cross_product(D,B),cross_product(A,C)).  [resolve(18,a,60,a)].
62 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -subset(C,D) | -subset(A,B) | subset(cross_product(C,A),cross_product(D,B)).  [resolve(18,a,61,a)].
63 -ilf_type(A,set_type) | -subset(B,C) | -subset(D,A) | subset(cross_product(B,D),cross_product(C,A)).  [resolve(18,a,62,a)].
64 -subset(A,B) | -subset(C,D) | subset(cross_product(A,C),cross_product(B,D)).  [resolve(18,a,63,a)].
65 -ilf_type(A,set_type) | -ilf_type(B,set_type) | -ilf_type(C,subset_type(cross_product(A,B))) | -ilf_type(C,set_type) | ilf_type(C,binary_relation_type).  [resolve(17,d,16,c)].
66 -ilf_type(A,set_type) | -ilf_type(B,subset_type(cross_product(C,A))) | -ilf_type(B,set_type) | ilf_type(B,binary_relation_type).  [resolve(18,a,65,a)].
67 -ilf_type(A,subset_type(cross_product(B,C))) | -ilf_type(A,set_type) | ilf_type(A,binary_relation_type).  [resolve(18,a,66,a)].
68 -ilf_type(A,subset_type(cross_product(B,C))) | ilf_type(A,binary_relation_type).  [resolve(18,a,67,b)].
69 subset(domain_of(c5),c4).  [resolve(30,a,20,a)].
70 member(A,power_set(B)) | -empty(A).  [resolve(36,b,26,b)].
71 empty(A) | ilf_type(f5(A,B),member_type(A)) | member(A,power_set(B)).  [resolve(45,c,36,b)].
72 -ilf_type(c5,subset_type(cross_product(c4,c3))).  [resolve(48,b,21,a)].
73 ilf_type(c5,subset_type(cross_product(c4,c2))).  [resolve(51,a,20,a)].
74 -ilf_type(c5,member_type(power_set(cross_product(c4,c3)))).  [resolve(33,a,72,a)].
75 ilf_type(A,member_type(power_set(B))) | -member(A,power_set(B)).  [resolve(45,a,23,a)].
76 -member(c5,power_set(cross_product(c4,c3))).  [resolve(75,a,74,a)].
77 -member(f5(c5,cross_product(c4,c3)),cross_product(c4,c3)).  [resolve(39,a,76,a)].
78 -empty(c5).  [resolve(70,a,76,a)].
79 ilf_type(c5,binary_relation_type).  [resolve(73,a,68,a)].
80 empty(c5) | ilf_type(f5(c5,cross_product(c4,c3)),member_type(c5)).  [resolve(71,c,76,a)].
81 ilf_type(f5(c5,cross_product(c4,c3)),member_type(c5)).  [resolve(78,a,80,a)].
82 subset(c5,cross_product(domain_of(c5),range_of(c5))).  [resolve(79,a,27,a)].
83 empty(c5) | member(f5(c5,cross_product(c4,c3)),c5).  [resolve(81,a,42,b)].
84 member(f5(c5,cross_product(c4,c3)),c5).  [resolve(78,a,83,a)].
85 -subset(c5,A) | member(f5(c5,cross_product(c4,c3)),A).  [resolve(59,b,84,a)].
86 -subset(c5,cross_product(c4,c3)).  [resolve(85,b,77,a)].
87 -subset(cross_product(domain_of(c5),range_of(c5)),A) | subset(c5,A).  [resolve(55,a,82,a)].
88 -subset(cross_product(domain_of(c5),range_of(c5)),cross_product(c4,c3)).  [resolve(87,b,86,a)].
89 -subset(A,B) | subset(cross_product(A,range_of(c5)),cross_product(B,c3)).  [resolve(64,b,19,a)].
90 -subset(domain_of(c5),c4).  [resolve(89,b,88,a)].
91 $F.  [resolve(69,a,90,a)].