


4 check_cpq(im_succ_cpq(triple(c1,c2,c3))).  [clausify(3)].
5 ok(im_succ_cpq(triple(c1,c2,c3))).  [clausify(3)].
6 -check_cpq(triple(c1,c2,c3)) | -ok(triple(c1,c2,c3)).  [clausify(3)].
7 ok(triple(A,B,C)) | -ok(im_succ_cpq(triple(A,B,C))).  [clausify(1)].
8 check_cpq(triple(A,B,C)) | -check_cpq(im_succ_cpq(triple(A,B,C))) | -ok(im_succ_cpq(triple(A,B,C))).  [clausify(2)].
9 ok(triple(c1,c2,c3)).  [resolve(7,b,5,a)].
10 -check_cpq(triple(c1,c2,c3)).  [resolve(9,a,6,b)].
11 check_cpq(triple(c1,c2,c3)) | -check_cpq(im_succ_cpq(triple(c1,c2,c3))).  [resolve(8,c,5,a)].
12 -check_cpq(im_succ_cpq(triple(c1,c2,c3))).  [resolve(10,a,11,a)].
13 $F.  [resolve(4,a,12,a)].